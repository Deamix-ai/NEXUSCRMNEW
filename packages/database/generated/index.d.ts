
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>
/**
 * Model Room
 * 
 */
export type Room = $Result.DefaultSelection<Prisma.$RoomPayload>
/**
 * Model Deal
 * 
 */
export type Deal = $Result.DefaultSelection<Prisma.$DealPayload>
/**
 * Model PipelineStage
 * 
 */
export type PipelineStage = $Result.DefaultSelection<Prisma.$PipelineStagePayload>
/**
 * Model Activity
 * 
 */
export type Activity = $Result.DefaultSelection<Prisma.$ActivityPayload>
/**
 * Model Task
 * 
 */
export type Task = $Result.DefaultSelection<Prisma.$TaskPayload>
/**
 * Model Appointment
 * 
 */
export type Appointment = $Result.DefaultSelection<Prisma.$AppointmentPayload>
/**
 * Model Document
 * 
 */
export type Document = $Result.DefaultSelection<Prisma.$DocumentPayload>
/**
 * Model DesignVersion
 * 
 */
export type DesignVersion = $Result.DefaultSelection<Prisma.$DesignVersionPayload>
/**
 * Model ParsedSpecItem
 * 
 */
export type ParsedSpecItem = $Result.DefaultSelection<Prisma.$ParsedSpecItemPayload>
/**
 * Model Snag
 * 
 */
export type Snag = $Result.DefaultSelection<Prisma.$SnagPayload>
/**
 * Model Job
 * 
 */
export type Job = $Result.DefaultSelection<Prisma.$JobPayload>
/**
 * Model FormSubmission
 * 
 */
export type FormSubmission = $Result.DefaultSelection<Prisma.$FormSubmissionPayload>
/**
 * Model EventLog
 * 
 */
export type EventLog = $Result.DefaultSelection<Prisma.$EventLogPayload>
/**
 * Model Lead
 * 
 */
export type Lead = $Result.DefaultSelection<Prisma.$LeadPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  SALES: 'SALES',
  DESIGNER: 'DESIGNER',
  INSTALLER: 'INSTALLER',
  FINANCE: 'FINANCE'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const ClientStatus: {
  ACTIVE: 'ACTIVE',
  ARCHIVED: 'ARCHIVED'
};

export type ClientStatus = (typeof ClientStatus)[keyof typeof ClientStatus]


export const RoomType: {
  KITCHEN: 'KITCHEN',
  BATHROOM: 'BATHROOM',
  CLOAKROOM: 'CLOAKROOM',
  OTHER: 'OTHER'
};

export type RoomType = (typeof RoomType)[keyof typeof RoomType]


export const RoomStatus: {
  ACTIVE: 'ACTIVE',
  WON: 'WON',
  LOST: 'LOST',
  ONHOLD: 'ONHOLD',
  COMPLETED: 'COMPLETED'
};

export type RoomStatus = (typeof RoomStatus)[keyof typeof RoomStatus]


export const ActivityType: {
  NOTE: 'NOTE',
  CALL: 'CALL',
  EMAIL: 'EMAIL',
  SMS: 'SMS',
  MEETING: 'MEETING',
  VOICEMAIL: 'VOICEMAIL',
  SIGNATURE: 'SIGNATURE',
  UPLOAD: 'UPLOAD',
  FORM: 'FORM',
  SYSTEM: 'SYSTEM'
};

export type ActivityType = (typeof ActivityType)[keyof typeof ActivityType]


export const TaskStatus: {
  OPEN: 'OPEN',
  DONE: 'DONE',
  CANCELLED: 'CANCELLED'
};

export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus]


export const AppointmentType: {
  CONSULT: 'CONSULT',
  SURVEY: 'SURVEY',
  PRESENTATION: 'PRESENTATION',
  INSTALL: 'INSTALL',
  AFTERCARE: 'AFTERCARE'
};

export type AppointmentType = (typeof AppointmentType)[keyof typeof AppointmentType]


export const DocCategory: {
  DRAWING: 'DRAWING',
  SURVEY_PACK: 'SURVEY_PACK',
  PRODUCT_LIST: 'PRODUCT_LIST',
  CONTRACT: 'CONTRACT',
  PHOTO: 'PHOTO',
  CERTIFICATE: 'CERTIFICATE',
  RENDER: 'RENDER',
  OTHER: 'OTHER'
};

export type DocCategory = (typeof DocCategory)[keyof typeof DocCategory]


export const SpecStatus: {
  PENDING: 'PENDING',
  ORDERED: 'ORDERED',
  DELIVERED: 'DELIVERED',
  ONSITE: 'ONSITE'
};

export type SpecStatus = (typeof SpecStatus)[keyof typeof SpecStatus]


export const SnagStatus: {
  OPEN: 'OPEN',
  RESOLVED: 'RESOLVED'
};

export type SnagStatus = (typeof SnagStatus)[keyof typeof SnagStatus]


export const JobStatus: {
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus]


export const LeadStatus: {
  NEW: 'NEW',
  CONTACTED: 'CONTACTED',
  QUALIFIED: 'QUALIFIED',
  PROPOSAL_SENT: 'PROPOSAL_SENT',
  NEGOTIATING: 'NEGOTIATING',
  WON: 'WON',
  LOST: 'LOST'
};

export type LeadStatus = (typeof LeadStatus)[keyof typeof LeadStatus]


export const Priority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type Priority = (typeof Priority)[keyof typeof Priority]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type ClientStatus = $Enums.ClientStatus

export const ClientStatus: typeof $Enums.ClientStatus

export type RoomType = $Enums.RoomType

export const RoomType: typeof $Enums.RoomType

export type RoomStatus = $Enums.RoomStatus

export const RoomStatus: typeof $Enums.RoomStatus

export type ActivityType = $Enums.ActivityType

export const ActivityType: typeof $Enums.ActivityType

export type TaskStatus = $Enums.TaskStatus

export const TaskStatus: typeof $Enums.TaskStatus

export type AppointmentType = $Enums.AppointmentType

export const AppointmentType: typeof $Enums.AppointmentType

export type DocCategory = $Enums.DocCategory

export const DocCategory: typeof $Enums.DocCategory

export type SpecStatus = $Enums.SpecStatus

export const SpecStatus: typeof $Enums.SpecStatus

export type SnagStatus = $Enums.SnagStatus

export const SnagStatus: typeof $Enums.SnagStatus

export type JobStatus = $Enums.JobStatus

export const JobStatus: typeof $Enums.JobStatus

export type LeadStatus = $Enums.LeadStatus

export const LeadStatus: typeof $Enums.LeadStatus

export type Priority = $Enums.Priority

export const Priority: typeof $Enums.Priority

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs>;

  /**
   * `prisma.room`: Exposes CRUD operations for the **Room** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rooms
    * const rooms = await prisma.room.findMany()
    * ```
    */
  get room(): Prisma.RoomDelegate<ExtArgs>;

  /**
   * `prisma.deal`: Exposes CRUD operations for the **Deal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Deals
    * const deals = await prisma.deal.findMany()
    * ```
    */
  get deal(): Prisma.DealDelegate<ExtArgs>;

  /**
   * `prisma.pipelineStage`: Exposes CRUD operations for the **PipelineStage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PipelineStages
    * const pipelineStages = await prisma.pipelineStage.findMany()
    * ```
    */
  get pipelineStage(): Prisma.PipelineStageDelegate<ExtArgs>;

  /**
   * `prisma.activity`: Exposes CRUD operations for the **Activity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activities
    * const activities = await prisma.activity.findMany()
    * ```
    */
  get activity(): Prisma.ActivityDelegate<ExtArgs>;

  /**
   * `prisma.task`: Exposes CRUD operations for the **Task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.task.findMany()
    * ```
    */
  get task(): Prisma.TaskDelegate<ExtArgs>;

  /**
   * `prisma.appointment`: Exposes CRUD operations for the **Appointment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Appointments
    * const appointments = await prisma.appointment.findMany()
    * ```
    */
  get appointment(): Prisma.AppointmentDelegate<ExtArgs>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **Document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.DocumentDelegate<ExtArgs>;

  /**
   * `prisma.designVersion`: Exposes CRUD operations for the **DesignVersion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DesignVersions
    * const designVersions = await prisma.designVersion.findMany()
    * ```
    */
  get designVersion(): Prisma.DesignVersionDelegate<ExtArgs>;

  /**
   * `prisma.parsedSpecItem`: Exposes CRUD operations for the **ParsedSpecItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ParsedSpecItems
    * const parsedSpecItems = await prisma.parsedSpecItem.findMany()
    * ```
    */
  get parsedSpecItem(): Prisma.ParsedSpecItemDelegate<ExtArgs>;

  /**
   * `prisma.snag`: Exposes CRUD operations for the **Snag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Snags
    * const snags = await prisma.snag.findMany()
    * ```
    */
  get snag(): Prisma.SnagDelegate<ExtArgs>;

  /**
   * `prisma.job`: Exposes CRUD operations for the **Job** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jobs
    * const jobs = await prisma.job.findMany()
    * ```
    */
  get job(): Prisma.JobDelegate<ExtArgs>;

  /**
   * `prisma.formSubmission`: Exposes CRUD operations for the **FormSubmission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormSubmissions
    * const formSubmissions = await prisma.formSubmission.findMany()
    * ```
    */
  get formSubmission(): Prisma.FormSubmissionDelegate<ExtArgs>;

  /**
   * `prisma.eventLog`: Exposes CRUD operations for the **EventLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventLogs
    * const eventLogs = await prisma.eventLog.findMany()
    * ```
    */
  get eventLog(): Prisma.EventLogDelegate<ExtArgs>;

  /**
   * `prisma.lead`: Exposes CRUD operations for the **Lead** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.lead.findMany()
    * ```
    */
  get lead(): Prisma.LeadDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Client: 'Client',
    Contact: 'Contact',
    Room: 'Room',
    Deal: 'Deal',
    PipelineStage: 'PipelineStage',
    Activity: 'Activity',
    Task: 'Task',
    Appointment: 'Appointment',
    Document: 'Document',
    DesignVersion: 'DesignVersion',
    ParsedSpecItem: 'ParsedSpecItem',
    Snag: 'Snag',
    Job: 'Job',
    FormSubmission: 'FormSubmission',
    EventLog: 'EventLog',
    Lead: 'Lead'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "client" | "contact" | "room" | "deal" | "pipelineStage" | "activity" | "task" | "appointment" | "document" | "designVersion" | "parsedSpecItem" | "snag" | "job" | "formSubmission" | "eventLog" | "lead"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      Room: {
        payload: Prisma.$RoomPayload<ExtArgs>
        fields: Prisma.RoomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          findFirst: {
            args: Prisma.RoomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          findMany: {
            args: Prisma.RoomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>[]
          }
          create: {
            args: Prisma.RoomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          createMany: {
            args: Prisma.RoomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoomCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>[]
          }
          delete: {
            args: Prisma.RoomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          update: {
            args: Prisma.RoomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          deleteMany: {
            args: Prisma.RoomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoomPayload>
          }
          aggregate: {
            args: Prisma.RoomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoom>
          }
          groupBy: {
            args: Prisma.RoomGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoomGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoomCountArgs<ExtArgs>
            result: $Utils.Optional<RoomCountAggregateOutputType> | number
          }
        }
      }
      Deal: {
        payload: Prisma.$DealPayload<ExtArgs>
        fields: Prisma.DealFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DealFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DealFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          findFirst: {
            args: Prisma.DealFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DealFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          findMany: {
            args: Prisma.DealFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>[]
          }
          create: {
            args: Prisma.DealCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          createMany: {
            args: Prisma.DealCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DealCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>[]
          }
          delete: {
            args: Prisma.DealDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          update: {
            args: Prisma.DealUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          deleteMany: {
            args: Prisma.DealDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DealUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DealUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DealPayload>
          }
          aggregate: {
            args: Prisma.DealAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeal>
          }
          groupBy: {
            args: Prisma.DealGroupByArgs<ExtArgs>
            result: $Utils.Optional<DealGroupByOutputType>[]
          }
          count: {
            args: Prisma.DealCountArgs<ExtArgs>
            result: $Utils.Optional<DealCountAggregateOutputType> | number
          }
        }
      }
      PipelineStage: {
        payload: Prisma.$PipelineStagePayload<ExtArgs>
        fields: Prisma.PipelineStageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PipelineStageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PipelineStageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          findFirst: {
            args: Prisma.PipelineStageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PipelineStageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          findMany: {
            args: Prisma.PipelineStageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>[]
          }
          create: {
            args: Prisma.PipelineStageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          createMany: {
            args: Prisma.PipelineStageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PipelineStageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>[]
          }
          delete: {
            args: Prisma.PipelineStageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          update: {
            args: Prisma.PipelineStageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          deleteMany: {
            args: Prisma.PipelineStageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PipelineStageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PipelineStageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PipelineStagePayload>
          }
          aggregate: {
            args: Prisma.PipelineStageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePipelineStage>
          }
          groupBy: {
            args: Prisma.PipelineStageGroupByArgs<ExtArgs>
            result: $Utils.Optional<PipelineStageGroupByOutputType>[]
          }
          count: {
            args: Prisma.PipelineStageCountArgs<ExtArgs>
            result: $Utils.Optional<PipelineStageCountAggregateOutputType> | number
          }
        }
      }
      Activity: {
        payload: Prisma.$ActivityPayload<ExtArgs>
        fields: Prisma.ActivityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ActivityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ActivityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          findFirst: {
            args: Prisma.ActivityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ActivityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          findMany: {
            args: Prisma.ActivityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>[]
          }
          create: {
            args: Prisma.ActivityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          createMany: {
            args: Prisma.ActivityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ActivityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>[]
          }
          delete: {
            args: Prisma.ActivityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          update: {
            args: Prisma.ActivityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          deleteMany: {
            args: Prisma.ActivityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ActivityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ActivityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityPayload>
          }
          aggregate: {
            args: Prisma.ActivityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActivity>
          }
          groupBy: {
            args: Prisma.ActivityGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActivityGroupByOutputType>[]
          }
          count: {
            args: Prisma.ActivityCountArgs<ExtArgs>
            result: $Utils.Optional<ActivityCountAggregateOutputType> | number
          }
        }
      }
      Task: {
        payload: Prisma.$TaskPayload<ExtArgs>
        fields: Prisma.TaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findFirst: {
            args: Prisma.TaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findMany: {
            args: Prisma.TaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          create: {
            args: Prisma.TaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          createMany: {
            args: Prisma.TaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          delete: {
            args: Prisma.TaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          update: {
            args: Prisma.TaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          deleteMany: {
            args: Prisma.TaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          aggregate: {
            args: Prisma.TaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask>
          }
          groupBy: {
            args: Prisma.TaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<TaskGroupByOutputType>[]
          }
          count: {
            args: Prisma.TaskCountArgs<ExtArgs>
            result: $Utils.Optional<TaskCountAggregateOutputType> | number
          }
        }
      }
      Appointment: {
        payload: Prisma.$AppointmentPayload<ExtArgs>
        fields: Prisma.AppointmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AppointmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AppointmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          findFirst: {
            args: Prisma.AppointmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AppointmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          findMany: {
            args: Prisma.AppointmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>[]
          }
          create: {
            args: Prisma.AppointmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          createMany: {
            args: Prisma.AppointmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AppointmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>[]
          }
          delete: {
            args: Prisma.AppointmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          update: {
            args: Prisma.AppointmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          deleteMany: {
            args: Prisma.AppointmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AppointmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AppointmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppointmentPayload>
          }
          aggregate: {
            args: Prisma.AppointmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAppointment>
          }
          groupBy: {
            args: Prisma.AppointmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AppointmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AppointmentCountArgs<ExtArgs>
            result: $Utils.Optional<AppointmentCountAggregateOutputType> | number
          }
        }
      }
      Document: {
        payload: Prisma.$DocumentPayload<ExtArgs>
        fields: Prisma.DocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findFirst: {
            args: Prisma.DocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findMany: {
            args: Prisma.DocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          create: {
            args: Prisma.DocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          createMany: {
            args: Prisma.DocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          delete: {
            args: Prisma.DocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          update: {
            args: Prisma.DocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          deleteMany: {
            args: Prisma.DocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          aggregate: {
            args: Prisma.DocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument>
          }
          groupBy: {
            args: Prisma.DocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentCountAggregateOutputType> | number
          }
        }
      }
      DesignVersion: {
        payload: Prisma.$DesignVersionPayload<ExtArgs>
        fields: Prisma.DesignVersionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DesignVersionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DesignVersionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          findFirst: {
            args: Prisma.DesignVersionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DesignVersionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          findMany: {
            args: Prisma.DesignVersionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>[]
          }
          create: {
            args: Prisma.DesignVersionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          createMany: {
            args: Prisma.DesignVersionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DesignVersionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>[]
          }
          delete: {
            args: Prisma.DesignVersionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          update: {
            args: Prisma.DesignVersionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          deleteMany: {
            args: Prisma.DesignVersionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DesignVersionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DesignVersionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesignVersionPayload>
          }
          aggregate: {
            args: Prisma.DesignVersionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDesignVersion>
          }
          groupBy: {
            args: Prisma.DesignVersionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DesignVersionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DesignVersionCountArgs<ExtArgs>
            result: $Utils.Optional<DesignVersionCountAggregateOutputType> | number
          }
        }
      }
      ParsedSpecItem: {
        payload: Prisma.$ParsedSpecItemPayload<ExtArgs>
        fields: Prisma.ParsedSpecItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ParsedSpecItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ParsedSpecItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          findFirst: {
            args: Prisma.ParsedSpecItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ParsedSpecItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          findMany: {
            args: Prisma.ParsedSpecItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>[]
          }
          create: {
            args: Prisma.ParsedSpecItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          createMany: {
            args: Prisma.ParsedSpecItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ParsedSpecItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>[]
          }
          delete: {
            args: Prisma.ParsedSpecItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          update: {
            args: Prisma.ParsedSpecItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          deleteMany: {
            args: Prisma.ParsedSpecItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ParsedSpecItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ParsedSpecItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParsedSpecItemPayload>
          }
          aggregate: {
            args: Prisma.ParsedSpecItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParsedSpecItem>
          }
          groupBy: {
            args: Prisma.ParsedSpecItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ParsedSpecItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ParsedSpecItemCountArgs<ExtArgs>
            result: $Utils.Optional<ParsedSpecItemCountAggregateOutputType> | number
          }
        }
      }
      Snag: {
        payload: Prisma.$SnagPayload<ExtArgs>
        fields: Prisma.SnagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SnagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SnagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          findFirst: {
            args: Prisma.SnagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SnagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          findMany: {
            args: Prisma.SnagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>[]
          }
          create: {
            args: Prisma.SnagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          createMany: {
            args: Prisma.SnagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SnagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>[]
          }
          delete: {
            args: Prisma.SnagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          update: {
            args: Prisma.SnagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          deleteMany: {
            args: Prisma.SnagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SnagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SnagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnagPayload>
          }
          aggregate: {
            args: Prisma.SnagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSnag>
          }
          groupBy: {
            args: Prisma.SnagGroupByArgs<ExtArgs>
            result: $Utils.Optional<SnagGroupByOutputType>[]
          }
          count: {
            args: Prisma.SnagCountArgs<ExtArgs>
            result: $Utils.Optional<SnagCountAggregateOutputType> | number
          }
        }
      }
      Job: {
        payload: Prisma.$JobPayload<ExtArgs>
        fields: Prisma.JobFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findFirst: {
            args: Prisma.JobFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findMany: {
            args: Prisma.JobFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          create: {
            args: Prisma.JobCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          createMany: {
            args: Prisma.JobCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          delete: {
            args: Prisma.JobDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          update: {
            args: Prisma.JobUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          deleteMany: {
            args: Prisma.JobDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          aggregate: {
            args: Prisma.JobAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJob>
          }
          groupBy: {
            args: Prisma.JobGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobCountArgs<ExtArgs>
            result: $Utils.Optional<JobCountAggregateOutputType> | number
          }
        }
      }
      FormSubmission: {
        payload: Prisma.$FormSubmissionPayload<ExtArgs>
        fields: Prisma.FormSubmissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormSubmissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormSubmissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          findFirst: {
            args: Prisma.FormSubmissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormSubmissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          findMany: {
            args: Prisma.FormSubmissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>[]
          }
          create: {
            args: Prisma.FormSubmissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          createMany: {
            args: Prisma.FormSubmissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormSubmissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>[]
          }
          delete: {
            args: Prisma.FormSubmissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          update: {
            args: Prisma.FormSubmissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          deleteMany: {
            args: Prisma.FormSubmissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FormSubmissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FormSubmissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          aggregate: {
            args: Prisma.FormSubmissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormSubmission>
          }
          groupBy: {
            args: Prisma.FormSubmissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<FormSubmissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormSubmissionCountArgs<ExtArgs>
            result: $Utils.Optional<FormSubmissionCountAggregateOutputType> | number
          }
        }
      }
      EventLog: {
        payload: Prisma.$EventLogPayload<ExtArgs>
        fields: Prisma.EventLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          findFirst: {
            args: Prisma.EventLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          findMany: {
            args: Prisma.EventLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>[]
          }
          create: {
            args: Prisma.EventLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          createMany: {
            args: Prisma.EventLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>[]
          }
          delete: {
            args: Prisma.EventLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          update: {
            args: Prisma.EventLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          deleteMany: {
            args: Prisma.EventLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventLogPayload>
          }
          aggregate: {
            args: Prisma.EventLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventLog>
          }
          groupBy: {
            args: Prisma.EventLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventLogCountArgs<ExtArgs>
            result: $Utils.Optional<EventLogCountAggregateOutputType> | number
          }
        }
      }
      Lead: {
        payload: Prisma.$LeadPayload<ExtArgs>
        fields: Prisma.LeadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findFirst: {
            args: Prisma.LeadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findMany: {
            args: Prisma.LeadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          create: {
            args: Prisma.LeadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          createMany: {
            args: Prisma.LeadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          delete: {
            args: Prisma.LeadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          update: {
            args: Prisma.LeadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          deleteMany: {
            args: Prisma.LeadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LeadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          aggregate: {
            args: Prisma.LeadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLead>
          }
          groupBy: {
            args: Prisma.LeadGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeadGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadCountArgs<ExtArgs>
            result: $Utils.Optional<LeadCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    createdUsers: number
    updatedUsers: number
    ownedClients: number
    ownedRooms: number
    ownedDeals: number
    assignedTasks: number
    activities: number
    ownedLeads: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdUsers?: boolean | UserCountOutputTypeCountCreatedUsersArgs
    updatedUsers?: boolean | UserCountOutputTypeCountUpdatedUsersArgs
    ownedClients?: boolean | UserCountOutputTypeCountOwnedClientsArgs
    ownedRooms?: boolean | UserCountOutputTypeCountOwnedRoomsArgs
    ownedDeals?: boolean | UserCountOutputTypeCountOwnedDealsArgs
    assignedTasks?: boolean | UserCountOutputTypeCountAssignedTasksArgs
    activities?: boolean | UserCountOutputTypeCountActivitiesArgs
    ownedLeads?: boolean | UserCountOutputTypeCountOwnedLeadsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedClientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoomWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedDealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DealWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    contacts: number
    rooms: number
    deals: number
    activities: number
    tasks: number
    appointments: number
    documents: number
    snags: number
    jobs: number
    events: number
    leads: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | ClientCountOutputTypeCountContactsArgs
    rooms?: boolean | ClientCountOutputTypeCountRoomsArgs
    deals?: boolean | ClientCountOutputTypeCountDealsArgs
    activities?: boolean | ClientCountOutputTypeCountActivitiesArgs
    tasks?: boolean | ClientCountOutputTypeCountTasksArgs
    appointments?: boolean | ClientCountOutputTypeCountAppointmentsArgs
    documents?: boolean | ClientCountOutputTypeCountDocumentsArgs
    snags?: boolean | ClientCountOutputTypeCountSnagsArgs
    jobs?: boolean | ClientCountOutputTypeCountJobsArgs
    events?: boolean | ClientCountOutputTypeCountEventsArgs
    leads?: boolean | ClientCountOutputTypeCountLeadsArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoomWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountDealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DealWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountAppointmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppointmentWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountSnagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnagWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventLogWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
  }


  /**
   * Count Type RoomCountOutputType
   */

  export type RoomCountOutputType = {
    activities: number
    tasks: number
    appointments: number
    documents: number
    designVersions: number
    parsedSpecItems: number
    forms: number
    jobs: number
    snags: number
  }

  export type RoomCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activities?: boolean | RoomCountOutputTypeCountActivitiesArgs
    tasks?: boolean | RoomCountOutputTypeCountTasksArgs
    appointments?: boolean | RoomCountOutputTypeCountAppointmentsArgs
    documents?: boolean | RoomCountOutputTypeCountDocumentsArgs
    designVersions?: boolean | RoomCountOutputTypeCountDesignVersionsArgs
    parsedSpecItems?: boolean | RoomCountOutputTypeCountParsedSpecItemsArgs
    forms?: boolean | RoomCountOutputTypeCountFormsArgs
    jobs?: boolean | RoomCountOutputTypeCountJobsArgs
    snags?: boolean | RoomCountOutputTypeCountSnagsArgs
  }

  // Custom InputTypes
  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoomCountOutputType
     */
    select?: RoomCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountAppointmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppointmentWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountDesignVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesignVersionWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountParsedSpecItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ParsedSpecItemWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountFormsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormSubmissionWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
  }

  /**
   * RoomCountOutputType without action
   */
  export type RoomCountOutputTypeCountSnagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnagWhereInput
  }


  /**
   * Count Type PipelineStageCountOutputType
   */

  export type PipelineStageCountOutputType = {
    rooms: number
    deals: number
  }

  export type PipelineStageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rooms?: boolean | PipelineStageCountOutputTypeCountRoomsArgs
    deals?: boolean | PipelineStageCountOutputTypeCountDealsArgs
  }

  // Custom InputTypes
  /**
   * PipelineStageCountOutputType without action
   */
  export type PipelineStageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStageCountOutputType
     */
    select?: PipelineStageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PipelineStageCountOutputType without action
   */
  export type PipelineStageCountOutputTypeCountRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoomWhereInput
  }

  /**
   * PipelineStageCountOutputType without action
   */
  export type PipelineStageCountOutputTypeCountDealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DealWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    lastLoginAt: Date | null
    emailVerifiedAt: Date | null
    twoFactorSecret: string | null
    twoFactorEnabled: boolean | null
    avatarUrl: string | null
    timezone: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    lastLoginAt: Date | null
    emailVerifiedAt: Date | null
    twoFactorSecret: string | null
    twoFactorEnabled: boolean | null
    avatarUrl: string | null
    timezone: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    passwordHash: number
    firstName: number
    lastName: number
    phone: number
    role: number
    isActive: number
    lastLoginAt: number
    emailVerifiedAt: number
    twoFactorSecret: number
    twoFactorEnabled: number
    avatarUrl: number
    timezone: number
    preferences: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    phone?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerifiedAt?: true
    twoFactorSecret?: true
    twoFactorEnabled?: true
    avatarUrl?: true
    timezone?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    phone?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerifiedAt?: true
    twoFactorSecret?: true
    twoFactorEnabled?: true
    avatarUrl?: true
    timezone?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    phone?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerifiedAt?: true
    twoFactorSecret?: true
    twoFactorEnabled?: true
    avatarUrl?: true
    timezone?: true
    preferences?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    passwordHash: string | null
    firstName: string
    lastName: string
    phone: string | null
    role: $Enums.UserRole
    isActive: boolean
    lastLoginAt: Date | null
    emailVerifiedAt: Date | null
    twoFactorSecret: string | null
    twoFactorEnabled: boolean
    avatarUrl: string | null
    timezone: string
    preferences: JsonValue
    createdAt: Date
    updatedAt: Date
    createdById: string | null
    updatedById: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerifiedAt?: boolean
    twoFactorSecret?: boolean
    twoFactorEnabled?: boolean
    avatarUrl?: boolean
    timezone?: boolean
    preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    createdUsers?: boolean | User$createdUsersArgs<ExtArgs>
    updatedUsers?: boolean | User$updatedUsersArgs<ExtArgs>
    ownedClients?: boolean | User$ownedClientsArgs<ExtArgs>
    ownedRooms?: boolean | User$ownedRoomsArgs<ExtArgs>
    ownedDeals?: boolean | User$ownedDealsArgs<ExtArgs>
    assignedTasks?: boolean | User$assignedTasksArgs<ExtArgs>
    activities?: boolean | User$activitiesArgs<ExtArgs>
    ownedLeads?: boolean | User$ownedLeadsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerifiedAt?: boolean
    twoFactorSecret?: boolean
    twoFactorEnabled?: boolean
    avatarUrl?: boolean
    timezone?: boolean
    preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerifiedAt?: boolean
    twoFactorSecret?: boolean
    twoFactorEnabled?: boolean
    avatarUrl?: boolean
    timezone?: boolean
    preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    createdUsers?: boolean | User$createdUsersArgs<ExtArgs>
    updatedUsers?: boolean | User$updatedUsersArgs<ExtArgs>
    ownedClients?: boolean | User$ownedClientsArgs<ExtArgs>
    ownedRooms?: boolean | User$ownedRoomsArgs<ExtArgs>
    ownedDeals?: boolean | User$ownedDealsArgs<ExtArgs>
    assignedTasks?: boolean | User$assignedTasksArgs<ExtArgs>
    activities?: boolean | User$activitiesArgs<ExtArgs>
    ownedLeads?: boolean | User$ownedLeadsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      createdUsers: Prisma.$UserPayload<ExtArgs>[]
      updatedUsers: Prisma.$UserPayload<ExtArgs>[]
      ownedClients: Prisma.$ClientPayload<ExtArgs>[]
      ownedRooms: Prisma.$RoomPayload<ExtArgs>[]
      ownedDeals: Prisma.$DealPayload<ExtArgs>[]
      assignedTasks: Prisma.$TaskPayload<ExtArgs>[]
      activities: Prisma.$ActivityPayload<ExtArgs>[]
      ownedLeads: Prisma.$LeadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      passwordHash: string | null
      firstName: string
      lastName: string
      phone: string | null
      role: $Enums.UserRole
      isActive: boolean
      lastLoginAt: Date | null
      emailVerifiedAt: Date | null
      twoFactorSecret: string | null
      twoFactorEnabled: boolean
      avatarUrl: string | null
      timezone: string
      preferences: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends User$createdByArgs<ExtArgs> = {}>(args?: Subset<T, User$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    updatedBy<T extends User$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    createdUsers<T extends User$createdUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$createdUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    updatedUsers<T extends User$updatedUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    ownedClients<T extends User$ownedClientsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedClientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany"> | Null>
    ownedRooms<T extends User$ownedRoomsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedRoomsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findMany"> | Null>
    ownedDeals<T extends User$ownedDealsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedDealsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findMany"> | Null>
    assignedTasks<T extends User$assignedTasksArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany"> | Null>
    activities<T extends User$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findMany"> | Null>
    ownedLeads<T extends User$ownedLeadsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedLeadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly emailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly twoFactorSecret: FieldRef<"User", 'String'>
    readonly twoFactorEnabled: FieldRef<"User", 'Boolean'>
    readonly avatarUrl: FieldRef<"User", 'String'>
    readonly timezone: FieldRef<"User", 'String'>
    readonly preferences: FieldRef<"User", 'Json'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly createdById: FieldRef<"User", 'String'>
    readonly updatedById: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.createdBy
   */
  export type User$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.updatedBy
   */
  export type User$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.createdUsers
   */
  export type User$createdUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.updatedUsers
   */
  export type User$updatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.ownedClients
   */
  export type User$ownedClientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    cursor?: ClientWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * User.ownedRooms
   */
  export type User$ownedRoomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    cursor?: RoomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * User.ownedDeals
   */
  export type User$ownedDealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    where?: DealWhereInput
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    cursor?: DealWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * User.assignedTasks
   */
  export type User$assignedTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.activities
   */
  export type User$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    where?: ActivityWhereInput
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    cursor?: ActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * User.ownedLeads
   */
  export type User$ownedLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    cursor?: LeadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientMinAggregateOutputType = {
    id: string | null
    orgId: string | null
    name: string | null
    legalName: string | null
    ownerId: string | null
    status: $Enums.ClientStatus | null
    portalToken: string | null
    designFeePaid: boolean | null
    consentMarketing: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ClientMaxAggregateOutputType = {
    id: string | null
    orgId: string | null
    name: string | null
    legalName: string | null
    ownerId: string | null
    status: $Enums.ClientStatus | null
    portalToken: string | null
    designFeePaid: boolean | null
    consentMarketing: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    orgId: number
    name: number
    legalName: number
    emails: number
    phones: number
    billingAddress: number
    siteAddresses: number
    ownerId: number
    tags: number
    status: number
    portalToken: number
    designFeePaid: number
    consentMarketing: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type ClientMinAggregateInputType = {
    id?: true
    orgId?: true
    name?: true
    legalName?: true
    ownerId?: true
    status?: true
    portalToken?: true
    designFeePaid?: true
    consentMarketing?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    orgId?: true
    name?: true
    legalName?: true
    ownerId?: true
    status?: true
    portalToken?: true
    designFeePaid?: true
    consentMarketing?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    orgId?: true
    name?: true
    legalName?: true
    emails?: true
    phones?: true
    billingAddress?: true
    siteAddresses?: true
    ownerId?: true
    tags?: true
    status?: true
    portalToken?: true
    designFeePaid?: true
    consentMarketing?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: string
    orgId: string | null
    name: string
    legalName: string | null
    emails: string[]
    phones: string[]
    billingAddress: JsonValue | null
    siteAddresses: JsonValue | null
    ownerId: string
    tags: string[]
    status: $Enums.ClientStatus
    portalToken: string
    designFeePaid: boolean
    consentMarketing: boolean
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdById: string | null
    updatedById: string | null
    _count: ClientCountAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orgId?: boolean
    name?: boolean
    legalName?: boolean
    emails?: boolean
    phones?: boolean
    billingAddress?: boolean
    siteAddresses?: boolean
    ownerId?: boolean
    tags?: boolean
    status?: boolean
    portalToken?: boolean
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    contacts?: boolean | Client$contactsArgs<ExtArgs>
    rooms?: boolean | Client$roomsArgs<ExtArgs>
    deals?: boolean | Client$dealsArgs<ExtArgs>
    activities?: boolean | Client$activitiesArgs<ExtArgs>
    tasks?: boolean | Client$tasksArgs<ExtArgs>
    appointments?: boolean | Client$appointmentsArgs<ExtArgs>
    documents?: boolean | Client$documentsArgs<ExtArgs>
    snags?: boolean | Client$snagsArgs<ExtArgs>
    jobs?: boolean | Client$jobsArgs<ExtArgs>
    events?: boolean | Client$eventsArgs<ExtArgs>
    leads?: boolean | Client$leadsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orgId?: boolean
    name?: boolean
    legalName?: boolean
    emails?: boolean
    phones?: boolean
    billingAddress?: boolean
    siteAddresses?: boolean
    ownerId?: boolean
    tags?: boolean
    status?: boolean
    portalToken?: boolean
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    orgId?: boolean
    name?: boolean
    legalName?: boolean
    emails?: boolean
    phones?: boolean
    billingAddress?: boolean
    siteAddresses?: boolean
    ownerId?: boolean
    tags?: boolean
    status?: boolean
    portalToken?: boolean
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    contacts?: boolean | Client$contactsArgs<ExtArgs>
    rooms?: boolean | Client$roomsArgs<ExtArgs>
    deals?: boolean | Client$dealsArgs<ExtArgs>
    activities?: boolean | Client$activitiesArgs<ExtArgs>
    tasks?: boolean | Client$tasksArgs<ExtArgs>
    appointments?: boolean | Client$appointmentsArgs<ExtArgs>
    documents?: boolean | Client$documentsArgs<ExtArgs>
    snags?: boolean | Client$snagsArgs<ExtArgs>
    jobs?: boolean | Client$jobsArgs<ExtArgs>
    events?: boolean | Client$eventsArgs<ExtArgs>
    leads?: boolean | Client$leadsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      contacts: Prisma.$ContactPayload<ExtArgs>[]
      rooms: Prisma.$RoomPayload<ExtArgs>[]
      deals: Prisma.$DealPayload<ExtArgs>[]
      activities: Prisma.$ActivityPayload<ExtArgs>[]
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      appointments: Prisma.$AppointmentPayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      snags: Prisma.$SnagPayload<ExtArgs>[]
      jobs: Prisma.$JobPayload<ExtArgs>[]
      events: Prisma.$EventLogPayload<ExtArgs>[]
      leads: Prisma.$LeadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orgId: string | null
      name: string
      legalName: string | null
      emails: string[]
      phones: string[]
      billingAddress: Prisma.JsonValue | null
      siteAddresses: Prisma.JsonValue | null
      ownerId: string
      tags: string[]
      status: $Enums.ClientStatus
      portalToken: string
      designFeePaid: boolean
      consentMarketing: boolean
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    contacts<T extends Client$contactsArgs<ExtArgs> = {}>(args?: Subset<T, Client$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany"> | Null>
    rooms<T extends Client$roomsArgs<ExtArgs> = {}>(args?: Subset<T, Client$roomsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findMany"> | Null>
    deals<T extends Client$dealsArgs<ExtArgs> = {}>(args?: Subset<T, Client$dealsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findMany"> | Null>
    activities<T extends Client$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, Client$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findMany"> | Null>
    tasks<T extends Client$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Client$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany"> | Null>
    appointments<T extends Client$appointmentsArgs<ExtArgs> = {}>(args?: Subset<T, Client$appointmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findMany"> | Null>
    documents<T extends Client$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Client$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    snags<T extends Client$snagsArgs<ExtArgs> = {}>(args?: Subset<T, Client$snagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findMany"> | Null>
    jobs<T extends Client$jobsArgs<ExtArgs> = {}>(args?: Subset<T, Client$jobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany"> | Null>
    events<T extends Client$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Client$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findMany"> | Null>
    leads<T extends Client$leadsArgs<ExtArgs> = {}>(args?: Subset<T, Client$leadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */ 
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'String'>
    readonly orgId: FieldRef<"Client", 'String'>
    readonly name: FieldRef<"Client", 'String'>
    readonly legalName: FieldRef<"Client", 'String'>
    readonly emails: FieldRef<"Client", 'String[]'>
    readonly phones: FieldRef<"Client", 'String[]'>
    readonly billingAddress: FieldRef<"Client", 'Json'>
    readonly siteAddresses: FieldRef<"Client", 'Json'>
    readonly ownerId: FieldRef<"Client", 'String'>
    readonly tags: FieldRef<"Client", 'String[]'>
    readonly status: FieldRef<"Client", 'ClientStatus'>
    readonly portalToken: FieldRef<"Client", 'String'>
    readonly designFeePaid: FieldRef<"Client", 'Boolean'>
    readonly consentMarketing: FieldRef<"Client", 'Boolean'>
    readonly createdAt: FieldRef<"Client", 'DateTime'>
    readonly updatedAt: FieldRef<"Client", 'DateTime'>
    readonly deletedAt: FieldRef<"Client", 'DateTime'>
    readonly createdById: FieldRef<"Client", 'String'>
    readonly updatedById: FieldRef<"Client", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
  }

  /**
   * Client.contacts
   */
  export type Client$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Client.rooms
   */
  export type Client$roomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    cursor?: RoomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * Client.deals
   */
  export type Client$dealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    where?: DealWhereInput
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    cursor?: DealWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * Client.activities
   */
  export type Client$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    where?: ActivityWhereInput
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    cursor?: ActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * Client.tasks
   */
  export type Client$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Client.appointments
   */
  export type Client$appointmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    where?: AppointmentWhereInput
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    cursor?: AppointmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppointmentScalarFieldEnum | AppointmentScalarFieldEnum[]
  }

  /**
   * Client.documents
   */
  export type Client$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Client.snags
   */
  export type Client$snagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    where?: SnagWhereInput
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    cursor?: SnagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnagScalarFieldEnum | SnagScalarFieldEnum[]
  }

  /**
   * Client.jobs
   */
  export type Client$jobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    where?: JobWhereInput
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    cursor?: JobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Client.events
   */
  export type Client$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    where?: EventLogWhereInput
    orderBy?: EventLogOrderByWithRelationInput | EventLogOrderByWithRelationInput[]
    cursor?: EventLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventLogScalarFieldEnum | EventLogScalarFieldEnum[]
  }

  /**
   * Client.leads
   */
  export type Client$leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    cursor?: LeadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    role: string | null
    email: string | null
    phone: string | null
    isPrimary: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    role: string | null
    email: string | null
    phone: string | null
    isPrimary: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    clientId: number
    name: number
    role: number
    email: number
    phone: number
    isPrimary: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ContactMinAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    role?: true
    email?: true
    phone?: true
    isPrimary?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: string
    clientId: string
    name: string
    role: string | null
    email: string | null
    phone: string | null
    isPrimary: boolean
    createdAt: Date
    updatedAt: Date
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectScalar = {
    id?: boolean
    clientId?: boolean
    name?: boolean
    role?: boolean
    email?: boolean
    phone?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type ContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      name: string
      role: string | null
      email: string | null
      phone: string | null
      isPrimary: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contacts and returns the data saved in the database.
     * @param {ContactCreateManyAndReturnArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContactCreateManyAndReturnArgs>(args?: SelectSubset<T, ContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */ 
  interface ContactFieldRefs {
    readonly id: FieldRef<"Contact", 'String'>
    readonly clientId: FieldRef<"Contact", 'String'>
    readonly name: FieldRef<"Contact", 'String'>
    readonly role: FieldRef<"Contact", 'String'>
    readonly email: FieldRef<"Contact", 'String'>
    readonly phone: FieldRef<"Contact", 'String'>
    readonly isPrimary: FieldRef<"Contact", 'Boolean'>
    readonly createdAt: FieldRef<"Contact", 'DateTime'>
    readonly updatedAt: FieldRef<"Contact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact createManyAndReturn
   */
  export type ContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
  }


  /**
   * Model Room
   */

  export type AggregateRoom = {
    _count: RoomCountAggregateOutputType | null
    _avg: RoomAvgAggregateOutputType | null
    _sum: RoomSumAggregateOutputType | null
    _min: RoomMinAggregateOutputType | null
    _max: RoomMaxAggregateOutputType | null
  }

  export type RoomAvgAggregateOutputType = {
    budgetLow: number | null
    budgetHigh: number | null
  }

  export type RoomSumAggregateOutputType = {
    budgetLow: number | null
    budgetHigh: number | null
  }

  export type RoomMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    type: $Enums.RoomType | null
    nickname: string | null
    pipelineStageId: string | null
    ownerId: string | null
    budgetLow: number | null
    budgetHigh: number | null
    status: $Enums.RoomStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type RoomMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    type: $Enums.RoomType | null
    nickname: string | null
    pipelineStageId: string | null
    ownerId: string | null
    budgetLow: number | null
    budgetHigh: number | null
    status: $Enums.RoomStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type RoomCountAggregateOutputType = {
    id: number
    clientId: number
    type: number
    nickname: number
    pipelineStageId: number
    ownerId: number
    budgetLow: number
    budgetHigh: number
    siteAddress: number
    status: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type RoomAvgAggregateInputType = {
    budgetLow?: true
    budgetHigh?: true
  }

  export type RoomSumAggregateInputType = {
    budgetLow?: true
    budgetHigh?: true
  }

  export type RoomMinAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    nickname?: true
    pipelineStageId?: true
    ownerId?: true
    budgetLow?: true
    budgetHigh?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type RoomMaxAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    nickname?: true
    pipelineStageId?: true
    ownerId?: true
    budgetLow?: true
    budgetHigh?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type RoomCountAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    nickname?: true
    pipelineStageId?: true
    ownerId?: true
    budgetLow?: true
    budgetHigh?: true
    siteAddress?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type RoomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Room to aggregate.
     */
    where?: RoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rooms to fetch.
     */
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rooms
    **/
    _count?: true | RoomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoomAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoomSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoomMaxAggregateInputType
  }

  export type GetRoomAggregateType<T extends RoomAggregateArgs> = {
        [P in keyof T & keyof AggregateRoom]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoom[P]>
      : GetScalarType<T[P], AggregateRoom[P]>
  }




  export type RoomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoomWhereInput
    orderBy?: RoomOrderByWithAggregationInput | RoomOrderByWithAggregationInput[]
    by: RoomScalarFieldEnum[] | RoomScalarFieldEnum
    having?: RoomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoomCountAggregateInputType | true
    _avg?: RoomAvgAggregateInputType
    _sum?: RoomSumAggregateInputType
    _min?: RoomMinAggregateInputType
    _max?: RoomMaxAggregateInputType
  }

  export type RoomGroupByOutputType = {
    id: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId: string | null
    ownerId: string | null
    budgetLow: number | null
    budgetHigh: number | null
    siteAddress: JsonValue | null
    status: $Enums.RoomStatus
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: RoomCountAggregateOutputType | null
    _avg: RoomAvgAggregateOutputType | null
    _sum: RoomSumAggregateOutputType | null
    _min: RoomMinAggregateOutputType | null
    _max: RoomMaxAggregateOutputType | null
  }

  type GetRoomGroupByPayload<T extends RoomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoomGroupByOutputType[P]>
            : GetScalarType<T[P], RoomGroupByOutputType[P]>
        }
      >
    >


  export type RoomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    type?: boolean
    nickname?: boolean
    pipelineStageId?: boolean
    ownerId?: boolean
    budgetLow?: boolean
    budgetHigh?: boolean
    siteAddress?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    stage?: boolean | Room$stageArgs<ExtArgs>
    owner?: boolean | Room$ownerArgs<ExtArgs>
    deal?: boolean | Room$dealArgs<ExtArgs>
    activities?: boolean | Room$activitiesArgs<ExtArgs>
    tasks?: boolean | Room$tasksArgs<ExtArgs>
    appointments?: boolean | Room$appointmentsArgs<ExtArgs>
    documents?: boolean | Room$documentsArgs<ExtArgs>
    designVersions?: boolean | Room$designVersionsArgs<ExtArgs>
    parsedSpecItems?: boolean | Room$parsedSpecItemsArgs<ExtArgs>
    forms?: boolean | Room$formsArgs<ExtArgs>
    jobs?: boolean | Room$jobsArgs<ExtArgs>
    snags?: boolean | Room$snagsArgs<ExtArgs>
    _count?: boolean | RoomCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["room"]>

  export type RoomSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    type?: boolean
    nickname?: boolean
    pipelineStageId?: boolean
    ownerId?: boolean
    budgetLow?: boolean
    budgetHigh?: boolean
    siteAddress?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    stage?: boolean | Room$stageArgs<ExtArgs>
    owner?: boolean | Room$ownerArgs<ExtArgs>
  }, ExtArgs["result"]["room"]>

  export type RoomSelectScalar = {
    id?: boolean
    clientId?: boolean
    type?: boolean
    nickname?: boolean
    pipelineStageId?: boolean
    ownerId?: boolean
    budgetLow?: boolean
    budgetHigh?: boolean
    siteAddress?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type RoomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    stage?: boolean | Room$stageArgs<ExtArgs>
    owner?: boolean | Room$ownerArgs<ExtArgs>
    deal?: boolean | Room$dealArgs<ExtArgs>
    activities?: boolean | Room$activitiesArgs<ExtArgs>
    tasks?: boolean | Room$tasksArgs<ExtArgs>
    appointments?: boolean | Room$appointmentsArgs<ExtArgs>
    documents?: boolean | Room$documentsArgs<ExtArgs>
    designVersions?: boolean | Room$designVersionsArgs<ExtArgs>
    parsedSpecItems?: boolean | Room$parsedSpecItemsArgs<ExtArgs>
    forms?: boolean | Room$formsArgs<ExtArgs>
    jobs?: boolean | Room$jobsArgs<ExtArgs>
    snags?: boolean | Room$snagsArgs<ExtArgs>
    _count?: boolean | RoomCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoomIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    stage?: boolean | Room$stageArgs<ExtArgs>
    owner?: boolean | Room$ownerArgs<ExtArgs>
  }

  export type $RoomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Room"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      stage: Prisma.$PipelineStagePayload<ExtArgs> | null
      owner: Prisma.$UserPayload<ExtArgs> | null
      deal: Prisma.$DealPayload<ExtArgs> | null
      activities: Prisma.$ActivityPayload<ExtArgs>[]
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      appointments: Prisma.$AppointmentPayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      designVersions: Prisma.$DesignVersionPayload<ExtArgs>[]
      parsedSpecItems: Prisma.$ParsedSpecItemPayload<ExtArgs>[]
      forms: Prisma.$FormSubmissionPayload<ExtArgs>[]
      jobs: Prisma.$JobPayload<ExtArgs>[]
      snags: Prisma.$SnagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      type: $Enums.RoomType
      nickname: string
      pipelineStageId: string | null
      ownerId: string | null
      budgetLow: number | null
      budgetHigh: number | null
      siteAddress: Prisma.JsonValue | null
      status: $Enums.RoomStatus
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["room"]>
    composites: {}
  }

  type RoomGetPayload<S extends boolean | null | undefined | RoomDefaultArgs> = $Result.GetResult<Prisma.$RoomPayload, S>

  type RoomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RoomFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RoomCountAggregateInputType | true
    }

  export interface RoomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Room'], meta: { name: 'Room' } }
    /**
     * Find zero or one Room that matches the filter.
     * @param {RoomFindUniqueArgs} args - Arguments to find a Room
     * @example
     * // Get one Room
     * const room = await prisma.room.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoomFindUniqueArgs>(args: SelectSubset<T, RoomFindUniqueArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Room that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RoomFindUniqueOrThrowArgs} args - Arguments to find a Room
     * @example
     * // Get one Room
     * const room = await prisma.room.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoomFindUniqueOrThrowArgs>(args: SelectSubset<T, RoomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Room that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomFindFirstArgs} args - Arguments to find a Room
     * @example
     * // Get one Room
     * const room = await prisma.room.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoomFindFirstArgs>(args?: SelectSubset<T, RoomFindFirstArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Room that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomFindFirstOrThrowArgs} args - Arguments to find a Room
     * @example
     * // Get one Room
     * const room = await prisma.room.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoomFindFirstOrThrowArgs>(args?: SelectSubset<T, RoomFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Rooms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rooms
     * const rooms = await prisma.room.findMany()
     * 
     * // Get first 10 Rooms
     * const rooms = await prisma.room.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roomWithIdOnly = await prisma.room.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoomFindManyArgs>(args?: SelectSubset<T, RoomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Room.
     * @param {RoomCreateArgs} args - Arguments to create a Room.
     * @example
     * // Create one Room
     * const Room = await prisma.room.create({
     *   data: {
     *     // ... data to create a Room
     *   }
     * })
     * 
     */
    create<T extends RoomCreateArgs>(args: SelectSubset<T, RoomCreateArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Rooms.
     * @param {RoomCreateManyArgs} args - Arguments to create many Rooms.
     * @example
     * // Create many Rooms
     * const room = await prisma.room.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoomCreateManyArgs>(args?: SelectSubset<T, RoomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rooms and returns the data saved in the database.
     * @param {RoomCreateManyAndReturnArgs} args - Arguments to create many Rooms.
     * @example
     * // Create many Rooms
     * const room = await prisma.room.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rooms and only return the `id`
     * const roomWithIdOnly = await prisma.room.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoomCreateManyAndReturnArgs>(args?: SelectSubset<T, RoomCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Room.
     * @param {RoomDeleteArgs} args - Arguments to delete one Room.
     * @example
     * // Delete one Room
     * const Room = await prisma.room.delete({
     *   where: {
     *     // ... filter to delete one Room
     *   }
     * })
     * 
     */
    delete<T extends RoomDeleteArgs>(args: SelectSubset<T, RoomDeleteArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Room.
     * @param {RoomUpdateArgs} args - Arguments to update one Room.
     * @example
     * // Update one Room
     * const room = await prisma.room.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoomUpdateArgs>(args: SelectSubset<T, RoomUpdateArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Rooms.
     * @param {RoomDeleteManyArgs} args - Arguments to filter Rooms to delete.
     * @example
     * // Delete a few Rooms
     * const { count } = await prisma.room.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoomDeleteManyArgs>(args?: SelectSubset<T, RoomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rooms
     * const room = await prisma.room.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoomUpdateManyArgs>(args: SelectSubset<T, RoomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Room.
     * @param {RoomUpsertArgs} args - Arguments to update or create a Room.
     * @example
     * // Update or create a Room
     * const room = await prisma.room.upsert({
     *   create: {
     *     // ... data to create a Room
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Room we want to update
     *   }
     * })
     */
    upsert<T extends RoomUpsertArgs>(args: SelectSubset<T, RoomUpsertArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Rooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomCountArgs} args - Arguments to filter Rooms to count.
     * @example
     * // Count the number of Rooms
     * const count = await prisma.room.count({
     *   where: {
     *     // ... the filter for the Rooms we want to count
     *   }
     * })
    **/
    count<T extends RoomCountArgs>(
      args?: Subset<T, RoomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Room.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoomAggregateArgs>(args: Subset<T, RoomAggregateArgs>): Prisma.PrismaPromise<GetRoomAggregateType<T>>

    /**
     * Group by Room.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoomGroupByArgs['orderBy'] }
        : { orderBy?: RoomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Room model
   */
  readonly fields: RoomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Room.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stage<T extends Room$stageArgs<ExtArgs> = {}>(args?: Subset<T, Room$stageArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    owner<T extends Room$ownerArgs<ExtArgs> = {}>(args?: Subset<T, Room$ownerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    deal<T extends Room$dealArgs<ExtArgs> = {}>(args?: Subset<T, Room$dealArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    activities<T extends Room$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, Room$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findMany"> | Null>
    tasks<T extends Room$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Room$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany"> | Null>
    appointments<T extends Room$appointmentsArgs<ExtArgs> = {}>(args?: Subset<T, Room$appointmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findMany"> | Null>
    documents<T extends Room$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Room$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    designVersions<T extends Room$designVersionsArgs<ExtArgs> = {}>(args?: Subset<T, Room$designVersionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findMany"> | Null>
    parsedSpecItems<T extends Room$parsedSpecItemsArgs<ExtArgs> = {}>(args?: Subset<T, Room$parsedSpecItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findMany"> | Null>
    forms<T extends Room$formsArgs<ExtArgs> = {}>(args?: Subset<T, Room$formsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findMany"> | Null>
    jobs<T extends Room$jobsArgs<ExtArgs> = {}>(args?: Subset<T, Room$jobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany"> | Null>
    snags<T extends Room$snagsArgs<ExtArgs> = {}>(args?: Subset<T, Room$snagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Room model
   */ 
  interface RoomFieldRefs {
    readonly id: FieldRef<"Room", 'String'>
    readonly clientId: FieldRef<"Room", 'String'>
    readonly type: FieldRef<"Room", 'RoomType'>
    readonly nickname: FieldRef<"Room", 'String'>
    readonly pipelineStageId: FieldRef<"Room", 'String'>
    readonly ownerId: FieldRef<"Room", 'String'>
    readonly budgetLow: FieldRef<"Room", 'Int'>
    readonly budgetHigh: FieldRef<"Room", 'Int'>
    readonly siteAddress: FieldRef<"Room", 'Json'>
    readonly status: FieldRef<"Room", 'RoomStatus'>
    readonly createdAt: FieldRef<"Room", 'DateTime'>
    readonly updatedAt: FieldRef<"Room", 'DateTime'>
    readonly deletedAt: FieldRef<"Room", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Room findUnique
   */
  export type RoomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter, which Room to fetch.
     */
    where: RoomWhereUniqueInput
  }

  /**
   * Room findUniqueOrThrow
   */
  export type RoomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter, which Room to fetch.
     */
    where: RoomWhereUniqueInput
  }

  /**
   * Room findFirst
   */
  export type RoomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter, which Room to fetch.
     */
    where?: RoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rooms to fetch.
     */
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rooms.
     */
    cursor?: RoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rooms.
     */
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * Room findFirstOrThrow
   */
  export type RoomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter, which Room to fetch.
     */
    where?: RoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rooms to fetch.
     */
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rooms.
     */
    cursor?: RoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rooms.
     */
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * Room findMany
   */
  export type RoomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter, which Rooms to fetch.
     */
    where?: RoomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rooms to fetch.
     */
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rooms.
     */
    cursor?: RoomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rooms.
     */
    skip?: number
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * Room create
   */
  export type RoomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * The data needed to create a Room.
     */
    data: XOR<RoomCreateInput, RoomUncheckedCreateInput>
  }

  /**
   * Room createMany
   */
  export type RoomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rooms.
     */
    data: RoomCreateManyInput | RoomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Room createManyAndReturn
   */
  export type RoomCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Rooms.
     */
    data: RoomCreateManyInput | RoomCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Room update
   */
  export type RoomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * The data needed to update a Room.
     */
    data: XOR<RoomUpdateInput, RoomUncheckedUpdateInput>
    /**
     * Choose, which Room to update.
     */
    where: RoomWhereUniqueInput
  }

  /**
   * Room updateMany
   */
  export type RoomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rooms.
     */
    data: XOR<RoomUpdateManyMutationInput, RoomUncheckedUpdateManyInput>
    /**
     * Filter which Rooms to update
     */
    where?: RoomWhereInput
  }

  /**
   * Room upsert
   */
  export type RoomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * The filter to search for the Room to update in case it exists.
     */
    where: RoomWhereUniqueInput
    /**
     * In case the Room found by the `where` argument doesn't exist, create a new Room with this data.
     */
    create: XOR<RoomCreateInput, RoomUncheckedCreateInput>
    /**
     * In case the Room was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoomUpdateInput, RoomUncheckedUpdateInput>
  }

  /**
   * Room delete
   */
  export type RoomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    /**
     * Filter which Room to delete.
     */
    where: RoomWhereUniqueInput
  }

  /**
   * Room deleteMany
   */
  export type RoomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rooms to delete
     */
    where?: RoomWhereInput
  }

  /**
   * Room.stage
   */
  export type Room$stageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    where?: PipelineStageWhereInput
  }

  /**
   * Room.owner
   */
  export type Room$ownerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Room.deal
   */
  export type Room$dealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    where?: DealWhereInput
  }

  /**
   * Room.activities
   */
  export type Room$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    where?: ActivityWhereInput
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    cursor?: ActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * Room.tasks
   */
  export type Room$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Room.appointments
   */
  export type Room$appointmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    where?: AppointmentWhereInput
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    cursor?: AppointmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AppointmentScalarFieldEnum | AppointmentScalarFieldEnum[]
  }

  /**
   * Room.documents
   */
  export type Room$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Room.designVersions
   */
  export type Room$designVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    where?: DesignVersionWhereInput
    orderBy?: DesignVersionOrderByWithRelationInput | DesignVersionOrderByWithRelationInput[]
    cursor?: DesignVersionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DesignVersionScalarFieldEnum | DesignVersionScalarFieldEnum[]
  }

  /**
   * Room.parsedSpecItems
   */
  export type Room$parsedSpecItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    where?: ParsedSpecItemWhereInput
    orderBy?: ParsedSpecItemOrderByWithRelationInput | ParsedSpecItemOrderByWithRelationInput[]
    cursor?: ParsedSpecItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ParsedSpecItemScalarFieldEnum | ParsedSpecItemScalarFieldEnum[]
  }

  /**
   * Room.forms
   */
  export type Room$formsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    where?: FormSubmissionWhereInput
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    cursor?: FormSubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * Room.jobs
   */
  export type Room$jobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    where?: JobWhereInput
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    cursor?: JobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Room.snags
   */
  export type Room$snagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    where?: SnagWhereInput
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    cursor?: SnagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnagScalarFieldEnum | SnagScalarFieldEnum[]
  }

  /**
   * Room without action
   */
  export type RoomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
  }


  /**
   * Model Deal
   */

  export type AggregateDeal = {
    _count: DealCountAggregateOutputType | null
    _avg: DealAvgAggregateOutputType | null
    _sum: DealSumAggregateOutputType | null
    _min: DealMinAggregateOutputType | null
    _max: DealMaxAggregateOutputType | null
  }

  export type DealAvgAggregateOutputType = {
    amountGrossIncVat: number | null
    vatRate: number | null
    probability: number | null
  }

  export type DealSumAggregateOutputType = {
    amountGrossIncVat: number | null
    vatRate: number | null
    probability: number | null
  }

  export type DealMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    stageId: string | null
    ownerId: string | null
    amountGrossIncVat: number | null
    vatRate: number | null
    probability: number | null
    source: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DealMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    stageId: string | null
    ownerId: string | null
    amountGrossIncVat: number | null
    vatRate: number | null
    probability: number | null
    source: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DealCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    stageId: number
    ownerId: number
    amountGrossIncVat: number
    vatRate: number
    probability: number
    source: number
    utm: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DealAvgAggregateInputType = {
    amountGrossIncVat?: true
    vatRate?: true
    probability?: true
  }

  export type DealSumAggregateInputType = {
    amountGrossIncVat?: true
    vatRate?: true
    probability?: true
  }

  export type DealMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    stageId?: true
    ownerId?: true
    amountGrossIncVat?: true
    vatRate?: true
    probability?: true
    source?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DealMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    stageId?: true
    ownerId?: true
    amountGrossIncVat?: true
    vatRate?: true
    probability?: true
    source?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DealCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    stageId?: true
    ownerId?: true
    amountGrossIncVat?: true
    vatRate?: true
    probability?: true
    source?: true
    utm?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DealAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Deal to aggregate.
     */
    where?: DealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deals to fetch.
     */
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Deals
    **/
    _count?: true | DealCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DealAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DealSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DealMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DealMaxAggregateInputType
  }

  export type GetDealAggregateType<T extends DealAggregateArgs> = {
        [P in keyof T & keyof AggregateDeal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeal[P]>
      : GetScalarType<T[P], AggregateDeal[P]>
  }




  export type DealGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DealWhereInput
    orderBy?: DealOrderByWithAggregationInput | DealOrderByWithAggregationInput[]
    by: DealScalarFieldEnum[] | DealScalarFieldEnum
    having?: DealScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DealCountAggregateInputType | true
    _avg?: DealAvgAggregateInputType
    _sum?: DealSumAggregateInputType
    _min?: DealMinAggregateInputType
    _max?: DealMaxAggregateInputType
  }

  export type DealGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate: number
    probability: number
    source: string | null
    utm: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: DealCountAggregateOutputType | null
    _avg: DealAvgAggregateOutputType | null
    _sum: DealSumAggregateOutputType | null
    _min: DealMinAggregateOutputType | null
    _max: DealMaxAggregateOutputType | null
  }

  type GetDealGroupByPayload<T extends DealGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DealGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DealGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DealGroupByOutputType[P]>
            : GetScalarType<T[P], DealGroupByOutputType[P]>
        }
      >
    >


  export type DealSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    stageId?: boolean
    ownerId?: boolean
    amountGrossIncVat?: boolean
    vatRate?: boolean
    probability?: boolean
    source?: boolean
    utm?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Deal$roomArgs<ExtArgs>
    stage?: boolean | PipelineStageDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    lead?: boolean | Deal$leadArgs<ExtArgs>
  }, ExtArgs["result"]["deal"]>

  export type DealSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    stageId?: boolean
    ownerId?: boolean
    amountGrossIncVat?: boolean
    vatRate?: boolean
    probability?: boolean
    source?: boolean
    utm?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Deal$roomArgs<ExtArgs>
    stage?: boolean | PipelineStageDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deal"]>

  export type DealSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    stageId?: boolean
    ownerId?: boolean
    amountGrossIncVat?: boolean
    vatRate?: boolean
    probability?: boolean
    source?: boolean
    utm?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DealInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Deal$roomArgs<ExtArgs>
    stage?: boolean | PipelineStageDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    lead?: boolean | Deal$leadArgs<ExtArgs>
  }
  export type DealIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Deal$roomArgs<ExtArgs>
    stage?: boolean | PipelineStageDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DealPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Deal"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
      stage: Prisma.$PipelineStagePayload<ExtArgs>
      owner: Prisma.$UserPayload<ExtArgs>
      lead: Prisma.$LeadPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      stageId: string
      ownerId: string
      amountGrossIncVat: number
      vatRate: number
      probability: number
      source: string | null
      utm: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["deal"]>
    composites: {}
  }

  type DealGetPayload<S extends boolean | null | undefined | DealDefaultArgs> = $Result.GetResult<Prisma.$DealPayload, S>

  type DealCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DealFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DealCountAggregateInputType | true
    }

  export interface DealDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Deal'], meta: { name: 'Deal' } }
    /**
     * Find zero or one Deal that matches the filter.
     * @param {DealFindUniqueArgs} args - Arguments to find a Deal
     * @example
     * // Get one Deal
     * const deal = await prisma.deal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DealFindUniqueArgs>(args: SelectSubset<T, DealFindUniqueArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Deal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DealFindUniqueOrThrowArgs} args - Arguments to find a Deal
     * @example
     * // Get one Deal
     * const deal = await prisma.deal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DealFindUniqueOrThrowArgs>(args: SelectSubset<T, DealFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Deal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealFindFirstArgs} args - Arguments to find a Deal
     * @example
     * // Get one Deal
     * const deal = await prisma.deal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DealFindFirstArgs>(args?: SelectSubset<T, DealFindFirstArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Deal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealFindFirstOrThrowArgs} args - Arguments to find a Deal
     * @example
     * // Get one Deal
     * const deal = await prisma.deal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DealFindFirstOrThrowArgs>(args?: SelectSubset<T, DealFindFirstOrThrowArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Deals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Deals
     * const deals = await prisma.deal.findMany()
     * 
     * // Get first 10 Deals
     * const deals = await prisma.deal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dealWithIdOnly = await prisma.deal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DealFindManyArgs>(args?: SelectSubset<T, DealFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Deal.
     * @param {DealCreateArgs} args - Arguments to create a Deal.
     * @example
     * // Create one Deal
     * const Deal = await prisma.deal.create({
     *   data: {
     *     // ... data to create a Deal
     *   }
     * })
     * 
     */
    create<T extends DealCreateArgs>(args: SelectSubset<T, DealCreateArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Deals.
     * @param {DealCreateManyArgs} args - Arguments to create many Deals.
     * @example
     * // Create many Deals
     * const deal = await prisma.deal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DealCreateManyArgs>(args?: SelectSubset<T, DealCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Deals and returns the data saved in the database.
     * @param {DealCreateManyAndReturnArgs} args - Arguments to create many Deals.
     * @example
     * // Create many Deals
     * const deal = await prisma.deal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Deals and only return the `id`
     * const dealWithIdOnly = await prisma.deal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DealCreateManyAndReturnArgs>(args?: SelectSubset<T, DealCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Deal.
     * @param {DealDeleteArgs} args - Arguments to delete one Deal.
     * @example
     * // Delete one Deal
     * const Deal = await prisma.deal.delete({
     *   where: {
     *     // ... filter to delete one Deal
     *   }
     * })
     * 
     */
    delete<T extends DealDeleteArgs>(args: SelectSubset<T, DealDeleteArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Deal.
     * @param {DealUpdateArgs} args - Arguments to update one Deal.
     * @example
     * // Update one Deal
     * const deal = await prisma.deal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DealUpdateArgs>(args: SelectSubset<T, DealUpdateArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Deals.
     * @param {DealDeleteManyArgs} args - Arguments to filter Deals to delete.
     * @example
     * // Delete a few Deals
     * const { count } = await prisma.deal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DealDeleteManyArgs>(args?: SelectSubset<T, DealDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Deals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Deals
     * const deal = await prisma.deal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DealUpdateManyArgs>(args: SelectSubset<T, DealUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Deal.
     * @param {DealUpsertArgs} args - Arguments to update or create a Deal.
     * @example
     * // Update or create a Deal
     * const deal = await prisma.deal.upsert({
     *   create: {
     *     // ... data to create a Deal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Deal we want to update
     *   }
     * })
     */
    upsert<T extends DealUpsertArgs>(args: SelectSubset<T, DealUpsertArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Deals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealCountArgs} args - Arguments to filter Deals to count.
     * @example
     * // Count the number of Deals
     * const count = await prisma.deal.count({
     *   where: {
     *     // ... the filter for the Deals we want to count
     *   }
     * })
    **/
    count<T extends DealCountArgs>(
      args?: Subset<T, DealCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DealCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Deal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DealAggregateArgs>(args: Subset<T, DealAggregateArgs>): Prisma.PrismaPromise<GetDealAggregateType<T>>

    /**
     * Group by Deal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DealGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DealGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DealGroupByArgs['orderBy'] }
        : { orderBy?: DealGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DealGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDealGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Deal model
   */
  readonly fields: DealFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Deal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DealClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Deal$roomArgs<ExtArgs> = {}>(args?: Subset<T, Deal$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    stage<T extends PipelineStageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PipelineStageDefaultArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    lead<T extends Deal$leadArgs<ExtArgs> = {}>(args?: Subset<T, Deal$leadArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Deal model
   */ 
  interface DealFieldRefs {
    readonly id: FieldRef<"Deal", 'String'>
    readonly clientId: FieldRef<"Deal", 'String'>
    readonly roomId: FieldRef<"Deal", 'String'>
    readonly stageId: FieldRef<"Deal", 'String'>
    readonly ownerId: FieldRef<"Deal", 'String'>
    readonly amountGrossIncVat: FieldRef<"Deal", 'Int'>
    readonly vatRate: FieldRef<"Deal", 'Float'>
    readonly probability: FieldRef<"Deal", 'Int'>
    readonly source: FieldRef<"Deal", 'String'>
    readonly utm: FieldRef<"Deal", 'Json'>
    readonly createdAt: FieldRef<"Deal", 'DateTime'>
    readonly updatedAt: FieldRef<"Deal", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Deal findUnique
   */
  export type DealFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter, which Deal to fetch.
     */
    where: DealWhereUniqueInput
  }

  /**
   * Deal findUniqueOrThrow
   */
  export type DealFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter, which Deal to fetch.
     */
    where: DealWhereUniqueInput
  }

  /**
   * Deal findFirst
   */
  export type DealFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter, which Deal to fetch.
     */
    where?: DealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deals to fetch.
     */
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Deals.
     */
    cursor?: DealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Deals.
     */
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * Deal findFirstOrThrow
   */
  export type DealFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter, which Deal to fetch.
     */
    where?: DealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deals to fetch.
     */
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Deals.
     */
    cursor?: DealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Deals.
     */
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * Deal findMany
   */
  export type DealFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter, which Deals to fetch.
     */
    where?: DealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deals to fetch.
     */
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Deals.
     */
    cursor?: DealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deals.
     */
    skip?: number
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * Deal create
   */
  export type DealCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * The data needed to create a Deal.
     */
    data: XOR<DealCreateInput, DealUncheckedCreateInput>
  }

  /**
   * Deal createMany
   */
  export type DealCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Deals.
     */
    data: DealCreateManyInput | DealCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Deal createManyAndReturn
   */
  export type DealCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Deals.
     */
    data: DealCreateManyInput | DealCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Deal update
   */
  export type DealUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * The data needed to update a Deal.
     */
    data: XOR<DealUpdateInput, DealUncheckedUpdateInput>
    /**
     * Choose, which Deal to update.
     */
    where: DealWhereUniqueInput
  }

  /**
   * Deal updateMany
   */
  export type DealUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Deals.
     */
    data: XOR<DealUpdateManyMutationInput, DealUncheckedUpdateManyInput>
    /**
     * Filter which Deals to update
     */
    where?: DealWhereInput
  }

  /**
   * Deal upsert
   */
  export type DealUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * The filter to search for the Deal to update in case it exists.
     */
    where: DealWhereUniqueInput
    /**
     * In case the Deal found by the `where` argument doesn't exist, create a new Deal with this data.
     */
    create: XOR<DealCreateInput, DealUncheckedCreateInput>
    /**
     * In case the Deal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DealUpdateInput, DealUncheckedUpdateInput>
  }

  /**
   * Deal delete
   */
  export type DealDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    /**
     * Filter which Deal to delete.
     */
    where: DealWhereUniqueInput
  }

  /**
   * Deal deleteMany
   */
  export type DealDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Deals to delete
     */
    where?: DealWhereInput
  }

  /**
   * Deal.room
   */
  export type Deal$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Deal.lead
   */
  export type Deal$leadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    where?: LeadWhereInput
  }

  /**
   * Deal without action
   */
  export type DealDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
  }


  /**
   * Model PipelineStage
   */

  export type AggregatePipelineStage = {
    _count: PipelineStageCountAggregateOutputType | null
    _avg: PipelineStageAvgAggregateOutputType | null
    _sum: PipelineStageSumAggregateOutputType | null
    _min: PipelineStageMinAggregateOutputType | null
    _max: PipelineStageMaxAggregateOutputType | null
  }

  export type PipelineStageAvgAggregateOutputType = {
    order: number | null
    slaHours: number | null
  }

  export type PipelineStageSumAggregateOutputType = {
    order: number | null
    slaHours: number | null
  }

  export type PipelineStageMinAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    slaHours: number | null
  }

  export type PipelineStageMaxAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    slaHours: number | null
  }

  export type PipelineStageCountAggregateOutputType = {
    id: number
    name: number
    order: number
    slaHours: number
    _all: number
  }


  export type PipelineStageAvgAggregateInputType = {
    order?: true
    slaHours?: true
  }

  export type PipelineStageSumAggregateInputType = {
    order?: true
    slaHours?: true
  }

  export type PipelineStageMinAggregateInputType = {
    id?: true
    name?: true
    order?: true
    slaHours?: true
  }

  export type PipelineStageMaxAggregateInputType = {
    id?: true
    name?: true
    order?: true
    slaHours?: true
  }

  export type PipelineStageCountAggregateInputType = {
    id?: true
    name?: true
    order?: true
    slaHours?: true
    _all?: true
  }

  export type PipelineStageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PipelineStage to aggregate.
     */
    where?: PipelineStageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PipelineStages to fetch.
     */
    orderBy?: PipelineStageOrderByWithRelationInput | PipelineStageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PipelineStageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PipelineStages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PipelineStages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PipelineStages
    **/
    _count?: true | PipelineStageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PipelineStageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PipelineStageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PipelineStageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PipelineStageMaxAggregateInputType
  }

  export type GetPipelineStageAggregateType<T extends PipelineStageAggregateArgs> = {
        [P in keyof T & keyof AggregatePipelineStage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePipelineStage[P]>
      : GetScalarType<T[P], AggregatePipelineStage[P]>
  }




  export type PipelineStageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PipelineStageWhereInput
    orderBy?: PipelineStageOrderByWithAggregationInput | PipelineStageOrderByWithAggregationInput[]
    by: PipelineStageScalarFieldEnum[] | PipelineStageScalarFieldEnum
    having?: PipelineStageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PipelineStageCountAggregateInputType | true
    _avg?: PipelineStageAvgAggregateInputType
    _sum?: PipelineStageSumAggregateInputType
    _min?: PipelineStageMinAggregateInputType
    _max?: PipelineStageMaxAggregateInputType
  }

  export type PipelineStageGroupByOutputType = {
    id: string
    name: string
    order: number
    slaHours: number | null
    _count: PipelineStageCountAggregateOutputType | null
    _avg: PipelineStageAvgAggregateOutputType | null
    _sum: PipelineStageSumAggregateOutputType | null
    _min: PipelineStageMinAggregateOutputType | null
    _max: PipelineStageMaxAggregateOutputType | null
  }

  type GetPipelineStageGroupByPayload<T extends PipelineStageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PipelineStageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PipelineStageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PipelineStageGroupByOutputType[P]>
            : GetScalarType<T[P], PipelineStageGroupByOutputType[P]>
        }
      >
    >


  export type PipelineStageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    order?: boolean
    slaHours?: boolean
    rooms?: boolean | PipelineStage$roomsArgs<ExtArgs>
    deals?: boolean | PipelineStage$dealsArgs<ExtArgs>
    _count?: boolean | PipelineStageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pipelineStage"]>

  export type PipelineStageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    order?: boolean
    slaHours?: boolean
  }, ExtArgs["result"]["pipelineStage"]>

  export type PipelineStageSelectScalar = {
    id?: boolean
    name?: boolean
    order?: boolean
    slaHours?: boolean
  }

  export type PipelineStageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rooms?: boolean | PipelineStage$roomsArgs<ExtArgs>
    deals?: boolean | PipelineStage$dealsArgs<ExtArgs>
    _count?: boolean | PipelineStageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PipelineStageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PipelineStagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PipelineStage"
    objects: {
      rooms: Prisma.$RoomPayload<ExtArgs>[]
      deals: Prisma.$DealPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      order: number
      slaHours: number | null
    }, ExtArgs["result"]["pipelineStage"]>
    composites: {}
  }

  type PipelineStageGetPayload<S extends boolean | null | undefined | PipelineStageDefaultArgs> = $Result.GetResult<Prisma.$PipelineStagePayload, S>

  type PipelineStageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PipelineStageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PipelineStageCountAggregateInputType | true
    }

  export interface PipelineStageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PipelineStage'], meta: { name: 'PipelineStage' } }
    /**
     * Find zero or one PipelineStage that matches the filter.
     * @param {PipelineStageFindUniqueArgs} args - Arguments to find a PipelineStage
     * @example
     * // Get one PipelineStage
     * const pipelineStage = await prisma.pipelineStage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PipelineStageFindUniqueArgs>(args: SelectSubset<T, PipelineStageFindUniqueArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PipelineStage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PipelineStageFindUniqueOrThrowArgs} args - Arguments to find a PipelineStage
     * @example
     * // Get one PipelineStage
     * const pipelineStage = await prisma.pipelineStage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PipelineStageFindUniqueOrThrowArgs>(args: SelectSubset<T, PipelineStageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PipelineStage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageFindFirstArgs} args - Arguments to find a PipelineStage
     * @example
     * // Get one PipelineStage
     * const pipelineStage = await prisma.pipelineStage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PipelineStageFindFirstArgs>(args?: SelectSubset<T, PipelineStageFindFirstArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PipelineStage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageFindFirstOrThrowArgs} args - Arguments to find a PipelineStage
     * @example
     * // Get one PipelineStage
     * const pipelineStage = await prisma.pipelineStage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PipelineStageFindFirstOrThrowArgs>(args?: SelectSubset<T, PipelineStageFindFirstOrThrowArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PipelineStages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PipelineStages
     * const pipelineStages = await prisma.pipelineStage.findMany()
     * 
     * // Get first 10 PipelineStages
     * const pipelineStages = await prisma.pipelineStage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pipelineStageWithIdOnly = await prisma.pipelineStage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PipelineStageFindManyArgs>(args?: SelectSubset<T, PipelineStageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PipelineStage.
     * @param {PipelineStageCreateArgs} args - Arguments to create a PipelineStage.
     * @example
     * // Create one PipelineStage
     * const PipelineStage = await prisma.pipelineStage.create({
     *   data: {
     *     // ... data to create a PipelineStage
     *   }
     * })
     * 
     */
    create<T extends PipelineStageCreateArgs>(args: SelectSubset<T, PipelineStageCreateArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PipelineStages.
     * @param {PipelineStageCreateManyArgs} args - Arguments to create many PipelineStages.
     * @example
     * // Create many PipelineStages
     * const pipelineStage = await prisma.pipelineStage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PipelineStageCreateManyArgs>(args?: SelectSubset<T, PipelineStageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PipelineStages and returns the data saved in the database.
     * @param {PipelineStageCreateManyAndReturnArgs} args - Arguments to create many PipelineStages.
     * @example
     * // Create many PipelineStages
     * const pipelineStage = await prisma.pipelineStage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PipelineStages and only return the `id`
     * const pipelineStageWithIdOnly = await prisma.pipelineStage.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PipelineStageCreateManyAndReturnArgs>(args?: SelectSubset<T, PipelineStageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PipelineStage.
     * @param {PipelineStageDeleteArgs} args - Arguments to delete one PipelineStage.
     * @example
     * // Delete one PipelineStage
     * const PipelineStage = await prisma.pipelineStage.delete({
     *   where: {
     *     // ... filter to delete one PipelineStage
     *   }
     * })
     * 
     */
    delete<T extends PipelineStageDeleteArgs>(args: SelectSubset<T, PipelineStageDeleteArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PipelineStage.
     * @param {PipelineStageUpdateArgs} args - Arguments to update one PipelineStage.
     * @example
     * // Update one PipelineStage
     * const pipelineStage = await prisma.pipelineStage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PipelineStageUpdateArgs>(args: SelectSubset<T, PipelineStageUpdateArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PipelineStages.
     * @param {PipelineStageDeleteManyArgs} args - Arguments to filter PipelineStages to delete.
     * @example
     * // Delete a few PipelineStages
     * const { count } = await prisma.pipelineStage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PipelineStageDeleteManyArgs>(args?: SelectSubset<T, PipelineStageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PipelineStages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PipelineStages
     * const pipelineStage = await prisma.pipelineStage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PipelineStageUpdateManyArgs>(args: SelectSubset<T, PipelineStageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PipelineStage.
     * @param {PipelineStageUpsertArgs} args - Arguments to update or create a PipelineStage.
     * @example
     * // Update or create a PipelineStage
     * const pipelineStage = await prisma.pipelineStage.upsert({
     *   create: {
     *     // ... data to create a PipelineStage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PipelineStage we want to update
     *   }
     * })
     */
    upsert<T extends PipelineStageUpsertArgs>(args: SelectSubset<T, PipelineStageUpsertArgs<ExtArgs>>): Prisma__PipelineStageClient<$Result.GetResult<Prisma.$PipelineStagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PipelineStages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageCountArgs} args - Arguments to filter PipelineStages to count.
     * @example
     * // Count the number of PipelineStages
     * const count = await prisma.pipelineStage.count({
     *   where: {
     *     // ... the filter for the PipelineStages we want to count
     *   }
     * })
    **/
    count<T extends PipelineStageCountArgs>(
      args?: Subset<T, PipelineStageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PipelineStageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PipelineStage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PipelineStageAggregateArgs>(args: Subset<T, PipelineStageAggregateArgs>): Prisma.PrismaPromise<GetPipelineStageAggregateType<T>>

    /**
     * Group by PipelineStage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PipelineStageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PipelineStageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PipelineStageGroupByArgs['orderBy'] }
        : { orderBy?: PipelineStageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PipelineStageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPipelineStageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PipelineStage model
   */
  readonly fields: PipelineStageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PipelineStage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PipelineStageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rooms<T extends PipelineStage$roomsArgs<ExtArgs> = {}>(args?: Subset<T, PipelineStage$roomsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findMany"> | Null>
    deals<T extends PipelineStage$dealsArgs<ExtArgs> = {}>(args?: Subset<T, PipelineStage$dealsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PipelineStage model
   */ 
  interface PipelineStageFieldRefs {
    readonly id: FieldRef<"PipelineStage", 'String'>
    readonly name: FieldRef<"PipelineStage", 'String'>
    readonly order: FieldRef<"PipelineStage", 'Int'>
    readonly slaHours: FieldRef<"PipelineStage", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PipelineStage findUnique
   */
  export type PipelineStageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter, which PipelineStage to fetch.
     */
    where: PipelineStageWhereUniqueInput
  }

  /**
   * PipelineStage findUniqueOrThrow
   */
  export type PipelineStageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter, which PipelineStage to fetch.
     */
    where: PipelineStageWhereUniqueInput
  }

  /**
   * PipelineStage findFirst
   */
  export type PipelineStageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter, which PipelineStage to fetch.
     */
    where?: PipelineStageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PipelineStages to fetch.
     */
    orderBy?: PipelineStageOrderByWithRelationInput | PipelineStageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PipelineStages.
     */
    cursor?: PipelineStageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PipelineStages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PipelineStages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PipelineStages.
     */
    distinct?: PipelineStageScalarFieldEnum | PipelineStageScalarFieldEnum[]
  }

  /**
   * PipelineStage findFirstOrThrow
   */
  export type PipelineStageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter, which PipelineStage to fetch.
     */
    where?: PipelineStageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PipelineStages to fetch.
     */
    orderBy?: PipelineStageOrderByWithRelationInput | PipelineStageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PipelineStages.
     */
    cursor?: PipelineStageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PipelineStages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PipelineStages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PipelineStages.
     */
    distinct?: PipelineStageScalarFieldEnum | PipelineStageScalarFieldEnum[]
  }

  /**
   * PipelineStage findMany
   */
  export type PipelineStageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter, which PipelineStages to fetch.
     */
    where?: PipelineStageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PipelineStages to fetch.
     */
    orderBy?: PipelineStageOrderByWithRelationInput | PipelineStageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PipelineStages.
     */
    cursor?: PipelineStageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PipelineStages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PipelineStages.
     */
    skip?: number
    distinct?: PipelineStageScalarFieldEnum | PipelineStageScalarFieldEnum[]
  }

  /**
   * PipelineStage create
   */
  export type PipelineStageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * The data needed to create a PipelineStage.
     */
    data: XOR<PipelineStageCreateInput, PipelineStageUncheckedCreateInput>
  }

  /**
   * PipelineStage createMany
   */
  export type PipelineStageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PipelineStages.
     */
    data: PipelineStageCreateManyInput | PipelineStageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PipelineStage createManyAndReturn
   */
  export type PipelineStageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PipelineStages.
     */
    data: PipelineStageCreateManyInput | PipelineStageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PipelineStage update
   */
  export type PipelineStageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * The data needed to update a PipelineStage.
     */
    data: XOR<PipelineStageUpdateInput, PipelineStageUncheckedUpdateInput>
    /**
     * Choose, which PipelineStage to update.
     */
    where: PipelineStageWhereUniqueInput
  }

  /**
   * PipelineStage updateMany
   */
  export type PipelineStageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PipelineStages.
     */
    data: XOR<PipelineStageUpdateManyMutationInput, PipelineStageUncheckedUpdateManyInput>
    /**
     * Filter which PipelineStages to update
     */
    where?: PipelineStageWhereInput
  }

  /**
   * PipelineStage upsert
   */
  export type PipelineStageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * The filter to search for the PipelineStage to update in case it exists.
     */
    where: PipelineStageWhereUniqueInput
    /**
     * In case the PipelineStage found by the `where` argument doesn't exist, create a new PipelineStage with this data.
     */
    create: XOR<PipelineStageCreateInput, PipelineStageUncheckedCreateInput>
    /**
     * In case the PipelineStage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PipelineStageUpdateInput, PipelineStageUncheckedUpdateInput>
  }

  /**
   * PipelineStage delete
   */
  export type PipelineStageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
    /**
     * Filter which PipelineStage to delete.
     */
    where: PipelineStageWhereUniqueInput
  }

  /**
   * PipelineStage deleteMany
   */
  export type PipelineStageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PipelineStages to delete
     */
    where?: PipelineStageWhereInput
  }

  /**
   * PipelineStage.rooms
   */
  export type PipelineStage$roomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
    orderBy?: RoomOrderByWithRelationInput | RoomOrderByWithRelationInput[]
    cursor?: RoomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoomScalarFieldEnum | RoomScalarFieldEnum[]
  }

  /**
   * PipelineStage.deals
   */
  export type PipelineStage$dealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    where?: DealWhereInput
    orderBy?: DealOrderByWithRelationInput | DealOrderByWithRelationInput[]
    cursor?: DealWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DealScalarFieldEnum | DealScalarFieldEnum[]
  }

  /**
   * PipelineStage without action
   */
  export type PipelineStageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PipelineStage
     */
    select?: PipelineStageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PipelineStageInclude<ExtArgs> | null
  }


  /**
   * Model Activity
   */

  export type AggregateActivity = {
    _count: ActivityCountAggregateOutputType | null
    _min: ActivityMinAggregateOutputType | null
    _max: ActivityMaxAggregateOutputType | null
  }

  export type ActivityMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    userId: string | null
    type: $Enums.ActivityType | null
    threadKey: string | null
    summary: string | null
    body: string | null
    occurredAt: Date | null
    createdAt: Date | null
  }

  export type ActivityMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    userId: string | null
    type: $Enums.ActivityType | null
    threadKey: string | null
    summary: string | null
    body: string | null
    occurredAt: Date | null
    createdAt: Date | null
  }

  export type ActivityCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    userId: number
    type: number
    threadKey: number
    summary: number
    body: number
    attachments: number
    durations: number
    metadata: number
    occurredAt: number
    createdAt: number
    _all: number
  }


  export type ActivityMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    userId?: true
    type?: true
    threadKey?: true
    summary?: true
    body?: true
    occurredAt?: true
    createdAt?: true
  }

  export type ActivityMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    userId?: true
    type?: true
    threadKey?: true
    summary?: true
    body?: true
    occurredAt?: true
    createdAt?: true
  }

  export type ActivityCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    userId?: true
    type?: true
    threadKey?: true
    summary?: true
    body?: true
    attachments?: true
    durations?: true
    metadata?: true
    occurredAt?: true
    createdAt?: true
    _all?: true
  }

  export type ActivityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Activity to aggregate.
     */
    where?: ActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Activities to fetch.
     */
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Activities
    **/
    _count?: true | ActivityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActivityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActivityMaxAggregateInputType
  }

  export type GetActivityAggregateType<T extends ActivityAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity[P]>
      : GetScalarType<T[P], AggregateActivity[P]>
  }




  export type ActivityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityWhereInput
    orderBy?: ActivityOrderByWithAggregationInput | ActivityOrderByWithAggregationInput[]
    by: ActivityScalarFieldEnum[] | ActivityScalarFieldEnum
    having?: ActivityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActivityCountAggregateInputType | true
    _min?: ActivityMinAggregateInputType
    _max?: ActivityMaxAggregateInputType
  }

  export type ActivityGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    userId: string | null
    type: $Enums.ActivityType
    threadKey: string | null
    summary: string | null
    body: string | null
    attachments: JsonValue | null
    durations: JsonValue | null
    metadata: JsonValue | null
    occurredAt: Date
    createdAt: Date
    _count: ActivityCountAggregateOutputType | null
    _min: ActivityMinAggregateOutputType | null
    _max: ActivityMaxAggregateOutputType | null
  }

  type GetActivityGroupByPayload<T extends ActivityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActivityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActivityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActivityGroupByOutputType[P]>
            : GetScalarType<T[P], ActivityGroupByOutputType[P]>
        }
      >
    >


  export type ActivitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    userId?: boolean
    type?: boolean
    threadKey?: boolean
    summary?: boolean
    body?: boolean
    attachments?: boolean
    durations?: boolean
    metadata?: boolean
    occurredAt?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Activity$roomArgs<ExtArgs>
    user?: boolean | Activity$userArgs<ExtArgs>
  }, ExtArgs["result"]["activity"]>

  export type ActivitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    userId?: boolean
    type?: boolean
    threadKey?: boolean
    summary?: boolean
    body?: boolean
    attachments?: boolean
    durations?: boolean
    metadata?: boolean
    occurredAt?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Activity$roomArgs<ExtArgs>
    user?: boolean | Activity$userArgs<ExtArgs>
  }, ExtArgs["result"]["activity"]>

  export type ActivitySelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    userId?: boolean
    type?: boolean
    threadKey?: boolean
    summary?: boolean
    body?: boolean
    attachments?: boolean
    durations?: boolean
    metadata?: boolean
    occurredAt?: boolean
    createdAt?: boolean
  }

  export type ActivityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Activity$roomArgs<ExtArgs>
    user?: boolean | Activity$userArgs<ExtArgs>
  }
  export type ActivityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Activity$roomArgs<ExtArgs>
    user?: boolean | Activity$userArgs<ExtArgs>
  }

  export type $ActivityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Activity"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      userId: string | null
      type: $Enums.ActivityType
      threadKey: string | null
      summary: string | null
      body: string | null
      attachments: Prisma.JsonValue | null
      durations: Prisma.JsonValue | null
      metadata: Prisma.JsonValue | null
      occurredAt: Date
      createdAt: Date
    }, ExtArgs["result"]["activity"]>
    composites: {}
  }

  type ActivityGetPayload<S extends boolean | null | undefined | ActivityDefaultArgs> = $Result.GetResult<Prisma.$ActivityPayload, S>

  type ActivityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ActivityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ActivityCountAggregateInputType | true
    }

  export interface ActivityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Activity'], meta: { name: 'Activity' } }
    /**
     * Find zero or one Activity that matches the filter.
     * @param {ActivityFindUniqueArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ActivityFindUniqueArgs>(args: SelectSubset<T, ActivityFindUniqueArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Activity that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ActivityFindUniqueOrThrowArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ActivityFindUniqueOrThrowArgs>(args: SelectSubset<T, ActivityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Activity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityFindFirstArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ActivityFindFirstArgs>(args?: SelectSubset<T, ActivityFindFirstArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Activity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityFindFirstOrThrowArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ActivityFindFirstOrThrowArgs>(args?: SelectSubset<T, ActivityFindFirstOrThrowArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Activities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activities
     * const activities = await prisma.activity.findMany()
     * 
     * // Get first 10 Activities
     * const activities = await prisma.activity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activityWithIdOnly = await prisma.activity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ActivityFindManyArgs>(args?: SelectSubset<T, ActivityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Activity.
     * @param {ActivityCreateArgs} args - Arguments to create a Activity.
     * @example
     * // Create one Activity
     * const Activity = await prisma.activity.create({
     *   data: {
     *     // ... data to create a Activity
     *   }
     * })
     * 
     */
    create<T extends ActivityCreateArgs>(args: SelectSubset<T, ActivityCreateArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Activities.
     * @param {ActivityCreateManyArgs} args - Arguments to create many Activities.
     * @example
     * // Create many Activities
     * const activity = await prisma.activity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ActivityCreateManyArgs>(args?: SelectSubset<T, ActivityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Activities and returns the data saved in the database.
     * @param {ActivityCreateManyAndReturnArgs} args - Arguments to create many Activities.
     * @example
     * // Create many Activities
     * const activity = await prisma.activity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Activities and only return the `id`
     * const activityWithIdOnly = await prisma.activity.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ActivityCreateManyAndReturnArgs>(args?: SelectSubset<T, ActivityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Activity.
     * @param {ActivityDeleteArgs} args - Arguments to delete one Activity.
     * @example
     * // Delete one Activity
     * const Activity = await prisma.activity.delete({
     *   where: {
     *     // ... filter to delete one Activity
     *   }
     * })
     * 
     */
    delete<T extends ActivityDeleteArgs>(args: SelectSubset<T, ActivityDeleteArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Activity.
     * @param {ActivityUpdateArgs} args - Arguments to update one Activity.
     * @example
     * // Update one Activity
     * const activity = await prisma.activity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ActivityUpdateArgs>(args: SelectSubset<T, ActivityUpdateArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Activities.
     * @param {ActivityDeleteManyArgs} args - Arguments to filter Activities to delete.
     * @example
     * // Delete a few Activities
     * const { count } = await prisma.activity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ActivityDeleteManyArgs>(args?: SelectSubset<T, ActivityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activities
     * const activity = await prisma.activity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ActivityUpdateManyArgs>(args: SelectSubset<T, ActivityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity.
     * @param {ActivityUpsertArgs} args - Arguments to update or create a Activity.
     * @example
     * // Update or create a Activity
     * const activity = await prisma.activity.upsert({
     *   create: {
     *     // ... data to create a Activity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity we want to update
     *   }
     * })
     */
    upsert<T extends ActivityUpsertArgs>(args: SelectSubset<T, ActivityUpsertArgs<ExtArgs>>): Prisma__ActivityClient<$Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityCountArgs} args - Arguments to filter Activities to count.
     * @example
     * // Count the number of Activities
     * const count = await prisma.activity.count({
     *   where: {
     *     // ... the filter for the Activities we want to count
     *   }
     * })
    **/
    count<T extends ActivityCountArgs>(
      args?: Subset<T, ActivityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActivityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActivityAggregateArgs>(args: Subset<T, ActivityAggregateArgs>): Prisma.PrismaPromise<GetActivityAggregateType<T>>

    /**
     * Group by Activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActivityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActivityGroupByArgs['orderBy'] }
        : { orderBy?: ActivityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Activity model
   */
  readonly fields: ActivityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Activity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ActivityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Activity$roomArgs<ExtArgs> = {}>(args?: Subset<T, Activity$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user<T extends Activity$userArgs<ExtArgs> = {}>(args?: Subset<T, Activity$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Activity model
   */ 
  interface ActivityFieldRefs {
    readonly id: FieldRef<"Activity", 'String'>
    readonly clientId: FieldRef<"Activity", 'String'>
    readonly roomId: FieldRef<"Activity", 'String'>
    readonly userId: FieldRef<"Activity", 'String'>
    readonly type: FieldRef<"Activity", 'ActivityType'>
    readonly threadKey: FieldRef<"Activity", 'String'>
    readonly summary: FieldRef<"Activity", 'String'>
    readonly body: FieldRef<"Activity", 'String'>
    readonly attachments: FieldRef<"Activity", 'Json'>
    readonly durations: FieldRef<"Activity", 'Json'>
    readonly metadata: FieldRef<"Activity", 'Json'>
    readonly occurredAt: FieldRef<"Activity", 'DateTime'>
    readonly createdAt: FieldRef<"Activity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Activity findUnique
   */
  export type ActivityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter, which Activity to fetch.
     */
    where: ActivityWhereUniqueInput
  }

  /**
   * Activity findUniqueOrThrow
   */
  export type ActivityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter, which Activity to fetch.
     */
    where: ActivityWhereUniqueInput
  }

  /**
   * Activity findFirst
   */
  export type ActivityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter, which Activity to fetch.
     */
    where?: ActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Activities to fetch.
     */
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Activities.
     */
    cursor?: ActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Activities.
     */
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * Activity findFirstOrThrow
   */
  export type ActivityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter, which Activity to fetch.
     */
    where?: ActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Activities to fetch.
     */
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Activities.
     */
    cursor?: ActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Activities.
     */
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * Activity findMany
   */
  export type ActivityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter, which Activities to fetch.
     */
    where?: ActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Activities to fetch.
     */
    orderBy?: ActivityOrderByWithRelationInput | ActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Activities.
     */
    cursor?: ActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Activities.
     */
    skip?: number
    distinct?: ActivityScalarFieldEnum | ActivityScalarFieldEnum[]
  }

  /**
   * Activity create
   */
  export type ActivityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * The data needed to create a Activity.
     */
    data: XOR<ActivityCreateInput, ActivityUncheckedCreateInput>
  }

  /**
   * Activity createMany
   */
  export type ActivityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Activities.
     */
    data: ActivityCreateManyInput | ActivityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Activity createManyAndReturn
   */
  export type ActivityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Activities.
     */
    data: ActivityCreateManyInput | ActivityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Activity update
   */
  export type ActivityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * The data needed to update a Activity.
     */
    data: XOR<ActivityUpdateInput, ActivityUncheckedUpdateInput>
    /**
     * Choose, which Activity to update.
     */
    where: ActivityWhereUniqueInput
  }

  /**
   * Activity updateMany
   */
  export type ActivityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Activities.
     */
    data: XOR<ActivityUpdateManyMutationInput, ActivityUncheckedUpdateManyInput>
    /**
     * Filter which Activities to update
     */
    where?: ActivityWhereInput
  }

  /**
   * Activity upsert
   */
  export type ActivityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * The filter to search for the Activity to update in case it exists.
     */
    where: ActivityWhereUniqueInput
    /**
     * In case the Activity found by the `where` argument doesn't exist, create a new Activity with this data.
     */
    create: XOR<ActivityCreateInput, ActivityUncheckedCreateInput>
    /**
     * In case the Activity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ActivityUpdateInput, ActivityUncheckedUpdateInput>
  }

  /**
   * Activity delete
   */
  export type ActivityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
    /**
     * Filter which Activity to delete.
     */
    where: ActivityWhereUniqueInput
  }

  /**
   * Activity deleteMany
   */
  export type ActivityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Activities to delete
     */
    where?: ActivityWhereInput
  }

  /**
   * Activity.room
   */
  export type Activity$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Activity.user
   */
  export type Activity$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Activity without action
   */
  export type ActivityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Activity
     */
    select?: ActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityInclude<ExtArgs> | null
  }


  /**
   * Model Task
   */

  export type AggregateTask = {
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  export type TaskAvgAggregateOutputType = {
    priority: number | null
  }

  export type TaskSumAggregateOutputType = {
    priority: number | null
  }

  export type TaskMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    assigneeId: string | null
    title: string | null
    dueAt: Date | null
    priority: number | null
    status: $Enums.TaskStatus | null
    autoGenerated: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TaskMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    assigneeId: string | null
    title: string | null
    dueAt: Date | null
    priority: number | null
    status: $Enums.TaskStatus | null
    autoGenerated: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TaskCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    assigneeId: number
    title: number
    dueAt: number
    priority: number
    status: number
    autoGenerated: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TaskAvgAggregateInputType = {
    priority?: true
  }

  export type TaskSumAggregateInputType = {
    priority?: true
  }

  export type TaskMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    assigneeId?: true
    title?: true
    dueAt?: true
    priority?: true
    status?: true
    autoGenerated?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TaskMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    assigneeId?: true
    title?: true
    dueAt?: true
    priority?: true
    status?: true
    autoGenerated?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TaskCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    assigneeId?: true
    title?: true
    dueAt?: true
    priority?: true
    status?: true
    autoGenerated?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TaskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Task to aggregate.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tasks
    **/
    _count?: true | TaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaskAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaskSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskMaxAggregateInputType
  }

  export type GetTaskAggregateType<T extends TaskAggregateArgs> = {
        [P in keyof T & keyof AggregateTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask[P]>
      : GetScalarType<T[P], AggregateTask[P]>
  }




  export type TaskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithAggregationInput | TaskOrderByWithAggregationInput[]
    by: TaskScalarFieldEnum[] | TaskScalarFieldEnum
    having?: TaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskCountAggregateInputType | true
    _avg?: TaskAvgAggregateInputType
    _sum?: TaskSumAggregateInputType
    _min?: TaskMinAggregateInputType
    _max?: TaskMaxAggregateInputType
  }

  export type TaskGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    assigneeId: string | null
    title: string
    dueAt: Date | null
    priority: number
    status: $Enums.TaskStatus
    autoGenerated: boolean
    createdAt: Date
    updatedAt: Date
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  type GetTaskGroupByPayload<T extends TaskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskGroupByOutputType[P]>
            : GetScalarType<T[P], TaskGroupByOutputType[P]>
        }
      >
    >


  export type TaskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    assigneeId?: boolean
    title?: boolean
    dueAt?: boolean
    priority?: boolean
    status?: boolean
    autoGenerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Task$roomArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    assigneeId?: boolean
    title?: boolean
    dueAt?: boolean
    priority?: boolean
    status?: boolean
    autoGenerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Task$roomArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    assigneeId?: boolean
    title?: boolean
    dueAt?: boolean
    priority?: boolean
    status?: boolean
    autoGenerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TaskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Task$roomArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
  }
  export type TaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Task$roomArgs<ExtArgs>
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
  }

  export type $TaskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Task"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
      assignee: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      assigneeId: string | null
      title: string
      dueAt: Date | null
      priority: number
      status: $Enums.TaskStatus
      autoGenerated: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["task"]>
    composites: {}
  }

  type TaskGetPayload<S extends boolean | null | undefined | TaskDefaultArgs> = $Result.GetResult<Prisma.$TaskPayload, S>

  type TaskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TaskFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TaskCountAggregateInputType | true
    }

  export interface TaskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Task'], meta: { name: 'Task' } }
    /**
     * Find zero or one Task that matches the filter.
     * @param {TaskFindUniqueArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TaskFindUniqueArgs>(args: SelectSubset<T, TaskFindUniqueArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Task that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TaskFindUniqueOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TaskFindUniqueOrThrowArgs>(args: SelectSubset<T, TaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TaskFindFirstArgs>(args?: SelectSubset<T, TaskFindFirstArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Task that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TaskFindFirstOrThrowArgs>(args?: SelectSubset<T, TaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.task.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskWithIdOnly = await prisma.task.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TaskFindManyArgs>(args?: SelectSubset<T, TaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Task.
     * @param {TaskCreateArgs} args - Arguments to create a Task.
     * @example
     * // Create one Task
     * const Task = await prisma.task.create({
     *   data: {
     *     // ... data to create a Task
     *   }
     * })
     * 
     */
    create<T extends TaskCreateArgs>(args: SelectSubset<T, TaskCreateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tasks.
     * @param {TaskCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TaskCreateManyArgs>(args?: SelectSubset<T, TaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tasks and returns the data saved in the database.
     * @param {TaskCreateManyAndReturnArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tasks and only return the `id`
     * const taskWithIdOnly = await prisma.task.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TaskCreateManyAndReturnArgs>(args?: SelectSubset<T, TaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Task.
     * @param {TaskDeleteArgs} args - Arguments to delete one Task.
     * @example
     * // Delete one Task
     * const Task = await prisma.task.delete({
     *   where: {
     *     // ... filter to delete one Task
     *   }
     * })
     * 
     */
    delete<T extends TaskDeleteArgs>(args: SelectSubset<T, TaskDeleteArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Task.
     * @param {TaskUpdateArgs} args - Arguments to update one Task.
     * @example
     * // Update one Task
     * const task = await prisma.task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TaskUpdateArgs>(args: SelectSubset<T, TaskUpdateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tasks.
     * @param {TaskDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TaskDeleteManyArgs>(args?: SelectSubset<T, TaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TaskUpdateManyArgs>(args: SelectSubset<T, TaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Task.
     * @param {TaskUpsertArgs} args - Arguments to update or create a Task.
     * @example
     * // Update or create a Task
     * const task = await prisma.task.upsert({
     *   create: {
     *     // ... data to create a Task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task we want to update
     *   }
     * })
     */
    upsert<T extends TaskUpsertArgs>(args: SelectSubset<T, TaskUpsertArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.task.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends TaskCountArgs>(
      args?: Subset<T, TaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskAggregateArgs>(args: Subset<T, TaskAggregateArgs>): Prisma.PrismaPromise<GetTaskAggregateType<T>>

    /**
     * Group by Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskGroupByArgs['orderBy'] }
        : { orderBy?: TaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Task model
   */
  readonly fields: TaskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TaskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Task$roomArgs<ExtArgs> = {}>(args?: Subset<T, Task$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    assignee<T extends Task$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Task$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Task model
   */ 
  interface TaskFieldRefs {
    readonly id: FieldRef<"Task", 'String'>
    readonly clientId: FieldRef<"Task", 'String'>
    readonly roomId: FieldRef<"Task", 'String'>
    readonly assigneeId: FieldRef<"Task", 'String'>
    readonly title: FieldRef<"Task", 'String'>
    readonly dueAt: FieldRef<"Task", 'DateTime'>
    readonly priority: FieldRef<"Task", 'Int'>
    readonly status: FieldRef<"Task", 'TaskStatus'>
    readonly autoGenerated: FieldRef<"Task", 'Boolean'>
    readonly createdAt: FieldRef<"Task", 'DateTime'>
    readonly updatedAt: FieldRef<"Task", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Task findUnique
   */
  export type TaskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findUniqueOrThrow
   */
  export type TaskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findFirst
   */
  export type TaskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findFirstOrThrow
   */
  export type TaskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findMany
   */
  export type TaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Tasks to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task create
   */
  export type TaskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to create a Task.
     */
    data: XOR<TaskCreateInput, TaskUncheckedCreateInput>
  }

  /**
   * Task createMany
   */
  export type TaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Task createManyAndReturn
   */
  export type TaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Task update
   */
  export type TaskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to update a Task.
     */
    data: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
    /**
     * Choose, which Task to update.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task updateMany
   */
  export type TaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
  }

  /**
   * Task upsert
   */
  export type TaskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The filter to search for the Task to update in case it exists.
     */
    where: TaskWhereUniqueInput
    /**
     * In case the Task found by the `where` argument doesn't exist, create a new Task with this data.
     */
    create: XOR<TaskCreateInput, TaskUncheckedCreateInput>
    /**
     * In case the Task was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
  }

  /**
   * Task delete
   */
  export type TaskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter which Task to delete.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task deleteMany
   */
  export type TaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tasks to delete
     */
    where?: TaskWhereInput
  }

  /**
   * Task.room
   */
  export type Task$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Task.assignee
   */
  export type Task$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task without action
   */
  export type TaskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
  }


  /**
   * Model Appointment
   */

  export type AggregateAppointment = {
    _count: AppointmentCountAggregateOutputType | null
    _min: AppointmentMinAggregateOutputType | null
    _max: AppointmentMaxAggregateOutputType | null
  }

  export type AppointmentMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    type: $Enums.AppointmentType | null
    start: Date | null
    end: Date | null
    location: string | null
    status: string | null
    createdAt: Date | null
  }

  export type AppointmentMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    type: $Enums.AppointmentType | null
    start: Date | null
    end: Date | null
    location: string | null
    status: string | null
    createdAt: Date | null
  }

  export type AppointmentCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    type: number
    start: number
    end: number
    location: number
    participants: number
    status: number
    createdAt: number
    _all: number
  }


  export type AppointmentMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    type?: true
    start?: true
    end?: true
    location?: true
    status?: true
    createdAt?: true
  }

  export type AppointmentMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    type?: true
    start?: true
    end?: true
    location?: true
    status?: true
    createdAt?: true
  }

  export type AppointmentCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    type?: true
    start?: true
    end?: true
    location?: true
    participants?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type AppointmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Appointment to aggregate.
     */
    where?: AppointmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Appointments to fetch.
     */
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AppointmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Appointments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Appointments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Appointments
    **/
    _count?: true | AppointmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppointmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppointmentMaxAggregateInputType
  }

  export type GetAppointmentAggregateType<T extends AppointmentAggregateArgs> = {
        [P in keyof T & keyof AggregateAppointment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppointment[P]>
      : GetScalarType<T[P], AggregateAppointment[P]>
  }




  export type AppointmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppointmentWhereInput
    orderBy?: AppointmentOrderByWithAggregationInput | AppointmentOrderByWithAggregationInput[]
    by: AppointmentScalarFieldEnum[] | AppointmentScalarFieldEnum
    having?: AppointmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppointmentCountAggregateInputType | true
    _min?: AppointmentMinAggregateInputType
    _max?: AppointmentMaxAggregateInputType
  }

  export type AppointmentGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    type: $Enums.AppointmentType
    start: Date
    end: Date
    location: string | null
    participants: JsonValue | null
    status: string | null
    createdAt: Date
    _count: AppointmentCountAggregateOutputType | null
    _min: AppointmentMinAggregateOutputType | null
    _max: AppointmentMaxAggregateOutputType | null
  }

  type GetAppointmentGroupByPayload<T extends AppointmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AppointmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppointmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppointmentGroupByOutputType[P]>
            : GetScalarType<T[P], AppointmentGroupByOutputType[P]>
        }
      >
    >


  export type AppointmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    type?: boolean
    start?: boolean
    end?: boolean
    location?: boolean
    participants?: boolean
    status?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Appointment$roomArgs<ExtArgs>
  }, ExtArgs["result"]["appointment"]>

  export type AppointmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    type?: boolean
    start?: boolean
    end?: boolean
    location?: boolean
    participants?: boolean
    status?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Appointment$roomArgs<ExtArgs>
  }, ExtArgs["result"]["appointment"]>

  export type AppointmentSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    type?: boolean
    start?: boolean
    end?: boolean
    location?: boolean
    participants?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type AppointmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Appointment$roomArgs<ExtArgs>
  }
  export type AppointmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Appointment$roomArgs<ExtArgs>
  }

  export type $AppointmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Appointment"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      type: $Enums.AppointmentType
      start: Date
      end: Date
      location: string | null
      participants: Prisma.JsonValue | null
      status: string | null
      createdAt: Date
    }, ExtArgs["result"]["appointment"]>
    composites: {}
  }

  type AppointmentGetPayload<S extends boolean | null | undefined | AppointmentDefaultArgs> = $Result.GetResult<Prisma.$AppointmentPayload, S>

  type AppointmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AppointmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AppointmentCountAggregateInputType | true
    }

  export interface AppointmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Appointment'], meta: { name: 'Appointment' } }
    /**
     * Find zero or one Appointment that matches the filter.
     * @param {AppointmentFindUniqueArgs} args - Arguments to find a Appointment
     * @example
     * // Get one Appointment
     * const appointment = await prisma.appointment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AppointmentFindUniqueArgs>(args: SelectSubset<T, AppointmentFindUniqueArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Appointment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AppointmentFindUniqueOrThrowArgs} args - Arguments to find a Appointment
     * @example
     * // Get one Appointment
     * const appointment = await prisma.appointment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AppointmentFindUniqueOrThrowArgs>(args: SelectSubset<T, AppointmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Appointment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentFindFirstArgs} args - Arguments to find a Appointment
     * @example
     * // Get one Appointment
     * const appointment = await prisma.appointment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AppointmentFindFirstArgs>(args?: SelectSubset<T, AppointmentFindFirstArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Appointment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentFindFirstOrThrowArgs} args - Arguments to find a Appointment
     * @example
     * // Get one Appointment
     * const appointment = await prisma.appointment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AppointmentFindFirstOrThrowArgs>(args?: SelectSubset<T, AppointmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Appointments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Appointments
     * const appointments = await prisma.appointment.findMany()
     * 
     * // Get first 10 Appointments
     * const appointments = await prisma.appointment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const appointmentWithIdOnly = await prisma.appointment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AppointmentFindManyArgs>(args?: SelectSubset<T, AppointmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Appointment.
     * @param {AppointmentCreateArgs} args - Arguments to create a Appointment.
     * @example
     * // Create one Appointment
     * const Appointment = await prisma.appointment.create({
     *   data: {
     *     // ... data to create a Appointment
     *   }
     * })
     * 
     */
    create<T extends AppointmentCreateArgs>(args: SelectSubset<T, AppointmentCreateArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Appointments.
     * @param {AppointmentCreateManyArgs} args - Arguments to create many Appointments.
     * @example
     * // Create many Appointments
     * const appointment = await prisma.appointment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AppointmentCreateManyArgs>(args?: SelectSubset<T, AppointmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Appointments and returns the data saved in the database.
     * @param {AppointmentCreateManyAndReturnArgs} args - Arguments to create many Appointments.
     * @example
     * // Create many Appointments
     * const appointment = await prisma.appointment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Appointments and only return the `id`
     * const appointmentWithIdOnly = await prisma.appointment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AppointmentCreateManyAndReturnArgs>(args?: SelectSubset<T, AppointmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Appointment.
     * @param {AppointmentDeleteArgs} args - Arguments to delete one Appointment.
     * @example
     * // Delete one Appointment
     * const Appointment = await prisma.appointment.delete({
     *   where: {
     *     // ... filter to delete one Appointment
     *   }
     * })
     * 
     */
    delete<T extends AppointmentDeleteArgs>(args: SelectSubset<T, AppointmentDeleteArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Appointment.
     * @param {AppointmentUpdateArgs} args - Arguments to update one Appointment.
     * @example
     * // Update one Appointment
     * const appointment = await prisma.appointment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AppointmentUpdateArgs>(args: SelectSubset<T, AppointmentUpdateArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Appointments.
     * @param {AppointmentDeleteManyArgs} args - Arguments to filter Appointments to delete.
     * @example
     * // Delete a few Appointments
     * const { count } = await prisma.appointment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AppointmentDeleteManyArgs>(args?: SelectSubset<T, AppointmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Appointments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Appointments
     * const appointment = await prisma.appointment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AppointmentUpdateManyArgs>(args: SelectSubset<T, AppointmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Appointment.
     * @param {AppointmentUpsertArgs} args - Arguments to update or create a Appointment.
     * @example
     * // Update or create a Appointment
     * const appointment = await prisma.appointment.upsert({
     *   create: {
     *     // ... data to create a Appointment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Appointment we want to update
     *   }
     * })
     */
    upsert<T extends AppointmentUpsertArgs>(args: SelectSubset<T, AppointmentUpsertArgs<ExtArgs>>): Prisma__AppointmentClient<$Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Appointments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentCountArgs} args - Arguments to filter Appointments to count.
     * @example
     * // Count the number of Appointments
     * const count = await prisma.appointment.count({
     *   where: {
     *     // ... the filter for the Appointments we want to count
     *   }
     * })
    **/
    count<T extends AppointmentCountArgs>(
      args?: Subset<T, AppointmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppointmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Appointment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppointmentAggregateArgs>(args: Subset<T, AppointmentAggregateArgs>): Prisma.PrismaPromise<GetAppointmentAggregateType<T>>

    /**
     * Group by Appointment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppointmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppointmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppointmentGroupByArgs['orderBy'] }
        : { orderBy?: AppointmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppointmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppointmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Appointment model
   */
  readonly fields: AppointmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Appointment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AppointmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Appointment$roomArgs<ExtArgs> = {}>(args?: Subset<T, Appointment$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Appointment model
   */ 
  interface AppointmentFieldRefs {
    readonly id: FieldRef<"Appointment", 'String'>
    readonly clientId: FieldRef<"Appointment", 'String'>
    readonly roomId: FieldRef<"Appointment", 'String'>
    readonly type: FieldRef<"Appointment", 'AppointmentType'>
    readonly start: FieldRef<"Appointment", 'DateTime'>
    readonly end: FieldRef<"Appointment", 'DateTime'>
    readonly location: FieldRef<"Appointment", 'String'>
    readonly participants: FieldRef<"Appointment", 'Json'>
    readonly status: FieldRef<"Appointment", 'String'>
    readonly createdAt: FieldRef<"Appointment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Appointment findUnique
   */
  export type AppointmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter, which Appointment to fetch.
     */
    where: AppointmentWhereUniqueInput
  }

  /**
   * Appointment findUniqueOrThrow
   */
  export type AppointmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter, which Appointment to fetch.
     */
    where: AppointmentWhereUniqueInput
  }

  /**
   * Appointment findFirst
   */
  export type AppointmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter, which Appointment to fetch.
     */
    where?: AppointmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Appointments to fetch.
     */
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Appointments.
     */
    cursor?: AppointmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Appointments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Appointments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Appointments.
     */
    distinct?: AppointmentScalarFieldEnum | AppointmentScalarFieldEnum[]
  }

  /**
   * Appointment findFirstOrThrow
   */
  export type AppointmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter, which Appointment to fetch.
     */
    where?: AppointmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Appointments to fetch.
     */
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Appointments.
     */
    cursor?: AppointmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Appointments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Appointments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Appointments.
     */
    distinct?: AppointmentScalarFieldEnum | AppointmentScalarFieldEnum[]
  }

  /**
   * Appointment findMany
   */
  export type AppointmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter, which Appointments to fetch.
     */
    where?: AppointmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Appointments to fetch.
     */
    orderBy?: AppointmentOrderByWithRelationInput | AppointmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Appointments.
     */
    cursor?: AppointmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Appointments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Appointments.
     */
    skip?: number
    distinct?: AppointmentScalarFieldEnum | AppointmentScalarFieldEnum[]
  }

  /**
   * Appointment create
   */
  export type AppointmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Appointment.
     */
    data: XOR<AppointmentCreateInput, AppointmentUncheckedCreateInput>
  }

  /**
   * Appointment createMany
   */
  export type AppointmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Appointments.
     */
    data: AppointmentCreateManyInput | AppointmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Appointment createManyAndReturn
   */
  export type AppointmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Appointments.
     */
    data: AppointmentCreateManyInput | AppointmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Appointment update
   */
  export type AppointmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Appointment.
     */
    data: XOR<AppointmentUpdateInput, AppointmentUncheckedUpdateInput>
    /**
     * Choose, which Appointment to update.
     */
    where: AppointmentWhereUniqueInput
  }

  /**
   * Appointment updateMany
   */
  export type AppointmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Appointments.
     */
    data: XOR<AppointmentUpdateManyMutationInput, AppointmentUncheckedUpdateManyInput>
    /**
     * Filter which Appointments to update
     */
    where?: AppointmentWhereInput
  }

  /**
   * Appointment upsert
   */
  export type AppointmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Appointment to update in case it exists.
     */
    where: AppointmentWhereUniqueInput
    /**
     * In case the Appointment found by the `where` argument doesn't exist, create a new Appointment with this data.
     */
    create: XOR<AppointmentCreateInput, AppointmentUncheckedCreateInput>
    /**
     * In case the Appointment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AppointmentUpdateInput, AppointmentUncheckedUpdateInput>
  }

  /**
   * Appointment delete
   */
  export type AppointmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
    /**
     * Filter which Appointment to delete.
     */
    where: AppointmentWhereUniqueInput
  }

  /**
   * Appointment deleteMany
   */
  export type AppointmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Appointments to delete
     */
    where?: AppointmentWhereInput
  }

  /**
   * Appointment.room
   */
  export type Appointment$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Appointment without action
   */
  export type AppointmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Appointment
     */
    select?: AppointmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AppointmentInclude<ExtArgs> | null
  }


  /**
   * Model Document
   */

  export type AggregateDocument = {
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  export type DocumentAvgAggregateOutputType = {
    size: number | null
  }

  export type DocumentSumAggregateOutputType = {
    size: number | null
  }

  export type DocumentMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    category: $Enums.DocCategory | null
    url: string | null
    thumbUrl: string | null
    size: number | null
    capturedAt: Date | null
    capturedBy: string | null
    clientVisible: boolean | null
    clientWatermark: boolean | null
    createdAt: Date | null
  }

  export type DocumentMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    category: $Enums.DocCategory | null
    url: string | null
    thumbUrl: string | null
    size: number | null
    capturedAt: Date | null
    capturedBy: string | null
    clientVisible: boolean | null
    clientWatermark: boolean | null
    createdAt: Date | null
  }

  export type DocumentCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    category: number
    url: number
    thumbUrl: number
    size: number
    labels: number
    capturedAt: number
    capturedBy: number
    clientVisible: number
    clientWatermark: number
    createdAt: number
    _all: number
  }


  export type DocumentAvgAggregateInputType = {
    size?: true
  }

  export type DocumentSumAggregateInputType = {
    size?: true
  }

  export type DocumentMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    category?: true
    url?: true
    thumbUrl?: true
    size?: true
    capturedAt?: true
    capturedBy?: true
    clientVisible?: true
    clientWatermark?: true
    createdAt?: true
  }

  export type DocumentMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    category?: true
    url?: true
    thumbUrl?: true
    size?: true
    capturedAt?: true
    capturedBy?: true
    clientVisible?: true
    clientWatermark?: true
    createdAt?: true
  }

  export type DocumentCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    category?: true
    url?: true
    thumbUrl?: true
    size?: true
    labels?: true
    capturedAt?: true
    capturedBy?: true
    clientVisible?: true
    clientWatermark?: true
    createdAt?: true
    _all?: true
  }

  export type DocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Document to aggregate.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documents
    **/
    _count?: true | DocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentMaxAggregateInputType
  }

  export type GetDocumentAggregateType<T extends DocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument[P]>
      : GetScalarType<T[P], AggregateDocument[P]>
  }




  export type DocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithAggregationInput | DocumentOrderByWithAggregationInput[]
    by: DocumentScalarFieldEnum[] | DocumentScalarFieldEnum
    having?: DocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentCountAggregateInputType | true
    _avg?: DocumentAvgAggregateInputType
    _sum?: DocumentSumAggregateInputType
    _min?: DocumentMinAggregateInputType
    _max?: DocumentMaxAggregateInputType
  }

  export type DocumentGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    category: $Enums.DocCategory
    url: string
    thumbUrl: string | null
    size: number | null
    labels: string[]
    capturedAt: Date | null
    capturedBy: string | null
    clientVisible: boolean
    clientWatermark: boolean
    createdAt: Date
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  type GetDocumentGroupByPayload<T extends DocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentGroupByOutputType[P]>
        }
      >
    >


  export type DocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    category?: boolean
    url?: boolean
    thumbUrl?: boolean
    size?: boolean
    labels?: boolean
    capturedAt?: boolean
    capturedBy?: boolean
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Document$roomArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    category?: boolean
    url?: boolean
    thumbUrl?: boolean
    size?: boolean
    labels?: boolean
    capturedAt?: boolean
    capturedBy?: boolean
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Document$roomArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    category?: boolean
    url?: boolean
    thumbUrl?: boolean
    size?: boolean
    labels?: boolean
    capturedAt?: boolean
    capturedBy?: boolean
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: boolean
  }

  export type DocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Document$roomArgs<ExtArgs>
  }
  export type DocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Document$roomArgs<ExtArgs>
  }

  export type $DocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Document"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      category: $Enums.DocCategory
      url: string
      thumbUrl: string | null
      size: number | null
      labels: string[]
      capturedAt: Date | null
      capturedBy: string | null
      clientVisible: boolean
      clientWatermark: boolean
      createdAt: Date
    }, ExtArgs["result"]["document"]>
    composites: {}
  }

  type DocumentGetPayload<S extends boolean | null | undefined | DocumentDefaultArgs> = $Result.GetResult<Prisma.$DocumentPayload, S>

  type DocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DocumentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentCountAggregateInputType | true
    }

  export interface DocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Document'], meta: { name: 'Document' } }
    /**
     * Find zero or one Document that matches the filter.
     * @param {DocumentFindUniqueArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentFindUniqueArgs>(args: SelectSubset<T, DocumentFindUniqueArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Document that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DocumentFindUniqueOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentFindFirstArgs>(args?: SelectSubset<T, DocumentFindFirstArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.document.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.document.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentWithIdOnly = await prisma.document.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentFindManyArgs>(args?: SelectSubset<T, DocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Document.
     * @param {DocumentCreateArgs} args - Arguments to create a Document.
     * @example
     * // Create one Document
     * const Document = await prisma.document.create({
     *   data: {
     *     // ... data to create a Document
     *   }
     * })
     * 
     */
    create<T extends DocumentCreateArgs>(args: SelectSubset<T, DocumentCreateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Documents.
     * @param {DocumentCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentCreateManyArgs>(args?: SelectSubset<T, DocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documents and returns the data saved in the database.
     * @param {DocumentCreateManyAndReturnArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documents and only return the `id`
     * const documentWithIdOnly = await prisma.document.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Document.
     * @param {DocumentDeleteArgs} args - Arguments to delete one Document.
     * @example
     * // Delete one Document
     * const Document = await prisma.document.delete({
     *   where: {
     *     // ... filter to delete one Document
     *   }
     * })
     * 
     */
    delete<T extends DocumentDeleteArgs>(args: SelectSubset<T, DocumentDeleteArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Document.
     * @param {DocumentUpdateArgs} args - Arguments to update one Document.
     * @example
     * // Update one Document
     * const document = await prisma.document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentUpdateArgs>(args: SelectSubset<T, DocumentUpdateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Documents.
     * @param {DocumentDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentDeleteManyArgs>(args?: SelectSubset<T, DocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentUpdateManyArgs>(args: SelectSubset<T, DocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document.
     * @param {DocumentUpsertArgs} args - Arguments to update or create a Document.
     * @example
     * // Update or create a Document
     * const document = await prisma.document.upsert({
     *   create: {
     *     // ... data to create a Document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document we want to update
     *   }
     * })
     */
    upsert<T extends DocumentUpsertArgs>(args: SelectSubset<T, DocumentUpsertArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.document.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends DocumentCountArgs>(
      args?: Subset<T, DocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentAggregateArgs>(args: Subset<T, DocumentAggregateArgs>): Prisma.PrismaPromise<GetDocumentAggregateType<T>>

    /**
     * Group by Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentGroupByArgs['orderBy'] }
        : { orderBy?: DocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Document model
   */
  readonly fields: DocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Document$roomArgs<ExtArgs> = {}>(args?: Subset<T, Document$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Document model
   */ 
  interface DocumentFieldRefs {
    readonly id: FieldRef<"Document", 'String'>
    readonly clientId: FieldRef<"Document", 'String'>
    readonly roomId: FieldRef<"Document", 'String'>
    readonly category: FieldRef<"Document", 'DocCategory'>
    readonly url: FieldRef<"Document", 'String'>
    readonly thumbUrl: FieldRef<"Document", 'String'>
    readonly size: FieldRef<"Document", 'Int'>
    readonly labels: FieldRef<"Document", 'String[]'>
    readonly capturedAt: FieldRef<"Document", 'DateTime'>
    readonly capturedBy: FieldRef<"Document", 'String'>
    readonly clientVisible: FieldRef<"Document", 'Boolean'>
    readonly clientWatermark: FieldRef<"Document", 'Boolean'>
    readonly createdAt: FieldRef<"Document", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Document findUnique
   */
  export type DocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findUniqueOrThrow
   */
  export type DocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findFirst
   */
  export type DocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findFirstOrThrow
   */
  export type DocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findMany
   */
  export type DocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Documents to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document create
   */
  export type DocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a Document.
     */
    data: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
  }

  /**
   * Document createMany
   */
  export type DocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Document createManyAndReturn
   */
  export type DocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Document update
   */
  export type DocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a Document.
     */
    data: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
    /**
     * Choose, which Document to update.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document updateMany
   */
  export type DocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
  }

  /**
   * Document upsert
   */
  export type DocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the Document to update in case it exists.
     */
    where: DocumentWhereUniqueInput
    /**
     * In case the Document found by the `where` argument doesn't exist, create a new Document with this data.
     */
    create: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
    /**
     * In case the Document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
  }

  /**
   * Document delete
   */
  export type DocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter which Document to delete.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document deleteMany
   */
  export type DocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documents to delete
     */
    where?: DocumentWhereInput
  }

  /**
   * Document.room
   */
  export type Document$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Document without action
   */
  export type DocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
  }


  /**
   * Model DesignVersion
   */

  export type AggregateDesignVersion = {
    _count: DesignVersionCountAggregateOutputType | null
    _avg: DesignVersionAvgAggregateOutputType | null
    _sum: DesignVersionSumAggregateOutputType | null
    _min: DesignVersionMinAggregateOutputType | null
    _max: DesignVersionMaxAggregateOutputType | null
  }

  export type DesignVersionAvgAggregateOutputType = {
    version: number | null
  }

  export type DesignVersionSumAggregateOutputType = {
    version: number | null
  }

  export type DesignVersionMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    version: number | null
    notes: string | null
    finalApproved: boolean | null
    createdAt: Date | null
  }

  export type DesignVersionMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    version: number | null
    notes: string | null
    finalApproved: boolean | null
    createdAt: Date | null
  }

  export type DesignVersionCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    version: number
    notes: number
    assets: number
    finalApproved: number
    createdAt: number
    _all: number
  }


  export type DesignVersionAvgAggregateInputType = {
    version?: true
  }

  export type DesignVersionSumAggregateInputType = {
    version?: true
  }

  export type DesignVersionMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    version?: true
    notes?: true
    finalApproved?: true
    createdAt?: true
  }

  export type DesignVersionMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    version?: true
    notes?: true
    finalApproved?: true
    createdAt?: true
  }

  export type DesignVersionCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    version?: true
    notes?: true
    assets?: true
    finalApproved?: true
    createdAt?: true
    _all?: true
  }

  export type DesignVersionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DesignVersion to aggregate.
     */
    where?: DesignVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DesignVersions to fetch.
     */
    orderBy?: DesignVersionOrderByWithRelationInput | DesignVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DesignVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DesignVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DesignVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DesignVersions
    **/
    _count?: true | DesignVersionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DesignVersionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DesignVersionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DesignVersionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DesignVersionMaxAggregateInputType
  }

  export type GetDesignVersionAggregateType<T extends DesignVersionAggregateArgs> = {
        [P in keyof T & keyof AggregateDesignVersion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDesignVersion[P]>
      : GetScalarType<T[P], AggregateDesignVersion[P]>
  }




  export type DesignVersionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesignVersionWhereInput
    orderBy?: DesignVersionOrderByWithAggregationInput | DesignVersionOrderByWithAggregationInput[]
    by: DesignVersionScalarFieldEnum[] | DesignVersionScalarFieldEnum
    having?: DesignVersionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DesignVersionCountAggregateInputType | true
    _avg?: DesignVersionAvgAggregateInputType
    _sum?: DesignVersionSumAggregateInputType
    _min?: DesignVersionMinAggregateInputType
    _max?: DesignVersionMaxAggregateInputType
  }

  export type DesignVersionGroupByOutputType = {
    id: string
    clientId: string
    roomId: string
    version: number
    notes: string | null
    assets: JsonValue
    finalApproved: boolean
    createdAt: Date
    _count: DesignVersionCountAggregateOutputType | null
    _avg: DesignVersionAvgAggregateOutputType | null
    _sum: DesignVersionSumAggregateOutputType | null
    _min: DesignVersionMinAggregateOutputType | null
    _max: DesignVersionMaxAggregateOutputType | null
  }

  type GetDesignVersionGroupByPayload<T extends DesignVersionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DesignVersionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DesignVersionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DesignVersionGroupByOutputType[P]>
            : GetScalarType<T[P], DesignVersionGroupByOutputType[P]>
        }
      >
    >


  export type DesignVersionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    version?: boolean
    notes?: boolean
    assets?: boolean
    finalApproved?: boolean
    createdAt?: boolean
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["designVersion"]>

  export type DesignVersionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    version?: boolean
    notes?: boolean
    assets?: boolean
    finalApproved?: boolean
    createdAt?: boolean
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["designVersion"]>

  export type DesignVersionSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    version?: boolean
    notes?: boolean
    assets?: boolean
    finalApproved?: boolean
    createdAt?: boolean
  }

  export type DesignVersionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }
  export type DesignVersionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }

  export type $DesignVersionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DesignVersion"
    objects: {
      room: Prisma.$RoomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string
      version: number
      notes: string | null
      assets: Prisma.JsonValue
      finalApproved: boolean
      createdAt: Date
    }, ExtArgs["result"]["designVersion"]>
    composites: {}
  }

  type DesignVersionGetPayload<S extends boolean | null | undefined | DesignVersionDefaultArgs> = $Result.GetResult<Prisma.$DesignVersionPayload, S>

  type DesignVersionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DesignVersionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DesignVersionCountAggregateInputType | true
    }

  export interface DesignVersionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DesignVersion'], meta: { name: 'DesignVersion' } }
    /**
     * Find zero or one DesignVersion that matches the filter.
     * @param {DesignVersionFindUniqueArgs} args - Arguments to find a DesignVersion
     * @example
     * // Get one DesignVersion
     * const designVersion = await prisma.designVersion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DesignVersionFindUniqueArgs>(args: SelectSubset<T, DesignVersionFindUniqueArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DesignVersion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DesignVersionFindUniqueOrThrowArgs} args - Arguments to find a DesignVersion
     * @example
     * // Get one DesignVersion
     * const designVersion = await prisma.designVersion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DesignVersionFindUniqueOrThrowArgs>(args: SelectSubset<T, DesignVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DesignVersion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionFindFirstArgs} args - Arguments to find a DesignVersion
     * @example
     * // Get one DesignVersion
     * const designVersion = await prisma.designVersion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DesignVersionFindFirstArgs>(args?: SelectSubset<T, DesignVersionFindFirstArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DesignVersion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionFindFirstOrThrowArgs} args - Arguments to find a DesignVersion
     * @example
     * // Get one DesignVersion
     * const designVersion = await prisma.designVersion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DesignVersionFindFirstOrThrowArgs>(args?: SelectSubset<T, DesignVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DesignVersions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DesignVersions
     * const designVersions = await prisma.designVersion.findMany()
     * 
     * // Get first 10 DesignVersions
     * const designVersions = await prisma.designVersion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const designVersionWithIdOnly = await prisma.designVersion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DesignVersionFindManyArgs>(args?: SelectSubset<T, DesignVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DesignVersion.
     * @param {DesignVersionCreateArgs} args - Arguments to create a DesignVersion.
     * @example
     * // Create one DesignVersion
     * const DesignVersion = await prisma.designVersion.create({
     *   data: {
     *     // ... data to create a DesignVersion
     *   }
     * })
     * 
     */
    create<T extends DesignVersionCreateArgs>(args: SelectSubset<T, DesignVersionCreateArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DesignVersions.
     * @param {DesignVersionCreateManyArgs} args - Arguments to create many DesignVersions.
     * @example
     * // Create many DesignVersions
     * const designVersion = await prisma.designVersion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DesignVersionCreateManyArgs>(args?: SelectSubset<T, DesignVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DesignVersions and returns the data saved in the database.
     * @param {DesignVersionCreateManyAndReturnArgs} args - Arguments to create many DesignVersions.
     * @example
     * // Create many DesignVersions
     * const designVersion = await prisma.designVersion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DesignVersions and only return the `id`
     * const designVersionWithIdOnly = await prisma.designVersion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DesignVersionCreateManyAndReturnArgs>(args?: SelectSubset<T, DesignVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DesignVersion.
     * @param {DesignVersionDeleteArgs} args - Arguments to delete one DesignVersion.
     * @example
     * // Delete one DesignVersion
     * const DesignVersion = await prisma.designVersion.delete({
     *   where: {
     *     // ... filter to delete one DesignVersion
     *   }
     * })
     * 
     */
    delete<T extends DesignVersionDeleteArgs>(args: SelectSubset<T, DesignVersionDeleteArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DesignVersion.
     * @param {DesignVersionUpdateArgs} args - Arguments to update one DesignVersion.
     * @example
     * // Update one DesignVersion
     * const designVersion = await prisma.designVersion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DesignVersionUpdateArgs>(args: SelectSubset<T, DesignVersionUpdateArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DesignVersions.
     * @param {DesignVersionDeleteManyArgs} args - Arguments to filter DesignVersions to delete.
     * @example
     * // Delete a few DesignVersions
     * const { count } = await prisma.designVersion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DesignVersionDeleteManyArgs>(args?: SelectSubset<T, DesignVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DesignVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DesignVersions
     * const designVersion = await prisma.designVersion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DesignVersionUpdateManyArgs>(args: SelectSubset<T, DesignVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DesignVersion.
     * @param {DesignVersionUpsertArgs} args - Arguments to update or create a DesignVersion.
     * @example
     * // Update or create a DesignVersion
     * const designVersion = await prisma.designVersion.upsert({
     *   create: {
     *     // ... data to create a DesignVersion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DesignVersion we want to update
     *   }
     * })
     */
    upsert<T extends DesignVersionUpsertArgs>(args: SelectSubset<T, DesignVersionUpsertArgs<ExtArgs>>): Prisma__DesignVersionClient<$Result.GetResult<Prisma.$DesignVersionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DesignVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionCountArgs} args - Arguments to filter DesignVersions to count.
     * @example
     * // Count the number of DesignVersions
     * const count = await prisma.designVersion.count({
     *   where: {
     *     // ... the filter for the DesignVersions we want to count
     *   }
     * })
    **/
    count<T extends DesignVersionCountArgs>(
      args?: Subset<T, DesignVersionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DesignVersionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DesignVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DesignVersionAggregateArgs>(args: Subset<T, DesignVersionAggregateArgs>): Prisma.PrismaPromise<GetDesignVersionAggregateType<T>>

    /**
     * Group by DesignVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesignVersionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DesignVersionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DesignVersionGroupByArgs['orderBy'] }
        : { orderBy?: DesignVersionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DesignVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDesignVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DesignVersion model
   */
  readonly fields: DesignVersionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DesignVersion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DesignVersionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    room<T extends RoomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoomDefaultArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DesignVersion model
   */ 
  interface DesignVersionFieldRefs {
    readonly id: FieldRef<"DesignVersion", 'String'>
    readonly clientId: FieldRef<"DesignVersion", 'String'>
    readonly roomId: FieldRef<"DesignVersion", 'String'>
    readonly version: FieldRef<"DesignVersion", 'Int'>
    readonly notes: FieldRef<"DesignVersion", 'String'>
    readonly assets: FieldRef<"DesignVersion", 'Json'>
    readonly finalApproved: FieldRef<"DesignVersion", 'Boolean'>
    readonly createdAt: FieldRef<"DesignVersion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DesignVersion findUnique
   */
  export type DesignVersionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter, which DesignVersion to fetch.
     */
    where: DesignVersionWhereUniqueInput
  }

  /**
   * DesignVersion findUniqueOrThrow
   */
  export type DesignVersionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter, which DesignVersion to fetch.
     */
    where: DesignVersionWhereUniqueInput
  }

  /**
   * DesignVersion findFirst
   */
  export type DesignVersionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter, which DesignVersion to fetch.
     */
    where?: DesignVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DesignVersions to fetch.
     */
    orderBy?: DesignVersionOrderByWithRelationInput | DesignVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DesignVersions.
     */
    cursor?: DesignVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DesignVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DesignVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DesignVersions.
     */
    distinct?: DesignVersionScalarFieldEnum | DesignVersionScalarFieldEnum[]
  }

  /**
   * DesignVersion findFirstOrThrow
   */
  export type DesignVersionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter, which DesignVersion to fetch.
     */
    where?: DesignVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DesignVersions to fetch.
     */
    orderBy?: DesignVersionOrderByWithRelationInput | DesignVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DesignVersions.
     */
    cursor?: DesignVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DesignVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DesignVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DesignVersions.
     */
    distinct?: DesignVersionScalarFieldEnum | DesignVersionScalarFieldEnum[]
  }

  /**
   * DesignVersion findMany
   */
  export type DesignVersionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter, which DesignVersions to fetch.
     */
    where?: DesignVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DesignVersions to fetch.
     */
    orderBy?: DesignVersionOrderByWithRelationInput | DesignVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DesignVersions.
     */
    cursor?: DesignVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DesignVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DesignVersions.
     */
    skip?: number
    distinct?: DesignVersionScalarFieldEnum | DesignVersionScalarFieldEnum[]
  }

  /**
   * DesignVersion create
   */
  export type DesignVersionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * The data needed to create a DesignVersion.
     */
    data: XOR<DesignVersionCreateInput, DesignVersionUncheckedCreateInput>
  }

  /**
   * DesignVersion createMany
   */
  export type DesignVersionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DesignVersions.
     */
    data: DesignVersionCreateManyInput | DesignVersionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DesignVersion createManyAndReturn
   */
  export type DesignVersionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DesignVersions.
     */
    data: DesignVersionCreateManyInput | DesignVersionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DesignVersion update
   */
  export type DesignVersionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * The data needed to update a DesignVersion.
     */
    data: XOR<DesignVersionUpdateInput, DesignVersionUncheckedUpdateInput>
    /**
     * Choose, which DesignVersion to update.
     */
    where: DesignVersionWhereUniqueInput
  }

  /**
   * DesignVersion updateMany
   */
  export type DesignVersionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DesignVersions.
     */
    data: XOR<DesignVersionUpdateManyMutationInput, DesignVersionUncheckedUpdateManyInput>
    /**
     * Filter which DesignVersions to update
     */
    where?: DesignVersionWhereInput
  }

  /**
   * DesignVersion upsert
   */
  export type DesignVersionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * The filter to search for the DesignVersion to update in case it exists.
     */
    where: DesignVersionWhereUniqueInput
    /**
     * In case the DesignVersion found by the `where` argument doesn't exist, create a new DesignVersion with this data.
     */
    create: XOR<DesignVersionCreateInput, DesignVersionUncheckedCreateInput>
    /**
     * In case the DesignVersion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DesignVersionUpdateInput, DesignVersionUncheckedUpdateInput>
  }

  /**
   * DesignVersion delete
   */
  export type DesignVersionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
    /**
     * Filter which DesignVersion to delete.
     */
    where: DesignVersionWhereUniqueInput
  }

  /**
   * DesignVersion deleteMany
   */
  export type DesignVersionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DesignVersions to delete
     */
    where?: DesignVersionWhereInput
  }

  /**
   * DesignVersion without action
   */
  export type DesignVersionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesignVersion
     */
    select?: DesignVersionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesignVersionInclude<ExtArgs> | null
  }


  /**
   * Model ParsedSpecItem
   */

  export type AggregateParsedSpecItem = {
    _count: ParsedSpecItemCountAggregateOutputType | null
    _avg: ParsedSpecItemAvgAggregateOutputType | null
    _sum: ParsedSpecItemSumAggregateOutputType | null
    _min: ParsedSpecItemMinAggregateOutputType | null
    _max: ParsedSpecItemMaxAggregateOutputType | null
  }

  export type ParsedSpecItemAvgAggregateOutputType = {
    specVersion: number | null
    lineNo: number | null
    qty: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type ParsedSpecItemSumAggregateOutputType = {
    specVersion: number | null
    lineNo: number | null
    qty: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type ParsedSpecItemMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    specVersion: number | null
    lineNo: number | null
    brand: string | null
    description: string | null
    finish: string | null
    qty: number | null
    unitPrice: number | null
    totalPrice: number | null
    status: $Enums.SpecStatus | null
    note: string | null
    isCritical: boolean | null
    createdAt: Date | null
  }

  export type ParsedSpecItemMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    specVersion: number | null
    lineNo: number | null
    brand: string | null
    description: string | null
    finish: string | null
    qty: number | null
    unitPrice: number | null
    totalPrice: number | null
    status: $Enums.SpecStatus | null
    note: string | null
    isCritical: boolean | null
    createdAt: Date | null
  }

  export type ParsedSpecItemCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    specVersion: number
    lineNo: number
    brand: number
    description: number
    finish: number
    qty: number
    unitPrice: number
    totalPrice: number
    status: number
    note: number
    isCritical: number
    createdAt: number
    _all: number
  }


  export type ParsedSpecItemAvgAggregateInputType = {
    specVersion?: true
    lineNo?: true
    qty?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type ParsedSpecItemSumAggregateInputType = {
    specVersion?: true
    lineNo?: true
    qty?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type ParsedSpecItemMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    specVersion?: true
    lineNo?: true
    brand?: true
    description?: true
    finish?: true
    qty?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    note?: true
    isCritical?: true
    createdAt?: true
  }

  export type ParsedSpecItemMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    specVersion?: true
    lineNo?: true
    brand?: true
    description?: true
    finish?: true
    qty?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    note?: true
    isCritical?: true
    createdAt?: true
  }

  export type ParsedSpecItemCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    specVersion?: true
    lineNo?: true
    brand?: true
    description?: true
    finish?: true
    qty?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    note?: true
    isCritical?: true
    createdAt?: true
    _all?: true
  }

  export type ParsedSpecItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ParsedSpecItem to aggregate.
     */
    where?: ParsedSpecItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParsedSpecItems to fetch.
     */
    orderBy?: ParsedSpecItemOrderByWithRelationInput | ParsedSpecItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ParsedSpecItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParsedSpecItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParsedSpecItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ParsedSpecItems
    **/
    _count?: true | ParsedSpecItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ParsedSpecItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ParsedSpecItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ParsedSpecItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ParsedSpecItemMaxAggregateInputType
  }

  export type GetParsedSpecItemAggregateType<T extends ParsedSpecItemAggregateArgs> = {
        [P in keyof T & keyof AggregateParsedSpecItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParsedSpecItem[P]>
      : GetScalarType<T[P], AggregateParsedSpecItem[P]>
  }




  export type ParsedSpecItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ParsedSpecItemWhereInput
    orderBy?: ParsedSpecItemOrderByWithAggregationInput | ParsedSpecItemOrderByWithAggregationInput[]
    by: ParsedSpecItemScalarFieldEnum[] | ParsedSpecItemScalarFieldEnum
    having?: ParsedSpecItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ParsedSpecItemCountAggregateInputType | true
    _avg?: ParsedSpecItemAvgAggregateInputType
    _sum?: ParsedSpecItemSumAggregateInputType
    _min?: ParsedSpecItemMinAggregateInputType
    _max?: ParsedSpecItemMaxAggregateInputType
  }

  export type ParsedSpecItemGroupByOutputType = {
    id: string
    clientId: string
    roomId: string
    specVersion: number
    lineNo: number
    brand: string | null
    description: string
    finish: string | null
    qty: number | null
    unitPrice: number | null
    totalPrice: number | null
    status: $Enums.SpecStatus
    note: string | null
    isCritical: boolean
    createdAt: Date
    _count: ParsedSpecItemCountAggregateOutputType | null
    _avg: ParsedSpecItemAvgAggregateOutputType | null
    _sum: ParsedSpecItemSumAggregateOutputType | null
    _min: ParsedSpecItemMinAggregateOutputType | null
    _max: ParsedSpecItemMaxAggregateOutputType | null
  }

  type GetParsedSpecItemGroupByPayload<T extends ParsedSpecItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ParsedSpecItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ParsedSpecItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ParsedSpecItemGroupByOutputType[P]>
            : GetScalarType<T[P], ParsedSpecItemGroupByOutputType[P]>
        }
      >
    >


  export type ParsedSpecItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    specVersion?: boolean
    lineNo?: boolean
    brand?: boolean
    description?: boolean
    finish?: boolean
    qty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    note?: boolean
    isCritical?: boolean
    createdAt?: boolean
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parsedSpecItem"]>

  export type ParsedSpecItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    specVersion?: boolean
    lineNo?: boolean
    brand?: boolean
    description?: boolean
    finish?: boolean
    qty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    note?: boolean
    isCritical?: boolean
    createdAt?: boolean
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parsedSpecItem"]>

  export type ParsedSpecItemSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    specVersion?: boolean
    lineNo?: boolean
    brand?: boolean
    description?: boolean
    finish?: boolean
    qty?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    note?: boolean
    isCritical?: boolean
    createdAt?: boolean
  }

  export type ParsedSpecItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }
  export type ParsedSpecItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }

  export type $ParsedSpecItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ParsedSpecItem"
    objects: {
      room: Prisma.$RoomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string
      specVersion: number
      lineNo: number
      brand: string | null
      description: string
      finish: string | null
      qty: number | null
      unitPrice: number | null
      totalPrice: number | null
      status: $Enums.SpecStatus
      note: string | null
      isCritical: boolean
      createdAt: Date
    }, ExtArgs["result"]["parsedSpecItem"]>
    composites: {}
  }

  type ParsedSpecItemGetPayload<S extends boolean | null | undefined | ParsedSpecItemDefaultArgs> = $Result.GetResult<Prisma.$ParsedSpecItemPayload, S>

  type ParsedSpecItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ParsedSpecItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ParsedSpecItemCountAggregateInputType | true
    }

  export interface ParsedSpecItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ParsedSpecItem'], meta: { name: 'ParsedSpecItem' } }
    /**
     * Find zero or one ParsedSpecItem that matches the filter.
     * @param {ParsedSpecItemFindUniqueArgs} args - Arguments to find a ParsedSpecItem
     * @example
     * // Get one ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ParsedSpecItemFindUniqueArgs>(args: SelectSubset<T, ParsedSpecItemFindUniqueArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ParsedSpecItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ParsedSpecItemFindUniqueOrThrowArgs} args - Arguments to find a ParsedSpecItem
     * @example
     * // Get one ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ParsedSpecItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ParsedSpecItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ParsedSpecItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemFindFirstArgs} args - Arguments to find a ParsedSpecItem
     * @example
     * // Get one ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ParsedSpecItemFindFirstArgs>(args?: SelectSubset<T, ParsedSpecItemFindFirstArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ParsedSpecItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemFindFirstOrThrowArgs} args - Arguments to find a ParsedSpecItem
     * @example
     * // Get one ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ParsedSpecItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ParsedSpecItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ParsedSpecItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ParsedSpecItems
     * const parsedSpecItems = await prisma.parsedSpecItem.findMany()
     * 
     * // Get first 10 ParsedSpecItems
     * const parsedSpecItems = await prisma.parsedSpecItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const parsedSpecItemWithIdOnly = await prisma.parsedSpecItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ParsedSpecItemFindManyArgs>(args?: SelectSubset<T, ParsedSpecItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ParsedSpecItem.
     * @param {ParsedSpecItemCreateArgs} args - Arguments to create a ParsedSpecItem.
     * @example
     * // Create one ParsedSpecItem
     * const ParsedSpecItem = await prisma.parsedSpecItem.create({
     *   data: {
     *     // ... data to create a ParsedSpecItem
     *   }
     * })
     * 
     */
    create<T extends ParsedSpecItemCreateArgs>(args: SelectSubset<T, ParsedSpecItemCreateArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ParsedSpecItems.
     * @param {ParsedSpecItemCreateManyArgs} args - Arguments to create many ParsedSpecItems.
     * @example
     * // Create many ParsedSpecItems
     * const parsedSpecItem = await prisma.parsedSpecItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ParsedSpecItemCreateManyArgs>(args?: SelectSubset<T, ParsedSpecItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ParsedSpecItems and returns the data saved in the database.
     * @param {ParsedSpecItemCreateManyAndReturnArgs} args - Arguments to create many ParsedSpecItems.
     * @example
     * // Create many ParsedSpecItems
     * const parsedSpecItem = await prisma.parsedSpecItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ParsedSpecItems and only return the `id`
     * const parsedSpecItemWithIdOnly = await prisma.parsedSpecItem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ParsedSpecItemCreateManyAndReturnArgs>(args?: SelectSubset<T, ParsedSpecItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ParsedSpecItem.
     * @param {ParsedSpecItemDeleteArgs} args - Arguments to delete one ParsedSpecItem.
     * @example
     * // Delete one ParsedSpecItem
     * const ParsedSpecItem = await prisma.parsedSpecItem.delete({
     *   where: {
     *     // ... filter to delete one ParsedSpecItem
     *   }
     * })
     * 
     */
    delete<T extends ParsedSpecItemDeleteArgs>(args: SelectSubset<T, ParsedSpecItemDeleteArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ParsedSpecItem.
     * @param {ParsedSpecItemUpdateArgs} args - Arguments to update one ParsedSpecItem.
     * @example
     * // Update one ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ParsedSpecItemUpdateArgs>(args: SelectSubset<T, ParsedSpecItemUpdateArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ParsedSpecItems.
     * @param {ParsedSpecItemDeleteManyArgs} args - Arguments to filter ParsedSpecItems to delete.
     * @example
     * // Delete a few ParsedSpecItems
     * const { count } = await prisma.parsedSpecItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ParsedSpecItemDeleteManyArgs>(args?: SelectSubset<T, ParsedSpecItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ParsedSpecItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ParsedSpecItems
     * const parsedSpecItem = await prisma.parsedSpecItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ParsedSpecItemUpdateManyArgs>(args: SelectSubset<T, ParsedSpecItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ParsedSpecItem.
     * @param {ParsedSpecItemUpsertArgs} args - Arguments to update or create a ParsedSpecItem.
     * @example
     * // Update or create a ParsedSpecItem
     * const parsedSpecItem = await prisma.parsedSpecItem.upsert({
     *   create: {
     *     // ... data to create a ParsedSpecItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ParsedSpecItem we want to update
     *   }
     * })
     */
    upsert<T extends ParsedSpecItemUpsertArgs>(args: SelectSubset<T, ParsedSpecItemUpsertArgs<ExtArgs>>): Prisma__ParsedSpecItemClient<$Result.GetResult<Prisma.$ParsedSpecItemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ParsedSpecItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemCountArgs} args - Arguments to filter ParsedSpecItems to count.
     * @example
     * // Count the number of ParsedSpecItems
     * const count = await prisma.parsedSpecItem.count({
     *   where: {
     *     // ... the filter for the ParsedSpecItems we want to count
     *   }
     * })
    **/
    count<T extends ParsedSpecItemCountArgs>(
      args?: Subset<T, ParsedSpecItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ParsedSpecItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ParsedSpecItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ParsedSpecItemAggregateArgs>(args: Subset<T, ParsedSpecItemAggregateArgs>): Prisma.PrismaPromise<GetParsedSpecItemAggregateType<T>>

    /**
     * Group by ParsedSpecItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParsedSpecItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ParsedSpecItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ParsedSpecItemGroupByArgs['orderBy'] }
        : { orderBy?: ParsedSpecItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ParsedSpecItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParsedSpecItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ParsedSpecItem model
   */
  readonly fields: ParsedSpecItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ParsedSpecItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ParsedSpecItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    room<T extends RoomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoomDefaultArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ParsedSpecItem model
   */ 
  interface ParsedSpecItemFieldRefs {
    readonly id: FieldRef<"ParsedSpecItem", 'String'>
    readonly clientId: FieldRef<"ParsedSpecItem", 'String'>
    readonly roomId: FieldRef<"ParsedSpecItem", 'String'>
    readonly specVersion: FieldRef<"ParsedSpecItem", 'Int'>
    readonly lineNo: FieldRef<"ParsedSpecItem", 'Int'>
    readonly brand: FieldRef<"ParsedSpecItem", 'String'>
    readonly description: FieldRef<"ParsedSpecItem", 'String'>
    readonly finish: FieldRef<"ParsedSpecItem", 'String'>
    readonly qty: FieldRef<"ParsedSpecItem", 'Float'>
    readonly unitPrice: FieldRef<"ParsedSpecItem", 'Int'>
    readonly totalPrice: FieldRef<"ParsedSpecItem", 'Int'>
    readonly status: FieldRef<"ParsedSpecItem", 'SpecStatus'>
    readonly note: FieldRef<"ParsedSpecItem", 'String'>
    readonly isCritical: FieldRef<"ParsedSpecItem", 'Boolean'>
    readonly createdAt: FieldRef<"ParsedSpecItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ParsedSpecItem findUnique
   */
  export type ParsedSpecItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter, which ParsedSpecItem to fetch.
     */
    where: ParsedSpecItemWhereUniqueInput
  }

  /**
   * ParsedSpecItem findUniqueOrThrow
   */
  export type ParsedSpecItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter, which ParsedSpecItem to fetch.
     */
    where: ParsedSpecItemWhereUniqueInput
  }

  /**
   * ParsedSpecItem findFirst
   */
  export type ParsedSpecItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter, which ParsedSpecItem to fetch.
     */
    where?: ParsedSpecItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParsedSpecItems to fetch.
     */
    orderBy?: ParsedSpecItemOrderByWithRelationInput | ParsedSpecItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ParsedSpecItems.
     */
    cursor?: ParsedSpecItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParsedSpecItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParsedSpecItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ParsedSpecItems.
     */
    distinct?: ParsedSpecItemScalarFieldEnum | ParsedSpecItemScalarFieldEnum[]
  }

  /**
   * ParsedSpecItem findFirstOrThrow
   */
  export type ParsedSpecItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter, which ParsedSpecItem to fetch.
     */
    where?: ParsedSpecItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParsedSpecItems to fetch.
     */
    orderBy?: ParsedSpecItemOrderByWithRelationInput | ParsedSpecItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ParsedSpecItems.
     */
    cursor?: ParsedSpecItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParsedSpecItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParsedSpecItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ParsedSpecItems.
     */
    distinct?: ParsedSpecItemScalarFieldEnum | ParsedSpecItemScalarFieldEnum[]
  }

  /**
   * ParsedSpecItem findMany
   */
  export type ParsedSpecItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter, which ParsedSpecItems to fetch.
     */
    where?: ParsedSpecItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParsedSpecItems to fetch.
     */
    orderBy?: ParsedSpecItemOrderByWithRelationInput | ParsedSpecItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ParsedSpecItems.
     */
    cursor?: ParsedSpecItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParsedSpecItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParsedSpecItems.
     */
    skip?: number
    distinct?: ParsedSpecItemScalarFieldEnum | ParsedSpecItemScalarFieldEnum[]
  }

  /**
   * ParsedSpecItem create
   */
  export type ParsedSpecItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * The data needed to create a ParsedSpecItem.
     */
    data: XOR<ParsedSpecItemCreateInput, ParsedSpecItemUncheckedCreateInput>
  }

  /**
   * ParsedSpecItem createMany
   */
  export type ParsedSpecItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ParsedSpecItems.
     */
    data: ParsedSpecItemCreateManyInput | ParsedSpecItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ParsedSpecItem createManyAndReturn
   */
  export type ParsedSpecItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ParsedSpecItems.
     */
    data: ParsedSpecItemCreateManyInput | ParsedSpecItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ParsedSpecItem update
   */
  export type ParsedSpecItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * The data needed to update a ParsedSpecItem.
     */
    data: XOR<ParsedSpecItemUpdateInput, ParsedSpecItemUncheckedUpdateInput>
    /**
     * Choose, which ParsedSpecItem to update.
     */
    where: ParsedSpecItemWhereUniqueInput
  }

  /**
   * ParsedSpecItem updateMany
   */
  export type ParsedSpecItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ParsedSpecItems.
     */
    data: XOR<ParsedSpecItemUpdateManyMutationInput, ParsedSpecItemUncheckedUpdateManyInput>
    /**
     * Filter which ParsedSpecItems to update
     */
    where?: ParsedSpecItemWhereInput
  }

  /**
   * ParsedSpecItem upsert
   */
  export type ParsedSpecItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * The filter to search for the ParsedSpecItem to update in case it exists.
     */
    where: ParsedSpecItemWhereUniqueInput
    /**
     * In case the ParsedSpecItem found by the `where` argument doesn't exist, create a new ParsedSpecItem with this data.
     */
    create: XOR<ParsedSpecItemCreateInput, ParsedSpecItemUncheckedCreateInput>
    /**
     * In case the ParsedSpecItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ParsedSpecItemUpdateInput, ParsedSpecItemUncheckedUpdateInput>
  }

  /**
   * ParsedSpecItem delete
   */
  export type ParsedSpecItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
    /**
     * Filter which ParsedSpecItem to delete.
     */
    where: ParsedSpecItemWhereUniqueInput
  }

  /**
   * ParsedSpecItem deleteMany
   */
  export type ParsedSpecItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ParsedSpecItems to delete
     */
    where?: ParsedSpecItemWhereInput
  }

  /**
   * ParsedSpecItem without action
   */
  export type ParsedSpecItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParsedSpecItem
     */
    select?: ParsedSpecItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParsedSpecItemInclude<ExtArgs> | null
  }


  /**
   * Model Snag
   */

  export type AggregateSnag = {
    _count: SnagCountAggregateOutputType | null
    _min: SnagMinAggregateOutputType | null
    _max: SnagMaxAggregateOutputType | null
  }

  export type SnagMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    title: string | null
    description: string | null
    status: $Enums.SnagStatus | null
    assigneeId: string | null
    dueAt: Date | null
    clientVisible: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SnagMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    title: string | null
    description: string | null
    status: $Enums.SnagStatus | null
    assigneeId: string | null
    dueAt: Date | null
    clientVisible: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SnagCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    title: number
    description: number
    status: number
    assigneeId: number
    dueAt: number
    clientVisible: number
    photos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SnagMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    assigneeId?: true
    dueAt?: true
    clientVisible?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SnagMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    assigneeId?: true
    dueAt?: true
    clientVisible?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SnagCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    assigneeId?: true
    dueAt?: true
    clientVisible?: true
    photos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SnagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Snag to aggregate.
     */
    where?: SnagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snags to fetch.
     */
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SnagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Snags
    **/
    _count?: true | SnagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SnagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SnagMaxAggregateInputType
  }

  export type GetSnagAggregateType<T extends SnagAggregateArgs> = {
        [P in keyof T & keyof AggregateSnag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSnag[P]>
      : GetScalarType<T[P], AggregateSnag[P]>
  }




  export type SnagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnagWhereInput
    orderBy?: SnagOrderByWithAggregationInput | SnagOrderByWithAggregationInput[]
    by: SnagScalarFieldEnum[] | SnagScalarFieldEnum
    having?: SnagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SnagCountAggregateInputType | true
    _min?: SnagMinAggregateInputType
    _max?: SnagMaxAggregateInputType
  }

  export type SnagGroupByOutputType = {
    id: string
    clientId: string
    roomId: string
    title: string
    description: string | null
    status: $Enums.SnagStatus
    assigneeId: string | null
    dueAt: Date | null
    clientVisible: boolean
    photos: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: SnagCountAggregateOutputType | null
    _min: SnagMinAggregateOutputType | null
    _max: SnagMaxAggregateOutputType | null
  }

  type GetSnagGroupByPayload<T extends SnagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SnagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SnagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SnagGroupByOutputType[P]>
            : GetScalarType<T[P], SnagGroupByOutputType[P]>
        }
      >
    >


  export type SnagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    assigneeId?: boolean
    dueAt?: boolean
    clientVisible?: boolean
    photos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snag"]>

  export type SnagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    assigneeId?: boolean
    dueAt?: boolean
    clientVisible?: boolean
    photos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snag"]>

  export type SnagSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    assigneeId?: boolean
    dueAt?: boolean
    clientVisible?: boolean
    photos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SnagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }
  export type SnagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | RoomDefaultArgs<ExtArgs>
  }

  export type $SnagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Snag"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string
      title: string
      description: string | null
      status: $Enums.SnagStatus
      assigneeId: string | null
      dueAt: Date | null
      clientVisible: boolean
      photos: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["snag"]>
    composites: {}
  }

  type SnagGetPayload<S extends boolean | null | undefined | SnagDefaultArgs> = $Result.GetResult<Prisma.$SnagPayload, S>

  type SnagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SnagFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SnagCountAggregateInputType | true
    }

  export interface SnagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Snag'], meta: { name: 'Snag' } }
    /**
     * Find zero or one Snag that matches the filter.
     * @param {SnagFindUniqueArgs} args - Arguments to find a Snag
     * @example
     * // Get one Snag
     * const snag = await prisma.snag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SnagFindUniqueArgs>(args: SelectSubset<T, SnagFindUniqueArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Snag that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SnagFindUniqueOrThrowArgs} args - Arguments to find a Snag
     * @example
     * // Get one Snag
     * const snag = await prisma.snag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SnagFindUniqueOrThrowArgs>(args: SelectSubset<T, SnagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Snag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagFindFirstArgs} args - Arguments to find a Snag
     * @example
     * // Get one Snag
     * const snag = await prisma.snag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SnagFindFirstArgs>(args?: SelectSubset<T, SnagFindFirstArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Snag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagFindFirstOrThrowArgs} args - Arguments to find a Snag
     * @example
     * // Get one Snag
     * const snag = await prisma.snag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SnagFindFirstOrThrowArgs>(args?: SelectSubset<T, SnagFindFirstOrThrowArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Snags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Snags
     * const snags = await prisma.snag.findMany()
     * 
     * // Get first 10 Snags
     * const snags = await prisma.snag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const snagWithIdOnly = await prisma.snag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SnagFindManyArgs>(args?: SelectSubset<T, SnagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Snag.
     * @param {SnagCreateArgs} args - Arguments to create a Snag.
     * @example
     * // Create one Snag
     * const Snag = await prisma.snag.create({
     *   data: {
     *     // ... data to create a Snag
     *   }
     * })
     * 
     */
    create<T extends SnagCreateArgs>(args: SelectSubset<T, SnagCreateArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Snags.
     * @param {SnagCreateManyArgs} args - Arguments to create many Snags.
     * @example
     * // Create many Snags
     * const snag = await prisma.snag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SnagCreateManyArgs>(args?: SelectSubset<T, SnagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Snags and returns the data saved in the database.
     * @param {SnagCreateManyAndReturnArgs} args - Arguments to create many Snags.
     * @example
     * // Create many Snags
     * const snag = await prisma.snag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Snags and only return the `id`
     * const snagWithIdOnly = await prisma.snag.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SnagCreateManyAndReturnArgs>(args?: SelectSubset<T, SnagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Snag.
     * @param {SnagDeleteArgs} args - Arguments to delete one Snag.
     * @example
     * // Delete one Snag
     * const Snag = await prisma.snag.delete({
     *   where: {
     *     // ... filter to delete one Snag
     *   }
     * })
     * 
     */
    delete<T extends SnagDeleteArgs>(args: SelectSubset<T, SnagDeleteArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Snag.
     * @param {SnagUpdateArgs} args - Arguments to update one Snag.
     * @example
     * // Update one Snag
     * const snag = await prisma.snag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SnagUpdateArgs>(args: SelectSubset<T, SnagUpdateArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Snags.
     * @param {SnagDeleteManyArgs} args - Arguments to filter Snags to delete.
     * @example
     * // Delete a few Snags
     * const { count } = await prisma.snag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SnagDeleteManyArgs>(args?: SelectSubset<T, SnagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Snags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Snags
     * const snag = await prisma.snag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SnagUpdateManyArgs>(args: SelectSubset<T, SnagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Snag.
     * @param {SnagUpsertArgs} args - Arguments to update or create a Snag.
     * @example
     * // Update or create a Snag
     * const snag = await prisma.snag.upsert({
     *   create: {
     *     // ... data to create a Snag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Snag we want to update
     *   }
     * })
     */
    upsert<T extends SnagUpsertArgs>(args: SelectSubset<T, SnagUpsertArgs<ExtArgs>>): Prisma__SnagClient<$Result.GetResult<Prisma.$SnagPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Snags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagCountArgs} args - Arguments to filter Snags to count.
     * @example
     * // Count the number of Snags
     * const count = await prisma.snag.count({
     *   where: {
     *     // ... the filter for the Snags we want to count
     *   }
     * })
    **/
    count<T extends SnagCountArgs>(
      args?: Subset<T, SnagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SnagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Snag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SnagAggregateArgs>(args: Subset<T, SnagAggregateArgs>): Prisma.PrismaPromise<GetSnagAggregateType<T>>

    /**
     * Group by Snag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SnagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SnagGroupByArgs['orderBy'] }
        : { orderBy?: SnagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SnagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSnagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Snag model
   */
  readonly fields: SnagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Snag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SnagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends RoomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoomDefaultArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Snag model
   */ 
  interface SnagFieldRefs {
    readonly id: FieldRef<"Snag", 'String'>
    readonly clientId: FieldRef<"Snag", 'String'>
    readonly roomId: FieldRef<"Snag", 'String'>
    readonly title: FieldRef<"Snag", 'String'>
    readonly description: FieldRef<"Snag", 'String'>
    readonly status: FieldRef<"Snag", 'SnagStatus'>
    readonly assigneeId: FieldRef<"Snag", 'String'>
    readonly dueAt: FieldRef<"Snag", 'DateTime'>
    readonly clientVisible: FieldRef<"Snag", 'Boolean'>
    readonly photos: FieldRef<"Snag", 'Json'>
    readonly createdAt: FieldRef<"Snag", 'DateTime'>
    readonly updatedAt: FieldRef<"Snag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Snag findUnique
   */
  export type SnagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter, which Snag to fetch.
     */
    where: SnagWhereUniqueInput
  }

  /**
   * Snag findUniqueOrThrow
   */
  export type SnagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter, which Snag to fetch.
     */
    where: SnagWhereUniqueInput
  }

  /**
   * Snag findFirst
   */
  export type SnagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter, which Snag to fetch.
     */
    where?: SnagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snags to fetch.
     */
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Snags.
     */
    cursor?: SnagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Snags.
     */
    distinct?: SnagScalarFieldEnum | SnagScalarFieldEnum[]
  }

  /**
   * Snag findFirstOrThrow
   */
  export type SnagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter, which Snag to fetch.
     */
    where?: SnagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snags to fetch.
     */
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Snags.
     */
    cursor?: SnagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Snags.
     */
    distinct?: SnagScalarFieldEnum | SnagScalarFieldEnum[]
  }

  /**
   * Snag findMany
   */
  export type SnagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter, which Snags to fetch.
     */
    where?: SnagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snags to fetch.
     */
    orderBy?: SnagOrderByWithRelationInput | SnagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Snags.
     */
    cursor?: SnagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snags.
     */
    skip?: number
    distinct?: SnagScalarFieldEnum | SnagScalarFieldEnum[]
  }

  /**
   * Snag create
   */
  export type SnagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * The data needed to create a Snag.
     */
    data: XOR<SnagCreateInput, SnagUncheckedCreateInput>
  }

  /**
   * Snag createMany
   */
  export type SnagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Snags.
     */
    data: SnagCreateManyInput | SnagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Snag createManyAndReturn
   */
  export type SnagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Snags.
     */
    data: SnagCreateManyInput | SnagCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Snag update
   */
  export type SnagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * The data needed to update a Snag.
     */
    data: XOR<SnagUpdateInput, SnagUncheckedUpdateInput>
    /**
     * Choose, which Snag to update.
     */
    where: SnagWhereUniqueInput
  }

  /**
   * Snag updateMany
   */
  export type SnagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Snags.
     */
    data: XOR<SnagUpdateManyMutationInput, SnagUncheckedUpdateManyInput>
    /**
     * Filter which Snags to update
     */
    where?: SnagWhereInput
  }

  /**
   * Snag upsert
   */
  export type SnagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * The filter to search for the Snag to update in case it exists.
     */
    where: SnagWhereUniqueInput
    /**
     * In case the Snag found by the `where` argument doesn't exist, create a new Snag with this data.
     */
    create: XOR<SnagCreateInput, SnagUncheckedCreateInput>
    /**
     * In case the Snag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SnagUpdateInput, SnagUncheckedUpdateInput>
  }

  /**
   * Snag delete
   */
  export type SnagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
    /**
     * Filter which Snag to delete.
     */
    where: SnagWhereUniqueInput
  }

  /**
   * Snag deleteMany
   */
  export type SnagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Snags to delete
     */
    where?: SnagWhereInput
  }

  /**
   * Snag without action
   */
  export type SnagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snag
     */
    select?: SnagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnagInclude<ExtArgs> | null
  }


  /**
   * Model Job
   */

  export type AggregateJob = {
    _count: JobCountAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  export type JobMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    title: string | null
    description: string | null
    status: $Enums.JobStatus | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    title: string | null
    description: string | null
    status: $Enums.JobStatus | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    title: number
    description: number
    status: number
    startDate: number
    endDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type JobMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    title?: true
    description?: true
    status?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type JobAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Job to aggregate.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Jobs
    **/
    _count?: true | JobCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobMaxAggregateInputType
  }

  export type GetJobAggregateType<T extends JobAggregateArgs> = {
        [P in keyof T & keyof AggregateJob]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJob[P]>
      : GetScalarType<T[P], AggregateJob[P]>
  }




  export type JobGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
    orderBy?: JobOrderByWithAggregationInput | JobOrderByWithAggregationInput[]
    by: JobScalarFieldEnum[] | JobScalarFieldEnum
    having?: JobScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobCountAggregateInputType | true
    _min?: JobMinAggregateInputType
    _max?: JobMaxAggregateInputType
  }

  export type JobGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    title: string
    description: string | null
    status: $Enums.JobStatus
    startDate: Date | null
    endDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: JobCountAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  type GetJobGroupByPayload<T extends JobGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobGroupByOutputType[P]>
            : GetScalarType<T[P], JobGroupByOutputType[P]>
        }
      >
    >


  export type JobSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Job$roomArgs<ExtArgs>
  }, ExtArgs["result"]["job"]>

  export type JobSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Job$roomArgs<ExtArgs>
  }, ExtArgs["result"]["job"]>

  export type JobSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type JobInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Job$roomArgs<ExtArgs>
  }
  export type JobIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    room?: boolean | Job$roomArgs<ExtArgs>
  }

  export type $JobPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Job"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      room: Prisma.$RoomPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      title: string
      description: string | null
      status: $Enums.JobStatus
      startDate: Date | null
      endDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["job"]>
    composites: {}
  }

  type JobGetPayload<S extends boolean | null | undefined | JobDefaultArgs> = $Result.GetResult<Prisma.$JobPayload, S>

  type JobCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobCountAggregateInputType | true
    }

  export interface JobDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Job'], meta: { name: 'Job' } }
    /**
     * Find zero or one Job that matches the filter.
     * @param {JobFindUniqueArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobFindUniqueArgs>(args: SelectSubset<T, JobFindUniqueArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Job that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobFindUniqueOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobFindUniqueOrThrowArgs>(args: SelectSubset<T, JobFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Job that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobFindFirstArgs>(args?: SelectSubset<T, JobFindFirstArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Job that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobFindFirstOrThrowArgs>(args?: SelectSubset<T, JobFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jobs
     * const jobs = await prisma.job.findMany()
     * 
     * // Get first 10 Jobs
     * const jobs = await prisma.job.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobWithIdOnly = await prisma.job.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobFindManyArgs>(args?: SelectSubset<T, JobFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Job.
     * @param {JobCreateArgs} args - Arguments to create a Job.
     * @example
     * // Create one Job
     * const Job = await prisma.job.create({
     *   data: {
     *     // ... data to create a Job
     *   }
     * })
     * 
     */
    create<T extends JobCreateArgs>(args: SelectSubset<T, JobCreateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Jobs.
     * @param {JobCreateManyArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobCreateManyArgs>(args?: SelectSubset<T, JobCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jobs and returns the data saved in the database.
     * @param {JobCreateManyAndReturnArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jobs and only return the `id`
     * const jobWithIdOnly = await prisma.job.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobCreateManyAndReturnArgs>(args?: SelectSubset<T, JobCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Job.
     * @param {JobDeleteArgs} args - Arguments to delete one Job.
     * @example
     * // Delete one Job
     * const Job = await prisma.job.delete({
     *   where: {
     *     // ... filter to delete one Job
     *   }
     * })
     * 
     */
    delete<T extends JobDeleteArgs>(args: SelectSubset<T, JobDeleteArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Job.
     * @param {JobUpdateArgs} args - Arguments to update one Job.
     * @example
     * // Update one Job
     * const job = await prisma.job.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobUpdateArgs>(args: SelectSubset<T, JobUpdateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Jobs.
     * @param {JobDeleteManyArgs} args - Arguments to filter Jobs to delete.
     * @example
     * // Delete a few Jobs
     * const { count } = await prisma.job.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobDeleteManyArgs>(args?: SelectSubset<T, JobDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jobs
     * const job = await prisma.job.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobUpdateManyArgs>(args: SelectSubset<T, JobUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Job.
     * @param {JobUpsertArgs} args - Arguments to update or create a Job.
     * @example
     * // Update or create a Job
     * const job = await prisma.job.upsert({
     *   create: {
     *     // ... data to create a Job
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Job we want to update
     *   }
     * })
     */
    upsert<T extends JobUpsertArgs>(args: SelectSubset<T, JobUpsertArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCountArgs} args - Arguments to filter Jobs to count.
     * @example
     * // Count the number of Jobs
     * const count = await prisma.job.count({
     *   where: {
     *     // ... the filter for the Jobs we want to count
     *   }
     * })
    **/
    count<T extends JobCountArgs>(
      args?: Subset<T, JobCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobAggregateArgs>(args: Subset<T, JobAggregateArgs>): Prisma.PrismaPromise<GetJobAggregateType<T>>

    /**
     * Group by Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobGroupByArgs['orderBy'] }
        : { orderBy?: JobGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Job model
   */
  readonly fields: JobFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Job.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    room<T extends Job$roomArgs<ExtArgs> = {}>(args?: Subset<T, Job$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Job model
   */ 
  interface JobFieldRefs {
    readonly id: FieldRef<"Job", 'String'>
    readonly clientId: FieldRef<"Job", 'String'>
    readonly roomId: FieldRef<"Job", 'String'>
    readonly title: FieldRef<"Job", 'String'>
    readonly description: FieldRef<"Job", 'String'>
    readonly status: FieldRef<"Job", 'JobStatus'>
    readonly startDate: FieldRef<"Job", 'DateTime'>
    readonly endDate: FieldRef<"Job", 'DateTime'>
    readonly createdAt: FieldRef<"Job", 'DateTime'>
    readonly updatedAt: FieldRef<"Job", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Job findUnique
   */
  export type JobFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findUniqueOrThrow
   */
  export type JobFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findFirst
   */
  export type JobFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findFirstOrThrow
   */
  export type JobFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findMany
   */
  export type JobFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter, which Jobs to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job create
   */
  export type JobCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The data needed to create a Job.
     */
    data: XOR<JobCreateInput, JobUncheckedCreateInput>
  }

  /**
   * Job createMany
   */
  export type JobCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Job createManyAndReturn
   */
  export type JobCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Job update
   */
  export type JobUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The data needed to update a Job.
     */
    data: XOR<JobUpdateInput, JobUncheckedUpdateInput>
    /**
     * Choose, which Job to update.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job updateMany
   */
  export type JobUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Jobs.
     */
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyInput>
    /**
     * Filter which Jobs to update
     */
    where?: JobWhereInput
  }

  /**
   * Job upsert
   */
  export type JobUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * The filter to search for the Job to update in case it exists.
     */
    where: JobWhereUniqueInput
    /**
     * In case the Job found by the `where` argument doesn't exist, create a new Job with this data.
     */
    create: XOR<JobCreateInput, JobUncheckedCreateInput>
    /**
     * In case the Job was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobUpdateInput, JobUncheckedUpdateInput>
  }

  /**
   * Job delete
   */
  export type JobDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
    /**
     * Filter which Job to delete.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job deleteMany
   */
  export type JobDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Jobs to delete
     */
    where?: JobWhereInput
  }

  /**
   * Job.room
   */
  export type Job$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * Job without action
   */
  export type JobDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobInclude<ExtArgs> | null
  }


  /**
   * Model FormSubmission
   */

  export type AggregateFormSubmission = {
    _count: FormSubmissionCountAggregateOutputType | null
    _min: FormSubmissionMinAggregateOutputType | null
    _max: FormSubmissionMaxAggregateOutputType | null
  }

  export type FormSubmissionMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    formType: string | null
    submittedAt: Date | null
  }

  export type FormSubmissionMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    formType: string | null
    submittedAt: Date | null
  }

  export type FormSubmissionCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    formType: number
    data: number
    submittedAt: number
    _all: number
  }


  export type FormSubmissionMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    formType?: true
    submittedAt?: true
  }

  export type FormSubmissionMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    formType?: true
    submittedAt?: true
  }

  export type FormSubmissionCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    formType?: true
    data?: true
    submittedAt?: true
    _all?: true
  }

  export type FormSubmissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormSubmission to aggregate.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FormSubmissions
    **/
    _count?: true | FormSubmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormSubmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormSubmissionMaxAggregateInputType
  }

  export type GetFormSubmissionAggregateType<T extends FormSubmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateFormSubmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormSubmission[P]>
      : GetScalarType<T[P], AggregateFormSubmission[P]>
  }




  export type FormSubmissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormSubmissionWhereInput
    orderBy?: FormSubmissionOrderByWithAggregationInput | FormSubmissionOrderByWithAggregationInput[]
    by: FormSubmissionScalarFieldEnum[] | FormSubmissionScalarFieldEnum
    having?: FormSubmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormSubmissionCountAggregateInputType | true
    _min?: FormSubmissionMinAggregateInputType
    _max?: FormSubmissionMaxAggregateInputType
  }

  export type FormSubmissionGroupByOutputType = {
    id: string
    clientId: string
    roomId: string | null
    formType: string
    data: JsonValue
    submittedAt: Date
    _count: FormSubmissionCountAggregateOutputType | null
    _min: FormSubmissionMinAggregateOutputType | null
    _max: FormSubmissionMaxAggregateOutputType | null
  }

  type GetFormSubmissionGroupByPayload<T extends FormSubmissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormSubmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormSubmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormSubmissionGroupByOutputType[P]>
            : GetScalarType<T[P], FormSubmissionGroupByOutputType[P]>
        }
      >
    >


  export type FormSubmissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    formType?: boolean
    data?: boolean
    submittedAt?: boolean
    room?: boolean | FormSubmission$roomArgs<ExtArgs>
  }, ExtArgs["result"]["formSubmission"]>

  export type FormSubmissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    formType?: boolean
    data?: boolean
    submittedAt?: boolean
    room?: boolean | FormSubmission$roomArgs<ExtArgs>
  }, ExtArgs["result"]["formSubmission"]>

  export type FormSubmissionSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    formType?: boolean
    data?: boolean
    submittedAt?: boolean
  }

  export type FormSubmissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | FormSubmission$roomArgs<ExtArgs>
  }
  export type FormSubmissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    room?: boolean | FormSubmission$roomArgs<ExtArgs>
  }

  export type $FormSubmissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FormSubmission"
    objects: {
      room: Prisma.$RoomPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      roomId: string | null
      formType: string
      data: Prisma.JsonValue
      submittedAt: Date
    }, ExtArgs["result"]["formSubmission"]>
    composites: {}
  }

  type FormSubmissionGetPayload<S extends boolean | null | undefined | FormSubmissionDefaultArgs> = $Result.GetResult<Prisma.$FormSubmissionPayload, S>

  type FormSubmissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FormSubmissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FormSubmissionCountAggregateInputType | true
    }

  export interface FormSubmissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FormSubmission'], meta: { name: 'FormSubmission' } }
    /**
     * Find zero or one FormSubmission that matches the filter.
     * @param {FormSubmissionFindUniqueArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FormSubmissionFindUniqueArgs>(args: SelectSubset<T, FormSubmissionFindUniqueArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FormSubmission that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FormSubmissionFindUniqueOrThrowArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FormSubmissionFindUniqueOrThrowArgs>(args: SelectSubset<T, FormSubmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FormSubmission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindFirstArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FormSubmissionFindFirstArgs>(args?: SelectSubset<T, FormSubmissionFindFirstArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FormSubmission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindFirstOrThrowArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FormSubmissionFindFirstOrThrowArgs>(args?: SelectSubset<T, FormSubmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FormSubmissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FormSubmissions
     * const formSubmissions = await prisma.formSubmission.findMany()
     * 
     * // Get first 10 FormSubmissions
     * const formSubmissions = await prisma.formSubmission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formSubmissionWithIdOnly = await prisma.formSubmission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FormSubmissionFindManyArgs>(args?: SelectSubset<T, FormSubmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FormSubmission.
     * @param {FormSubmissionCreateArgs} args - Arguments to create a FormSubmission.
     * @example
     * // Create one FormSubmission
     * const FormSubmission = await prisma.formSubmission.create({
     *   data: {
     *     // ... data to create a FormSubmission
     *   }
     * })
     * 
     */
    create<T extends FormSubmissionCreateArgs>(args: SelectSubset<T, FormSubmissionCreateArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FormSubmissions.
     * @param {FormSubmissionCreateManyArgs} args - Arguments to create many FormSubmissions.
     * @example
     * // Create many FormSubmissions
     * const formSubmission = await prisma.formSubmission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FormSubmissionCreateManyArgs>(args?: SelectSubset<T, FormSubmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FormSubmissions and returns the data saved in the database.
     * @param {FormSubmissionCreateManyAndReturnArgs} args - Arguments to create many FormSubmissions.
     * @example
     * // Create many FormSubmissions
     * const formSubmission = await prisma.formSubmission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FormSubmissions and only return the `id`
     * const formSubmissionWithIdOnly = await prisma.formSubmission.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FormSubmissionCreateManyAndReturnArgs>(args?: SelectSubset<T, FormSubmissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FormSubmission.
     * @param {FormSubmissionDeleteArgs} args - Arguments to delete one FormSubmission.
     * @example
     * // Delete one FormSubmission
     * const FormSubmission = await prisma.formSubmission.delete({
     *   where: {
     *     // ... filter to delete one FormSubmission
     *   }
     * })
     * 
     */
    delete<T extends FormSubmissionDeleteArgs>(args: SelectSubset<T, FormSubmissionDeleteArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FormSubmission.
     * @param {FormSubmissionUpdateArgs} args - Arguments to update one FormSubmission.
     * @example
     * // Update one FormSubmission
     * const formSubmission = await prisma.formSubmission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FormSubmissionUpdateArgs>(args: SelectSubset<T, FormSubmissionUpdateArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FormSubmissions.
     * @param {FormSubmissionDeleteManyArgs} args - Arguments to filter FormSubmissions to delete.
     * @example
     * // Delete a few FormSubmissions
     * const { count } = await prisma.formSubmission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FormSubmissionDeleteManyArgs>(args?: SelectSubset<T, FormSubmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormSubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FormSubmissions
     * const formSubmission = await prisma.formSubmission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FormSubmissionUpdateManyArgs>(args: SelectSubset<T, FormSubmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FormSubmission.
     * @param {FormSubmissionUpsertArgs} args - Arguments to update or create a FormSubmission.
     * @example
     * // Update or create a FormSubmission
     * const formSubmission = await prisma.formSubmission.upsert({
     *   create: {
     *     // ... data to create a FormSubmission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FormSubmission we want to update
     *   }
     * })
     */
    upsert<T extends FormSubmissionUpsertArgs>(args: SelectSubset<T, FormSubmissionUpsertArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FormSubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionCountArgs} args - Arguments to filter FormSubmissions to count.
     * @example
     * // Count the number of FormSubmissions
     * const count = await prisma.formSubmission.count({
     *   where: {
     *     // ... the filter for the FormSubmissions we want to count
     *   }
     * })
    **/
    count<T extends FormSubmissionCountArgs>(
      args?: Subset<T, FormSubmissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormSubmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FormSubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormSubmissionAggregateArgs>(args: Subset<T, FormSubmissionAggregateArgs>): Prisma.PrismaPromise<GetFormSubmissionAggregateType<T>>

    /**
     * Group by FormSubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormSubmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormSubmissionGroupByArgs['orderBy'] }
        : { orderBy?: FormSubmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormSubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormSubmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FormSubmission model
   */
  readonly fields: FormSubmissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FormSubmission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormSubmissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    room<T extends FormSubmission$roomArgs<ExtArgs> = {}>(args?: Subset<T, FormSubmission$roomArgs<ExtArgs>>): Prisma__RoomClient<$Result.GetResult<Prisma.$RoomPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FormSubmission model
   */ 
  interface FormSubmissionFieldRefs {
    readonly id: FieldRef<"FormSubmission", 'String'>
    readonly clientId: FieldRef<"FormSubmission", 'String'>
    readonly roomId: FieldRef<"FormSubmission", 'String'>
    readonly formType: FieldRef<"FormSubmission", 'String'>
    readonly data: FieldRef<"FormSubmission", 'Json'>
    readonly submittedAt: FieldRef<"FormSubmission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FormSubmission findUnique
   */
  export type FormSubmissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission findUniqueOrThrow
   */
  export type FormSubmissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission findFirst
   */
  export type FormSubmissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormSubmissions.
     */
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission findFirstOrThrow
   */
  export type FormSubmissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormSubmissions.
     */
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission findMany
   */
  export type FormSubmissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter, which FormSubmissions to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission create
   */
  export type FormSubmissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * The data needed to create a FormSubmission.
     */
    data: XOR<FormSubmissionCreateInput, FormSubmissionUncheckedCreateInput>
  }

  /**
   * FormSubmission createMany
   */
  export type FormSubmissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FormSubmissions.
     */
    data: FormSubmissionCreateManyInput | FormSubmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FormSubmission createManyAndReturn
   */
  export type FormSubmissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FormSubmissions.
     */
    data: FormSubmissionCreateManyInput | FormSubmissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FormSubmission update
   */
  export type FormSubmissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * The data needed to update a FormSubmission.
     */
    data: XOR<FormSubmissionUpdateInput, FormSubmissionUncheckedUpdateInput>
    /**
     * Choose, which FormSubmission to update.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission updateMany
   */
  export type FormSubmissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FormSubmissions.
     */
    data: XOR<FormSubmissionUpdateManyMutationInput, FormSubmissionUncheckedUpdateManyInput>
    /**
     * Filter which FormSubmissions to update
     */
    where?: FormSubmissionWhereInput
  }

  /**
   * FormSubmission upsert
   */
  export type FormSubmissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * The filter to search for the FormSubmission to update in case it exists.
     */
    where: FormSubmissionWhereUniqueInput
    /**
     * In case the FormSubmission found by the `where` argument doesn't exist, create a new FormSubmission with this data.
     */
    create: XOR<FormSubmissionCreateInput, FormSubmissionUncheckedCreateInput>
    /**
     * In case the FormSubmission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormSubmissionUpdateInput, FormSubmissionUncheckedUpdateInput>
  }

  /**
   * FormSubmission delete
   */
  export type FormSubmissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
    /**
     * Filter which FormSubmission to delete.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission deleteMany
   */
  export type FormSubmissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormSubmissions to delete
     */
    where?: FormSubmissionWhereInput
  }

  /**
   * FormSubmission.room
   */
  export type FormSubmission$roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Room
     */
    select?: RoomSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoomInclude<ExtArgs> | null
    where?: RoomWhereInput
  }

  /**
   * FormSubmission without action
   */
  export type FormSubmissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormSubmissionInclude<ExtArgs> | null
  }


  /**
   * Model EventLog
   */

  export type AggregateEventLog = {
    _count: EventLogCountAggregateOutputType | null
    _min: EventLogMinAggregateOutputType | null
    _max: EventLogMaxAggregateOutputType | null
  }

  export type EventLogMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    actorId: string | null
    entity: string | null
    entityId: string | null
    action: string | null
    createdAt: Date | null
  }

  export type EventLogMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    roomId: string | null
    actorId: string | null
    entity: string | null
    entityId: string | null
    action: string | null
    createdAt: Date | null
  }

  export type EventLogCountAggregateOutputType = {
    id: number
    clientId: number
    roomId: number
    actorId: number
    entity: number
    entityId: number
    action: number
    before: number
    after: number
    createdAt: number
    _all: number
  }


  export type EventLogMinAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    actorId?: true
    entity?: true
    entityId?: true
    action?: true
    createdAt?: true
  }

  export type EventLogMaxAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    actorId?: true
    entity?: true
    entityId?: true
    action?: true
    createdAt?: true
  }

  export type EventLogCountAggregateInputType = {
    id?: true
    clientId?: true
    roomId?: true
    actorId?: true
    entity?: true
    entityId?: true
    action?: true
    before?: true
    after?: true
    createdAt?: true
    _all?: true
  }

  export type EventLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventLog to aggregate.
     */
    where?: EventLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventLogs to fetch.
     */
    orderBy?: EventLogOrderByWithRelationInput | EventLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventLogs
    **/
    _count?: true | EventLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventLogMaxAggregateInputType
  }

  export type GetEventLogAggregateType<T extends EventLogAggregateArgs> = {
        [P in keyof T & keyof AggregateEventLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventLog[P]>
      : GetScalarType<T[P], AggregateEventLog[P]>
  }




  export type EventLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventLogWhereInput
    orderBy?: EventLogOrderByWithAggregationInput | EventLogOrderByWithAggregationInput[]
    by: EventLogScalarFieldEnum[] | EventLogScalarFieldEnum
    having?: EventLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventLogCountAggregateInputType | true
    _min?: EventLogMinAggregateInputType
    _max?: EventLogMaxAggregateInputType
  }

  export type EventLogGroupByOutputType = {
    id: string
    clientId: string | null
    roomId: string | null
    actorId: string | null
    entity: string
    entityId: string
    action: string
    before: JsonValue | null
    after: JsonValue | null
    createdAt: Date
    _count: EventLogCountAggregateOutputType | null
    _min: EventLogMinAggregateOutputType | null
    _max: EventLogMaxAggregateOutputType | null
  }

  type GetEventLogGroupByPayload<T extends EventLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventLogGroupByOutputType[P]>
            : GetScalarType<T[P], EventLogGroupByOutputType[P]>
        }
      >
    >


  export type EventLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    actorId?: boolean
    entity?: boolean
    entityId?: boolean
    action?: boolean
    before?: boolean
    after?: boolean
    createdAt?: boolean
    client?: boolean | EventLog$clientArgs<ExtArgs>
  }, ExtArgs["result"]["eventLog"]>

  export type EventLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    actorId?: boolean
    entity?: boolean
    entityId?: boolean
    action?: boolean
    before?: boolean
    after?: boolean
    createdAt?: boolean
    client?: boolean | EventLog$clientArgs<ExtArgs>
  }, ExtArgs["result"]["eventLog"]>

  export type EventLogSelectScalar = {
    id?: boolean
    clientId?: boolean
    roomId?: boolean
    actorId?: boolean
    entity?: boolean
    entityId?: boolean
    action?: boolean
    before?: boolean
    after?: boolean
    createdAt?: boolean
  }

  export type EventLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | EventLog$clientArgs<ExtArgs>
  }
  export type EventLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | EventLog$clientArgs<ExtArgs>
  }

  export type $EventLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventLog"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string | null
      roomId: string | null
      actorId: string | null
      entity: string
      entityId: string
      action: string
      before: Prisma.JsonValue | null
      after: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["eventLog"]>
    composites: {}
  }

  type EventLogGetPayload<S extends boolean | null | undefined | EventLogDefaultArgs> = $Result.GetResult<Prisma.$EventLogPayload, S>

  type EventLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EventLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EventLogCountAggregateInputType | true
    }

  export interface EventLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventLog'], meta: { name: 'EventLog' } }
    /**
     * Find zero or one EventLog that matches the filter.
     * @param {EventLogFindUniqueArgs} args - Arguments to find a EventLog
     * @example
     * // Get one EventLog
     * const eventLog = await prisma.eventLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventLogFindUniqueArgs>(args: SelectSubset<T, EventLogFindUniqueArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EventLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EventLogFindUniqueOrThrowArgs} args - Arguments to find a EventLog
     * @example
     * // Get one EventLog
     * const eventLog = await prisma.eventLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventLogFindUniqueOrThrowArgs>(args: SelectSubset<T, EventLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EventLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogFindFirstArgs} args - Arguments to find a EventLog
     * @example
     * // Get one EventLog
     * const eventLog = await prisma.eventLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventLogFindFirstArgs>(args?: SelectSubset<T, EventLogFindFirstArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EventLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogFindFirstOrThrowArgs} args - Arguments to find a EventLog
     * @example
     * // Get one EventLog
     * const eventLog = await prisma.eventLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventLogFindFirstOrThrowArgs>(args?: SelectSubset<T, EventLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EventLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventLogs
     * const eventLogs = await prisma.eventLog.findMany()
     * 
     * // Get first 10 EventLogs
     * const eventLogs = await prisma.eventLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventLogWithIdOnly = await prisma.eventLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventLogFindManyArgs>(args?: SelectSubset<T, EventLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EventLog.
     * @param {EventLogCreateArgs} args - Arguments to create a EventLog.
     * @example
     * // Create one EventLog
     * const EventLog = await prisma.eventLog.create({
     *   data: {
     *     // ... data to create a EventLog
     *   }
     * })
     * 
     */
    create<T extends EventLogCreateArgs>(args: SelectSubset<T, EventLogCreateArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EventLogs.
     * @param {EventLogCreateManyArgs} args - Arguments to create many EventLogs.
     * @example
     * // Create many EventLogs
     * const eventLog = await prisma.eventLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventLogCreateManyArgs>(args?: SelectSubset<T, EventLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EventLogs and returns the data saved in the database.
     * @param {EventLogCreateManyAndReturnArgs} args - Arguments to create many EventLogs.
     * @example
     * // Create many EventLogs
     * const eventLog = await prisma.eventLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EventLogs and only return the `id`
     * const eventLogWithIdOnly = await prisma.eventLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventLogCreateManyAndReturnArgs>(args?: SelectSubset<T, EventLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EventLog.
     * @param {EventLogDeleteArgs} args - Arguments to delete one EventLog.
     * @example
     * // Delete one EventLog
     * const EventLog = await prisma.eventLog.delete({
     *   where: {
     *     // ... filter to delete one EventLog
     *   }
     * })
     * 
     */
    delete<T extends EventLogDeleteArgs>(args: SelectSubset<T, EventLogDeleteArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EventLog.
     * @param {EventLogUpdateArgs} args - Arguments to update one EventLog.
     * @example
     * // Update one EventLog
     * const eventLog = await prisma.eventLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventLogUpdateArgs>(args: SelectSubset<T, EventLogUpdateArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EventLogs.
     * @param {EventLogDeleteManyArgs} args - Arguments to filter EventLogs to delete.
     * @example
     * // Delete a few EventLogs
     * const { count } = await prisma.eventLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventLogDeleteManyArgs>(args?: SelectSubset<T, EventLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventLogs
     * const eventLog = await prisma.eventLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventLogUpdateManyArgs>(args: SelectSubset<T, EventLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EventLog.
     * @param {EventLogUpsertArgs} args - Arguments to update or create a EventLog.
     * @example
     * // Update or create a EventLog
     * const eventLog = await prisma.eventLog.upsert({
     *   create: {
     *     // ... data to create a EventLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventLog we want to update
     *   }
     * })
     */
    upsert<T extends EventLogUpsertArgs>(args: SelectSubset<T, EventLogUpsertArgs<ExtArgs>>): Prisma__EventLogClient<$Result.GetResult<Prisma.$EventLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EventLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogCountArgs} args - Arguments to filter EventLogs to count.
     * @example
     * // Count the number of EventLogs
     * const count = await prisma.eventLog.count({
     *   where: {
     *     // ... the filter for the EventLogs we want to count
     *   }
     * })
    **/
    count<T extends EventLogCountArgs>(
      args?: Subset<T, EventLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventLogAggregateArgs>(args: Subset<T, EventLogAggregateArgs>): Prisma.PrismaPromise<GetEventLogAggregateType<T>>

    /**
     * Group by EventLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventLogGroupByArgs['orderBy'] }
        : { orderBy?: EventLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventLog model
   */
  readonly fields: EventLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends EventLog$clientArgs<ExtArgs> = {}>(args?: Subset<T, EventLog$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventLog model
   */ 
  interface EventLogFieldRefs {
    readonly id: FieldRef<"EventLog", 'String'>
    readonly clientId: FieldRef<"EventLog", 'String'>
    readonly roomId: FieldRef<"EventLog", 'String'>
    readonly actorId: FieldRef<"EventLog", 'String'>
    readonly entity: FieldRef<"EventLog", 'String'>
    readonly entityId: FieldRef<"EventLog", 'String'>
    readonly action: FieldRef<"EventLog", 'String'>
    readonly before: FieldRef<"EventLog", 'Json'>
    readonly after: FieldRef<"EventLog", 'Json'>
    readonly createdAt: FieldRef<"EventLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventLog findUnique
   */
  export type EventLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter, which EventLog to fetch.
     */
    where: EventLogWhereUniqueInput
  }

  /**
   * EventLog findUniqueOrThrow
   */
  export type EventLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter, which EventLog to fetch.
     */
    where: EventLogWhereUniqueInput
  }

  /**
   * EventLog findFirst
   */
  export type EventLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter, which EventLog to fetch.
     */
    where?: EventLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventLogs to fetch.
     */
    orderBy?: EventLogOrderByWithRelationInput | EventLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventLogs.
     */
    cursor?: EventLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventLogs.
     */
    distinct?: EventLogScalarFieldEnum | EventLogScalarFieldEnum[]
  }

  /**
   * EventLog findFirstOrThrow
   */
  export type EventLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter, which EventLog to fetch.
     */
    where?: EventLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventLogs to fetch.
     */
    orderBy?: EventLogOrderByWithRelationInput | EventLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventLogs.
     */
    cursor?: EventLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventLogs.
     */
    distinct?: EventLogScalarFieldEnum | EventLogScalarFieldEnum[]
  }

  /**
   * EventLog findMany
   */
  export type EventLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter, which EventLogs to fetch.
     */
    where?: EventLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventLogs to fetch.
     */
    orderBy?: EventLogOrderByWithRelationInput | EventLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventLogs.
     */
    cursor?: EventLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventLogs.
     */
    skip?: number
    distinct?: EventLogScalarFieldEnum | EventLogScalarFieldEnum[]
  }

  /**
   * EventLog create
   */
  export type EventLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * The data needed to create a EventLog.
     */
    data: XOR<EventLogCreateInput, EventLogUncheckedCreateInput>
  }

  /**
   * EventLog createMany
   */
  export type EventLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventLogs.
     */
    data: EventLogCreateManyInput | EventLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventLog createManyAndReturn
   */
  export type EventLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EventLogs.
     */
    data: EventLogCreateManyInput | EventLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventLog update
   */
  export type EventLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * The data needed to update a EventLog.
     */
    data: XOR<EventLogUpdateInput, EventLogUncheckedUpdateInput>
    /**
     * Choose, which EventLog to update.
     */
    where: EventLogWhereUniqueInput
  }

  /**
   * EventLog updateMany
   */
  export type EventLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventLogs.
     */
    data: XOR<EventLogUpdateManyMutationInput, EventLogUncheckedUpdateManyInput>
    /**
     * Filter which EventLogs to update
     */
    where?: EventLogWhereInput
  }

  /**
   * EventLog upsert
   */
  export type EventLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * The filter to search for the EventLog to update in case it exists.
     */
    where: EventLogWhereUniqueInput
    /**
     * In case the EventLog found by the `where` argument doesn't exist, create a new EventLog with this data.
     */
    create: XOR<EventLogCreateInput, EventLogUncheckedCreateInput>
    /**
     * In case the EventLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventLogUpdateInput, EventLogUncheckedUpdateInput>
  }

  /**
   * EventLog delete
   */
  export type EventLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
    /**
     * Filter which EventLog to delete.
     */
    where: EventLogWhereUniqueInput
  }

  /**
   * EventLog deleteMany
   */
  export type EventLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventLogs to delete
     */
    where?: EventLogWhereInput
  }

  /**
   * EventLog.client
   */
  export type EventLog$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * EventLog without action
   */
  export type EventLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventLog
     */
    select?: EventLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventLogInclude<ExtArgs> | null
  }


  /**
   * Model Lead
   */

  export type AggregateLead = {
    _count: LeadCountAggregateOutputType | null
    _avg: LeadAvgAggregateOutputType | null
    _sum: LeadSumAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  export type LeadAvgAggregateOutputType = {
    estimatedValue: Decimal | null
    probability: number | null
    responseTime: number | null
  }

  export type LeadSumAggregateOutputType = {
    estimatedValue: Decimal | null
    probability: number | null
    responseTime: number | null
  }

  export type LeadMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    status: $Enums.LeadStatus | null
    priority: $Enums.Priority | null
    estimatedValue: Decimal | null
    probability: number | null
    expectedCloseDate: Date | null
    source: string | null
    campaign: string | null
    medium: string | null
    firstResponseAt: Date | null
    responseTime: number | null
    clientId: string | null
    ownerId: string | null
    dealId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type LeadMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    status: $Enums.LeadStatus | null
    priority: $Enums.Priority | null
    estimatedValue: Decimal | null
    probability: number | null
    expectedCloseDate: Date | null
    source: string | null
    campaign: string | null
    medium: string | null
    firstResponseAt: Date | null
    responseTime: number | null
    clientId: string | null
    ownerId: string | null
    dealId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
  }

  export type LeadCountAggregateOutputType = {
    id: number
    title: number
    description: number
    status: number
    priority: number
    estimatedValue: number
    probability: number
    expectedCloseDate: number
    source: number
    campaign: number
    medium: number
    firstResponseAt: number
    responseTime: number
    clientId: number
    ownerId: number
    dealId: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type LeadAvgAggregateInputType = {
    estimatedValue?: true
    probability?: true
    responseTime?: true
  }

  export type LeadSumAggregateInputType = {
    estimatedValue?: true
    probability?: true
    responseTime?: true
  }

  export type LeadMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    estimatedValue?: true
    probability?: true
    expectedCloseDate?: true
    source?: true
    campaign?: true
    medium?: true
    firstResponseAt?: true
    responseTime?: true
    clientId?: true
    ownerId?: true
    dealId?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type LeadMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    estimatedValue?: true
    probability?: true
    expectedCloseDate?: true
    source?: true
    campaign?: true
    medium?: true
    firstResponseAt?: true
    responseTime?: true
    clientId?: true
    ownerId?: true
    dealId?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
  }

  export type LeadCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    estimatedValue?: true
    probability?: true
    expectedCloseDate?: true
    source?: true
    campaign?: true
    medium?: true
    firstResponseAt?: true
    responseTime?: true
    clientId?: true
    ownerId?: true
    dealId?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type LeadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lead to aggregate.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Leads
    **/
    _count?: true | LeadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadMaxAggregateInputType
  }

  export type GetLeadAggregateType<T extends LeadAggregateArgs> = {
        [P in keyof T & keyof AggregateLead]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLead[P]>
      : GetScalarType<T[P], AggregateLead[P]>
  }




  export type LeadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithAggregationInput | LeadOrderByWithAggregationInput[]
    by: LeadScalarFieldEnum[] | LeadScalarFieldEnum
    having?: LeadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadCountAggregateInputType | true
    _avg?: LeadAvgAggregateInputType
    _sum?: LeadSumAggregateInputType
    _min?: LeadMinAggregateInputType
    _max?: LeadMaxAggregateInputType
  }

  export type LeadGroupByOutputType = {
    id: string
    title: string
    description: string | null
    status: $Enums.LeadStatus
    priority: $Enums.Priority
    estimatedValue: Decimal | null
    probability: number
    expectedCloseDate: Date | null
    source: string | null
    campaign: string | null
    medium: string | null
    firstResponseAt: Date | null
    responseTime: number | null
    clientId: string
    ownerId: string
    dealId: string | null
    createdAt: Date
    updatedAt: Date
    createdById: string | null
    updatedById: string | null
    _count: LeadCountAggregateOutputType | null
    _avg: LeadAvgAggregateOutputType | null
    _sum: LeadSumAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  type GetLeadGroupByPayload<T extends LeadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadGroupByOutputType[P]>
            : GetScalarType<T[P], LeadGroupByOutputType[P]>
        }
      >
    >


  export type LeadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    estimatedValue?: boolean
    probability?: boolean
    expectedCloseDate?: boolean
    source?: boolean
    campaign?: boolean
    medium?: boolean
    firstResponseAt?: boolean
    responseTime?: boolean
    clientId?: boolean
    ownerId?: boolean
    dealId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    deal?: boolean | Lead$dealArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    estimatedValue?: boolean
    probability?: boolean
    expectedCloseDate?: boolean
    source?: boolean
    campaign?: boolean
    medium?: boolean
    firstResponseAt?: boolean
    responseTime?: boolean
    clientId?: boolean
    ownerId?: boolean
    dealId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    deal?: boolean | Lead$dealArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    estimatedValue?: boolean
    probability?: boolean
    expectedCloseDate?: boolean
    source?: boolean
    campaign?: boolean
    medium?: boolean
    firstResponseAt?: boolean
    responseTime?: boolean
    clientId?: boolean
    ownerId?: boolean
    dealId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type LeadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    deal?: boolean | Lead$dealArgs<ExtArgs>
  }
  export type LeadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    owner?: boolean | UserDefaultArgs<ExtArgs>
    deal?: boolean | Lead$dealArgs<ExtArgs>
  }

  export type $LeadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Lead"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      owner: Prisma.$UserPayload<ExtArgs>
      deal: Prisma.$DealPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string | null
      status: $Enums.LeadStatus
      priority: $Enums.Priority
      estimatedValue: Prisma.Decimal | null
      probability: number
      expectedCloseDate: Date | null
      source: string | null
      campaign: string | null
      medium: string | null
      firstResponseAt: Date | null
      responseTime: number | null
      clientId: string
      ownerId: string
      dealId: string | null
      createdAt: Date
      updatedAt: Date
      createdById: string | null
      updatedById: string | null
    }, ExtArgs["result"]["lead"]>
    composites: {}
  }

  type LeadGetPayload<S extends boolean | null | undefined | LeadDefaultArgs> = $Result.GetResult<Prisma.$LeadPayload, S>

  type LeadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LeadFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LeadCountAggregateInputType | true
    }

  export interface LeadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lead'], meta: { name: 'Lead' } }
    /**
     * Find zero or one Lead that matches the filter.
     * @param {LeadFindUniqueArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeadFindUniqueArgs>(args: SelectSubset<T, LeadFindUniqueArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Lead that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LeadFindUniqueOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeadFindUniqueOrThrowArgs>(args: SelectSubset<T, LeadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Lead that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeadFindFirstArgs>(args?: SelectSubset<T, LeadFindFirstArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Lead that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeadFindFirstOrThrowArgs>(args?: SelectSubset<T, LeadFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.lead.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.lead.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadWithIdOnly = await prisma.lead.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeadFindManyArgs>(args?: SelectSubset<T, LeadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Lead.
     * @param {LeadCreateArgs} args - Arguments to create a Lead.
     * @example
     * // Create one Lead
     * const Lead = await prisma.lead.create({
     *   data: {
     *     // ... data to create a Lead
     *   }
     * })
     * 
     */
    create<T extends LeadCreateArgs>(args: SelectSubset<T, LeadCreateArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Leads.
     * @param {LeadCreateManyArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const lead = await prisma.lead.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeadCreateManyArgs>(args?: SelectSubset<T, LeadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leads and returns the data saved in the database.
     * @param {LeadCreateManyAndReturnArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const lead = await prisma.lead.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leads and only return the `id`
     * const leadWithIdOnly = await prisma.lead.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeadCreateManyAndReturnArgs>(args?: SelectSubset<T, LeadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Lead.
     * @param {LeadDeleteArgs} args - Arguments to delete one Lead.
     * @example
     * // Delete one Lead
     * const Lead = await prisma.lead.delete({
     *   where: {
     *     // ... filter to delete one Lead
     *   }
     * })
     * 
     */
    delete<T extends LeadDeleteArgs>(args: SelectSubset<T, LeadDeleteArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Lead.
     * @param {LeadUpdateArgs} args - Arguments to update one Lead.
     * @example
     * // Update one Lead
     * const lead = await prisma.lead.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeadUpdateArgs>(args: SelectSubset<T, LeadUpdateArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Leads.
     * @param {LeadDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.lead.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeadDeleteManyArgs>(args?: SelectSubset<T, LeadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const lead = await prisma.lead.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeadUpdateManyArgs>(args: SelectSubset<T, LeadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lead.
     * @param {LeadUpsertArgs} args - Arguments to update or create a Lead.
     * @example
     * // Update or create a Lead
     * const lead = await prisma.lead.upsert({
     *   create: {
     *     // ... data to create a Lead
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lead we want to update
     *   }
     * })
     */
    upsert<T extends LeadUpsertArgs>(args: SelectSubset<T, LeadUpsertArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.lead.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends LeadCountArgs>(
      args?: Subset<T, LeadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadAggregateArgs>(args: Subset<T, LeadAggregateArgs>): Prisma.PrismaPromise<GetLeadAggregateType<T>>

    /**
     * Group by Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadGroupByArgs['orderBy'] }
        : { orderBy?: LeadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Lead model
   */
  readonly fields: LeadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Lead.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    deal<T extends Lead$dealArgs<ExtArgs> = {}>(args?: Subset<T, Lead$dealArgs<ExtArgs>>): Prisma__DealClient<$Result.GetResult<Prisma.$DealPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Lead model
   */ 
  interface LeadFieldRefs {
    readonly id: FieldRef<"Lead", 'String'>
    readonly title: FieldRef<"Lead", 'String'>
    readonly description: FieldRef<"Lead", 'String'>
    readonly status: FieldRef<"Lead", 'LeadStatus'>
    readonly priority: FieldRef<"Lead", 'Priority'>
    readonly estimatedValue: FieldRef<"Lead", 'Decimal'>
    readonly probability: FieldRef<"Lead", 'Int'>
    readonly expectedCloseDate: FieldRef<"Lead", 'DateTime'>
    readonly source: FieldRef<"Lead", 'String'>
    readonly campaign: FieldRef<"Lead", 'String'>
    readonly medium: FieldRef<"Lead", 'String'>
    readonly firstResponseAt: FieldRef<"Lead", 'DateTime'>
    readonly responseTime: FieldRef<"Lead", 'Int'>
    readonly clientId: FieldRef<"Lead", 'String'>
    readonly ownerId: FieldRef<"Lead", 'String'>
    readonly dealId: FieldRef<"Lead", 'String'>
    readonly createdAt: FieldRef<"Lead", 'DateTime'>
    readonly updatedAt: FieldRef<"Lead", 'DateTime'>
    readonly createdById: FieldRef<"Lead", 'String'>
    readonly updatedById: FieldRef<"Lead", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Lead findUnique
   */
  export type LeadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead findUniqueOrThrow
   */
  export type LeadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead findFirst
   */
  export type LeadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead findFirstOrThrow
   */
  export type LeadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead findMany
   */
  export type LeadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }

  /**
   * Lead create
   */
  export type LeadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to create a Lead.
     */
    data: XOR<LeadCreateInput, LeadUncheckedCreateInput>
  }

  /**
   * Lead createMany
   */
  export type LeadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Leads.
     */
    data: LeadCreateManyInput | LeadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Lead createManyAndReturn
   */
  export type LeadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Leads.
     */
    data: LeadCreateManyInput | LeadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Lead update
   */
  export type LeadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to update a Lead.
     */
    data: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
    /**
     * Choose, which Lead to update.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead updateMany
   */
  export type LeadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadWhereInput
  }

  /**
   * Lead upsert
   */
  export type LeadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The filter to search for the Lead to update in case it exists.
     */
    where: LeadWhereUniqueInput
    /**
     * In case the Lead found by the `where` argument doesn't exist, create a new Lead with this data.
     */
    create: XOR<LeadCreateInput, LeadUncheckedCreateInput>
    /**
     * In case the Lead was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
  }

  /**
   * Lead delete
   */
  export type LeadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter which Lead to delete.
     */
    where: LeadWhereUniqueInput
  }

  /**
   * Lead deleteMany
   */
  export type LeadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leads to delete
     */
    where?: LeadWhereInput
  }

  /**
   * Lead.deal
   */
  export type Lead$dealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deal
     */
    select?: DealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DealInclude<ExtArgs> | null
    where?: DealWhereInput
  }

  /**
   * Lead without action
   */
  export type LeadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LeadInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    passwordHash: 'passwordHash',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    role: 'role',
    isActive: 'isActive',
    lastLoginAt: 'lastLoginAt',
    emailVerifiedAt: 'emailVerifiedAt',
    twoFactorSecret: 'twoFactorSecret',
    twoFactorEnabled: 'twoFactorEnabled',
    avatarUrl: 'avatarUrl',
    timezone: 'timezone',
    preferences: 'preferences',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    orgId: 'orgId',
    name: 'name',
    legalName: 'legalName',
    emails: 'emails',
    phones: 'phones',
    billingAddress: 'billingAddress',
    siteAddresses: 'siteAddresses',
    ownerId: 'ownerId',
    tags: 'tags',
    status: 'status',
    portalToken: 'portalToken',
    designFeePaid: 'designFeePaid',
    consentMarketing: 'consentMarketing',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    name: 'name',
    role: 'role',
    email: 'email',
    phone: 'phone',
    isPrimary: 'isPrimary',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const RoomScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    type: 'type',
    nickname: 'nickname',
    pipelineStageId: 'pipelineStageId',
    ownerId: 'ownerId',
    budgetLow: 'budgetLow',
    budgetHigh: 'budgetHigh',
    siteAddress: 'siteAddress',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type RoomScalarFieldEnum = (typeof RoomScalarFieldEnum)[keyof typeof RoomScalarFieldEnum]


  export const DealScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    stageId: 'stageId',
    ownerId: 'ownerId',
    amountGrossIncVat: 'amountGrossIncVat',
    vatRate: 'vatRate',
    probability: 'probability',
    source: 'source',
    utm: 'utm',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DealScalarFieldEnum = (typeof DealScalarFieldEnum)[keyof typeof DealScalarFieldEnum]


  export const PipelineStageScalarFieldEnum: {
    id: 'id',
    name: 'name',
    order: 'order',
    slaHours: 'slaHours'
  };

  export type PipelineStageScalarFieldEnum = (typeof PipelineStageScalarFieldEnum)[keyof typeof PipelineStageScalarFieldEnum]


  export const ActivityScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    userId: 'userId',
    type: 'type',
    threadKey: 'threadKey',
    summary: 'summary',
    body: 'body',
    attachments: 'attachments',
    durations: 'durations',
    metadata: 'metadata',
    occurredAt: 'occurredAt',
    createdAt: 'createdAt'
  };

  export type ActivityScalarFieldEnum = (typeof ActivityScalarFieldEnum)[keyof typeof ActivityScalarFieldEnum]


  export const TaskScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    assigneeId: 'assigneeId',
    title: 'title',
    dueAt: 'dueAt',
    priority: 'priority',
    status: 'status',
    autoGenerated: 'autoGenerated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


  export const AppointmentScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    type: 'type',
    start: 'start',
    end: 'end',
    location: 'location',
    participants: 'participants',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type AppointmentScalarFieldEnum = (typeof AppointmentScalarFieldEnum)[keyof typeof AppointmentScalarFieldEnum]


  export const DocumentScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    category: 'category',
    url: 'url',
    thumbUrl: 'thumbUrl',
    size: 'size',
    labels: 'labels',
    capturedAt: 'capturedAt',
    capturedBy: 'capturedBy',
    clientVisible: 'clientVisible',
    clientWatermark: 'clientWatermark',
    createdAt: 'createdAt'
  };

  export type DocumentScalarFieldEnum = (typeof DocumentScalarFieldEnum)[keyof typeof DocumentScalarFieldEnum]


  export const DesignVersionScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    version: 'version',
    notes: 'notes',
    assets: 'assets',
    finalApproved: 'finalApproved',
    createdAt: 'createdAt'
  };

  export type DesignVersionScalarFieldEnum = (typeof DesignVersionScalarFieldEnum)[keyof typeof DesignVersionScalarFieldEnum]


  export const ParsedSpecItemScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    specVersion: 'specVersion',
    lineNo: 'lineNo',
    brand: 'brand',
    description: 'description',
    finish: 'finish',
    qty: 'qty',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    status: 'status',
    note: 'note',
    isCritical: 'isCritical',
    createdAt: 'createdAt'
  };

  export type ParsedSpecItemScalarFieldEnum = (typeof ParsedSpecItemScalarFieldEnum)[keyof typeof ParsedSpecItemScalarFieldEnum]


  export const SnagScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    title: 'title',
    description: 'description',
    status: 'status',
    assigneeId: 'assigneeId',
    dueAt: 'dueAt',
    clientVisible: 'clientVisible',
    photos: 'photos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SnagScalarFieldEnum = (typeof SnagScalarFieldEnum)[keyof typeof SnagScalarFieldEnum]


  export const JobScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    title: 'title',
    description: 'description',
    status: 'status',
    startDate: 'startDate',
    endDate: 'endDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type JobScalarFieldEnum = (typeof JobScalarFieldEnum)[keyof typeof JobScalarFieldEnum]


  export const FormSubmissionScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    formType: 'formType',
    data: 'data',
    submittedAt: 'submittedAt'
  };

  export type FormSubmissionScalarFieldEnum = (typeof FormSubmissionScalarFieldEnum)[keyof typeof FormSubmissionScalarFieldEnum]


  export const EventLogScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    roomId: 'roomId',
    actorId: 'actorId',
    entity: 'entity',
    entityId: 'entityId',
    action: 'action',
    before: 'before',
    after: 'after',
    createdAt: 'createdAt'
  };

  export type EventLogScalarFieldEnum = (typeof EventLogScalarFieldEnum)[keyof typeof EventLogScalarFieldEnum]


  export const LeadScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    status: 'status',
    priority: 'priority',
    estimatedValue: 'estimatedValue',
    probability: 'probability',
    expectedCloseDate: 'expectedCloseDate',
    source: 'source',
    campaign: 'campaign',
    medium: 'medium',
    firstResponseAt: 'firstResponseAt',
    responseTime: 'responseTime',
    clientId: 'clientId',
    ownerId: 'ownerId',
    dealId: 'dealId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type LeadScalarFieldEnum = (typeof LeadScalarFieldEnum)[keyof typeof LeadScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'ClientStatus'
   */
  export type EnumClientStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ClientStatus'>
    


  /**
   * Reference to a field of type 'ClientStatus[]'
   */
  export type ListEnumClientStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ClientStatus[]'>
    


  /**
   * Reference to a field of type 'RoomType'
   */
  export type EnumRoomTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoomType'>
    


  /**
   * Reference to a field of type 'RoomType[]'
   */
  export type ListEnumRoomTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoomType[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'RoomStatus'
   */
  export type EnumRoomStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoomStatus'>
    


  /**
   * Reference to a field of type 'RoomStatus[]'
   */
  export type ListEnumRoomStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoomStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'ActivityType'
   */
  export type EnumActivityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ActivityType'>
    


  /**
   * Reference to a field of type 'ActivityType[]'
   */
  export type ListEnumActivityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ActivityType[]'>
    


  /**
   * Reference to a field of type 'TaskStatus'
   */
  export type EnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus'>
    


  /**
   * Reference to a field of type 'TaskStatus[]'
   */
  export type ListEnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus[]'>
    


  /**
   * Reference to a field of type 'AppointmentType'
   */
  export type EnumAppointmentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppointmentType'>
    


  /**
   * Reference to a field of type 'AppointmentType[]'
   */
  export type ListEnumAppointmentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppointmentType[]'>
    


  /**
   * Reference to a field of type 'DocCategory'
   */
  export type EnumDocCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocCategory'>
    


  /**
   * Reference to a field of type 'DocCategory[]'
   */
  export type ListEnumDocCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocCategory[]'>
    


  /**
   * Reference to a field of type 'SpecStatus'
   */
  export type EnumSpecStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SpecStatus'>
    


  /**
   * Reference to a field of type 'SpecStatus[]'
   */
  export type ListEnumSpecStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SpecStatus[]'>
    


  /**
   * Reference to a field of type 'SnagStatus'
   */
  export type EnumSnagStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SnagStatus'>
    


  /**
   * Reference to a field of type 'SnagStatus[]'
   */
  export type ListEnumSnagStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SnagStatus[]'>
    


  /**
   * Reference to a field of type 'JobStatus'
   */
  export type EnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus'>
    


  /**
   * Reference to a field of type 'JobStatus[]'
   */
  export type ListEnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus[]'>
    


  /**
   * Reference to a field of type 'LeadStatus'
   */
  export type EnumLeadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LeadStatus'>
    


  /**
   * Reference to a field of type 'LeadStatus[]'
   */
  export type ListEnumLeadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LeadStatus[]'>
    


  /**
   * Reference to a field of type 'Priority'
   */
  export type EnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority'>
    


  /**
   * Reference to a field of type 'Priority[]'
   */
  export type ListEnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorSecret?: StringNullableFilter<"User"> | string | null
    twoFactorEnabled?: BoolFilter<"User"> | boolean
    avatarUrl?: StringNullableFilter<"User"> | string | null
    timezone?: StringFilter<"User"> | string
    preferences?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdById?: StringNullableFilter<"User"> | string | null
    updatedById?: StringNullableFilter<"User"> | string | null
    createdBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    createdUsers?: UserListRelationFilter
    updatedUsers?: UserListRelationFilter
    ownedClients?: ClientListRelationFilter
    ownedRooms?: RoomListRelationFilter
    ownedDeals?: DealListRelationFilter
    assignedTasks?: TaskListRelationFilter
    activities?: ActivityListRelationFilter
    ownedLeads?: LeadListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    twoFactorEnabled?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    timezone?: SortOrder
    preferences?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    createdUsers?: UserOrderByRelationAggregateInput
    updatedUsers?: UserOrderByRelationAggregateInput
    ownedClients?: ClientOrderByRelationAggregateInput
    ownedRooms?: RoomOrderByRelationAggregateInput
    ownedDeals?: DealOrderByRelationAggregateInput
    assignedTasks?: TaskOrderByRelationAggregateInput
    activities?: ActivityOrderByRelationAggregateInput
    ownedLeads?: LeadOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    passwordHash?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorSecret?: StringNullableFilter<"User"> | string | null
    twoFactorEnabled?: BoolFilter<"User"> | boolean
    avatarUrl?: StringNullableFilter<"User"> | string | null
    timezone?: StringFilter<"User"> | string
    preferences?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdById?: StringNullableFilter<"User"> | string | null
    updatedById?: StringNullableFilter<"User"> | string | null
    createdBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    createdUsers?: UserListRelationFilter
    updatedUsers?: UserListRelationFilter
    ownedClients?: ClientListRelationFilter
    ownedRooms?: RoomListRelationFilter
    ownedDeals?: DealListRelationFilter
    assignedTasks?: TaskListRelationFilter
    activities?: ActivityListRelationFilter
    ownedLeads?: LeadListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    twoFactorEnabled?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    timezone?: SortOrder
    preferences?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    emailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    twoFactorSecret?: StringNullableWithAggregatesFilter<"User"> | string | null
    twoFactorEnabled?: BoolWithAggregatesFilter<"User"> | boolean
    avatarUrl?: StringNullableWithAggregatesFilter<"User"> | string | null
    timezone?: StringWithAggregatesFilter<"User"> | string
    preferences?: JsonWithAggregatesFilter<"User">
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    createdById?: StringNullableWithAggregatesFilter<"User"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: StringFilter<"Client"> | string
    orgId?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    legalName?: StringNullableFilter<"Client"> | string | null
    emails?: StringNullableListFilter<"Client">
    phones?: StringNullableListFilter<"Client">
    billingAddress?: JsonNullableFilter<"Client">
    siteAddresses?: JsonNullableFilter<"Client">
    ownerId?: StringFilter<"Client"> | string
    tags?: StringNullableListFilter<"Client">
    status?: EnumClientStatusFilter<"Client"> | $Enums.ClientStatus
    portalToken?: StringFilter<"Client"> | string
    designFeePaid?: BoolFilter<"Client"> | boolean
    consentMarketing?: BoolFilter<"Client"> | boolean
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
    owner?: XOR<UserRelationFilter, UserWhereInput>
    contacts?: ContactListRelationFilter
    rooms?: RoomListRelationFilter
    deals?: DealListRelationFilter
    activities?: ActivityListRelationFilter
    tasks?: TaskListRelationFilter
    appointments?: AppointmentListRelationFilter
    documents?: DocumentListRelationFilter
    snags?: SnagListRelationFilter
    jobs?: JobListRelationFilter
    events?: EventLogListRelationFilter
    leads?: LeadListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    orgId?: SortOrderInput | SortOrder
    name?: SortOrder
    legalName?: SortOrderInput | SortOrder
    emails?: SortOrder
    phones?: SortOrder
    billingAddress?: SortOrderInput | SortOrder
    siteAddresses?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    portalToken?: SortOrder
    designFeePaid?: SortOrder
    consentMarketing?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    owner?: UserOrderByWithRelationInput
    contacts?: ContactOrderByRelationAggregateInput
    rooms?: RoomOrderByRelationAggregateInput
    deals?: DealOrderByRelationAggregateInput
    activities?: ActivityOrderByRelationAggregateInput
    tasks?: TaskOrderByRelationAggregateInput
    appointments?: AppointmentOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    snags?: SnagOrderByRelationAggregateInput
    jobs?: JobOrderByRelationAggregateInput
    events?: EventLogOrderByRelationAggregateInput
    leads?: LeadOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    portalToken?: string
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    orgId?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    legalName?: StringNullableFilter<"Client"> | string | null
    emails?: StringNullableListFilter<"Client">
    phones?: StringNullableListFilter<"Client">
    billingAddress?: JsonNullableFilter<"Client">
    siteAddresses?: JsonNullableFilter<"Client">
    ownerId?: StringFilter<"Client"> | string
    tags?: StringNullableListFilter<"Client">
    status?: EnumClientStatusFilter<"Client"> | $Enums.ClientStatus
    designFeePaid?: BoolFilter<"Client"> | boolean
    consentMarketing?: BoolFilter<"Client"> | boolean
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
    owner?: XOR<UserRelationFilter, UserWhereInput>
    contacts?: ContactListRelationFilter
    rooms?: RoomListRelationFilter
    deals?: DealListRelationFilter
    activities?: ActivityListRelationFilter
    tasks?: TaskListRelationFilter
    appointments?: AppointmentListRelationFilter
    documents?: DocumentListRelationFilter
    snags?: SnagListRelationFilter
    jobs?: JobListRelationFilter
    events?: EventLogListRelationFilter
    leads?: LeadListRelationFilter
  }, "id" | "portalToken">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    orgId?: SortOrderInput | SortOrder
    name?: SortOrder
    legalName?: SortOrderInput | SortOrder
    emails?: SortOrder
    phones?: SortOrder
    billingAddress?: SortOrderInput | SortOrder
    siteAddresses?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    portalToken?: SortOrder
    designFeePaid?: SortOrder
    consentMarketing?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: ClientCountOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Client"> | string
    orgId?: StringNullableWithAggregatesFilter<"Client"> | string | null
    name?: StringWithAggregatesFilter<"Client"> | string
    legalName?: StringNullableWithAggregatesFilter<"Client"> | string | null
    emails?: StringNullableListFilter<"Client">
    phones?: StringNullableListFilter<"Client">
    billingAddress?: JsonNullableWithAggregatesFilter<"Client">
    siteAddresses?: JsonNullableWithAggregatesFilter<"Client">
    ownerId?: StringWithAggregatesFilter<"Client"> | string
    tags?: StringNullableListFilter<"Client">
    status?: EnumClientStatusWithAggregatesFilter<"Client"> | $Enums.ClientStatus
    portalToken?: StringWithAggregatesFilter<"Client"> | string
    designFeePaid?: BoolWithAggregatesFilter<"Client"> | boolean
    consentMarketing?: BoolWithAggregatesFilter<"Client"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    createdById?: StringNullableWithAggregatesFilter<"Client"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Client"> | string | null
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    id?: StringFilter<"Contact"> | string
    clientId?: StringFilter<"Contact"> | string
    name?: StringFilter<"Contact"> | string
    role?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    isPrimary?: BoolFilter<"Contact"> | boolean
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type ContactOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    clientId?: StringFilter<"Contact"> | string
    name?: StringFilter<"Contact"> | string
    role?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    isPrimary?: BoolFilter<"Contact"> | boolean
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type ContactOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ContactCountOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Contact"> | string
    clientId?: StringWithAggregatesFilter<"Contact"> | string
    name?: StringWithAggregatesFilter<"Contact"> | string
    role?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    email?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"Contact"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
  }

  export type RoomWhereInput = {
    AND?: RoomWhereInput | RoomWhereInput[]
    OR?: RoomWhereInput[]
    NOT?: RoomWhereInput | RoomWhereInput[]
    id?: StringFilter<"Room"> | string
    clientId?: StringFilter<"Room"> | string
    type?: EnumRoomTypeFilter<"Room"> | $Enums.RoomType
    nickname?: StringFilter<"Room"> | string
    pipelineStageId?: StringNullableFilter<"Room"> | string | null
    ownerId?: StringNullableFilter<"Room"> | string | null
    budgetLow?: IntNullableFilter<"Room"> | number | null
    budgetHigh?: IntNullableFilter<"Room"> | number | null
    siteAddress?: JsonNullableFilter<"Room">
    status?: EnumRoomStatusFilter<"Room"> | $Enums.RoomStatus
    createdAt?: DateTimeFilter<"Room"> | Date | string
    updatedAt?: DateTimeFilter<"Room"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Room"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    stage?: XOR<PipelineStageNullableRelationFilter, PipelineStageWhereInput> | null
    owner?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    deal?: XOR<DealNullableRelationFilter, DealWhereInput> | null
    activities?: ActivityListRelationFilter
    tasks?: TaskListRelationFilter
    appointments?: AppointmentListRelationFilter
    documents?: DocumentListRelationFilter
    designVersions?: DesignVersionListRelationFilter
    parsedSpecItems?: ParsedSpecItemListRelationFilter
    forms?: FormSubmissionListRelationFilter
    jobs?: JobListRelationFilter
    snags?: SnagListRelationFilter
  }

  export type RoomOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    nickname?: SortOrder
    pipelineStageId?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    budgetLow?: SortOrderInput | SortOrder
    budgetHigh?: SortOrderInput | SortOrder
    siteAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    stage?: PipelineStageOrderByWithRelationInput
    owner?: UserOrderByWithRelationInput
    deal?: DealOrderByWithRelationInput
    activities?: ActivityOrderByRelationAggregateInput
    tasks?: TaskOrderByRelationAggregateInput
    appointments?: AppointmentOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    designVersions?: DesignVersionOrderByRelationAggregateInput
    parsedSpecItems?: ParsedSpecItemOrderByRelationAggregateInput
    forms?: FormSubmissionOrderByRelationAggregateInput
    jobs?: JobOrderByRelationAggregateInput
    snags?: SnagOrderByRelationAggregateInput
  }

  export type RoomWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RoomWhereInput | RoomWhereInput[]
    OR?: RoomWhereInput[]
    NOT?: RoomWhereInput | RoomWhereInput[]
    clientId?: StringFilter<"Room"> | string
    type?: EnumRoomTypeFilter<"Room"> | $Enums.RoomType
    nickname?: StringFilter<"Room"> | string
    pipelineStageId?: StringNullableFilter<"Room"> | string | null
    ownerId?: StringNullableFilter<"Room"> | string | null
    budgetLow?: IntNullableFilter<"Room"> | number | null
    budgetHigh?: IntNullableFilter<"Room"> | number | null
    siteAddress?: JsonNullableFilter<"Room">
    status?: EnumRoomStatusFilter<"Room"> | $Enums.RoomStatus
    createdAt?: DateTimeFilter<"Room"> | Date | string
    updatedAt?: DateTimeFilter<"Room"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Room"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    stage?: XOR<PipelineStageNullableRelationFilter, PipelineStageWhereInput> | null
    owner?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    deal?: XOR<DealNullableRelationFilter, DealWhereInput> | null
    activities?: ActivityListRelationFilter
    tasks?: TaskListRelationFilter
    appointments?: AppointmentListRelationFilter
    documents?: DocumentListRelationFilter
    designVersions?: DesignVersionListRelationFilter
    parsedSpecItems?: ParsedSpecItemListRelationFilter
    forms?: FormSubmissionListRelationFilter
    jobs?: JobListRelationFilter
    snags?: SnagListRelationFilter
  }, "id">

  export type RoomOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    nickname?: SortOrder
    pipelineStageId?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    budgetLow?: SortOrderInput | SortOrder
    budgetHigh?: SortOrderInput | SortOrder
    siteAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: RoomCountOrderByAggregateInput
    _avg?: RoomAvgOrderByAggregateInput
    _max?: RoomMaxOrderByAggregateInput
    _min?: RoomMinOrderByAggregateInput
    _sum?: RoomSumOrderByAggregateInput
  }

  export type RoomScalarWhereWithAggregatesInput = {
    AND?: RoomScalarWhereWithAggregatesInput | RoomScalarWhereWithAggregatesInput[]
    OR?: RoomScalarWhereWithAggregatesInput[]
    NOT?: RoomScalarWhereWithAggregatesInput | RoomScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Room"> | string
    clientId?: StringWithAggregatesFilter<"Room"> | string
    type?: EnumRoomTypeWithAggregatesFilter<"Room"> | $Enums.RoomType
    nickname?: StringWithAggregatesFilter<"Room"> | string
    pipelineStageId?: StringNullableWithAggregatesFilter<"Room"> | string | null
    ownerId?: StringNullableWithAggregatesFilter<"Room"> | string | null
    budgetLow?: IntNullableWithAggregatesFilter<"Room"> | number | null
    budgetHigh?: IntNullableWithAggregatesFilter<"Room"> | number | null
    siteAddress?: JsonNullableWithAggregatesFilter<"Room">
    status?: EnumRoomStatusWithAggregatesFilter<"Room"> | $Enums.RoomStatus
    createdAt?: DateTimeWithAggregatesFilter<"Room"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Room"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Room"> | Date | string | null
  }

  export type DealWhereInput = {
    AND?: DealWhereInput | DealWhereInput[]
    OR?: DealWhereInput[]
    NOT?: DealWhereInput | DealWhereInput[]
    id?: StringFilter<"Deal"> | string
    clientId?: StringFilter<"Deal"> | string
    roomId?: StringNullableFilter<"Deal"> | string | null
    stageId?: StringFilter<"Deal"> | string
    ownerId?: StringFilter<"Deal"> | string
    amountGrossIncVat?: IntFilter<"Deal"> | number
    vatRate?: FloatFilter<"Deal"> | number
    probability?: IntFilter<"Deal"> | number
    source?: StringNullableFilter<"Deal"> | string | null
    utm?: JsonNullableFilter<"Deal">
    createdAt?: DateTimeFilter<"Deal"> | Date | string
    updatedAt?: DateTimeFilter<"Deal"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    stage?: XOR<PipelineStageRelationFilter, PipelineStageWhereInput>
    owner?: XOR<UserRelationFilter, UserWhereInput>
    lead?: XOR<LeadNullableRelationFilter, LeadWhereInput> | null
  }

  export type DealOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    stageId?: SortOrder
    ownerId?: SortOrder
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
    source?: SortOrderInput | SortOrder
    utm?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
    stage?: PipelineStageOrderByWithRelationInput
    owner?: UserOrderByWithRelationInput
    lead?: LeadOrderByWithRelationInput
  }

  export type DealWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    roomId?: string
    AND?: DealWhereInput | DealWhereInput[]
    OR?: DealWhereInput[]
    NOT?: DealWhereInput | DealWhereInput[]
    clientId?: StringFilter<"Deal"> | string
    stageId?: StringFilter<"Deal"> | string
    ownerId?: StringFilter<"Deal"> | string
    amountGrossIncVat?: IntFilter<"Deal"> | number
    vatRate?: FloatFilter<"Deal"> | number
    probability?: IntFilter<"Deal"> | number
    source?: StringNullableFilter<"Deal"> | string | null
    utm?: JsonNullableFilter<"Deal">
    createdAt?: DateTimeFilter<"Deal"> | Date | string
    updatedAt?: DateTimeFilter<"Deal"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    stage?: XOR<PipelineStageRelationFilter, PipelineStageWhereInput>
    owner?: XOR<UserRelationFilter, UserWhereInput>
    lead?: XOR<LeadNullableRelationFilter, LeadWhereInput> | null
  }, "id" | "roomId">

  export type DealOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    stageId?: SortOrder
    ownerId?: SortOrder
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
    source?: SortOrderInput | SortOrder
    utm?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DealCountOrderByAggregateInput
    _avg?: DealAvgOrderByAggregateInput
    _max?: DealMaxOrderByAggregateInput
    _min?: DealMinOrderByAggregateInput
    _sum?: DealSumOrderByAggregateInput
  }

  export type DealScalarWhereWithAggregatesInput = {
    AND?: DealScalarWhereWithAggregatesInput | DealScalarWhereWithAggregatesInput[]
    OR?: DealScalarWhereWithAggregatesInput[]
    NOT?: DealScalarWhereWithAggregatesInput | DealScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Deal"> | string
    clientId?: StringWithAggregatesFilter<"Deal"> | string
    roomId?: StringNullableWithAggregatesFilter<"Deal"> | string | null
    stageId?: StringWithAggregatesFilter<"Deal"> | string
    ownerId?: StringWithAggregatesFilter<"Deal"> | string
    amountGrossIncVat?: IntWithAggregatesFilter<"Deal"> | number
    vatRate?: FloatWithAggregatesFilter<"Deal"> | number
    probability?: IntWithAggregatesFilter<"Deal"> | number
    source?: StringNullableWithAggregatesFilter<"Deal"> | string | null
    utm?: JsonNullableWithAggregatesFilter<"Deal">
    createdAt?: DateTimeWithAggregatesFilter<"Deal"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Deal"> | Date | string
  }

  export type PipelineStageWhereInput = {
    AND?: PipelineStageWhereInput | PipelineStageWhereInput[]
    OR?: PipelineStageWhereInput[]
    NOT?: PipelineStageWhereInput | PipelineStageWhereInput[]
    id?: StringFilter<"PipelineStage"> | string
    name?: StringFilter<"PipelineStage"> | string
    order?: IntFilter<"PipelineStage"> | number
    slaHours?: IntNullableFilter<"PipelineStage"> | number | null
    rooms?: RoomListRelationFilter
    deals?: DealListRelationFilter
  }

  export type PipelineStageOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    slaHours?: SortOrderInput | SortOrder
    rooms?: RoomOrderByRelationAggregateInput
    deals?: DealOrderByRelationAggregateInput
  }

  export type PipelineStageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PipelineStageWhereInput | PipelineStageWhereInput[]
    OR?: PipelineStageWhereInput[]
    NOT?: PipelineStageWhereInput | PipelineStageWhereInput[]
    name?: StringFilter<"PipelineStage"> | string
    order?: IntFilter<"PipelineStage"> | number
    slaHours?: IntNullableFilter<"PipelineStage"> | number | null
    rooms?: RoomListRelationFilter
    deals?: DealListRelationFilter
  }, "id">

  export type PipelineStageOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    slaHours?: SortOrderInput | SortOrder
    _count?: PipelineStageCountOrderByAggregateInput
    _avg?: PipelineStageAvgOrderByAggregateInput
    _max?: PipelineStageMaxOrderByAggregateInput
    _min?: PipelineStageMinOrderByAggregateInput
    _sum?: PipelineStageSumOrderByAggregateInput
  }

  export type PipelineStageScalarWhereWithAggregatesInput = {
    AND?: PipelineStageScalarWhereWithAggregatesInput | PipelineStageScalarWhereWithAggregatesInput[]
    OR?: PipelineStageScalarWhereWithAggregatesInput[]
    NOT?: PipelineStageScalarWhereWithAggregatesInput | PipelineStageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PipelineStage"> | string
    name?: StringWithAggregatesFilter<"PipelineStage"> | string
    order?: IntWithAggregatesFilter<"PipelineStage"> | number
    slaHours?: IntNullableWithAggregatesFilter<"PipelineStage"> | number | null
  }

  export type ActivityWhereInput = {
    AND?: ActivityWhereInput | ActivityWhereInput[]
    OR?: ActivityWhereInput[]
    NOT?: ActivityWhereInput | ActivityWhereInput[]
    id?: StringFilter<"Activity"> | string
    clientId?: StringFilter<"Activity"> | string
    roomId?: StringNullableFilter<"Activity"> | string | null
    userId?: StringNullableFilter<"Activity"> | string | null
    type?: EnumActivityTypeFilter<"Activity"> | $Enums.ActivityType
    threadKey?: StringNullableFilter<"Activity"> | string | null
    summary?: StringNullableFilter<"Activity"> | string | null
    body?: StringNullableFilter<"Activity"> | string | null
    attachments?: JsonNullableFilter<"Activity">
    durations?: JsonNullableFilter<"Activity">
    metadata?: JsonNullableFilter<"Activity">
    occurredAt?: DateTimeFilter<"Activity"> | Date | string
    createdAt?: DateTimeFilter<"Activity"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type ActivityOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    type?: SortOrder
    threadKey?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    durations?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ActivityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ActivityWhereInput | ActivityWhereInput[]
    OR?: ActivityWhereInput[]
    NOT?: ActivityWhereInput | ActivityWhereInput[]
    clientId?: StringFilter<"Activity"> | string
    roomId?: StringNullableFilter<"Activity"> | string | null
    userId?: StringNullableFilter<"Activity"> | string | null
    type?: EnumActivityTypeFilter<"Activity"> | $Enums.ActivityType
    threadKey?: StringNullableFilter<"Activity"> | string | null
    summary?: StringNullableFilter<"Activity"> | string | null
    body?: StringNullableFilter<"Activity"> | string | null
    attachments?: JsonNullableFilter<"Activity">
    durations?: JsonNullableFilter<"Activity">
    metadata?: JsonNullableFilter<"Activity">
    occurredAt?: DateTimeFilter<"Activity"> | Date | string
    createdAt?: DateTimeFilter<"Activity"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type ActivityOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    type?: SortOrder
    threadKey?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    durations?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
    _count?: ActivityCountOrderByAggregateInput
    _max?: ActivityMaxOrderByAggregateInput
    _min?: ActivityMinOrderByAggregateInput
  }

  export type ActivityScalarWhereWithAggregatesInput = {
    AND?: ActivityScalarWhereWithAggregatesInput | ActivityScalarWhereWithAggregatesInput[]
    OR?: ActivityScalarWhereWithAggregatesInput[]
    NOT?: ActivityScalarWhereWithAggregatesInput | ActivityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Activity"> | string
    clientId?: StringWithAggregatesFilter<"Activity"> | string
    roomId?: StringNullableWithAggregatesFilter<"Activity"> | string | null
    userId?: StringNullableWithAggregatesFilter<"Activity"> | string | null
    type?: EnumActivityTypeWithAggregatesFilter<"Activity"> | $Enums.ActivityType
    threadKey?: StringNullableWithAggregatesFilter<"Activity"> | string | null
    summary?: StringNullableWithAggregatesFilter<"Activity"> | string | null
    body?: StringNullableWithAggregatesFilter<"Activity"> | string | null
    attachments?: JsonNullableWithAggregatesFilter<"Activity">
    durations?: JsonNullableWithAggregatesFilter<"Activity">
    metadata?: JsonNullableWithAggregatesFilter<"Activity">
    occurredAt?: DateTimeWithAggregatesFilter<"Activity"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Activity"> | Date | string
  }

  export type TaskWhereInput = {
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    id?: StringFilter<"Task"> | string
    clientId?: StringFilter<"Task"> | string
    roomId?: StringNullableFilter<"Task"> | string | null
    assigneeId?: StringNullableFilter<"Task"> | string | null
    title?: StringFilter<"Task"> | string
    dueAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    priority?: IntFilter<"Task"> | number
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    autoGenerated?: BoolFilter<"Task"> | boolean
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    assignee?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type TaskOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    title?: SortOrder
    dueAt?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    autoGenerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
    assignee?: UserOrderByWithRelationInput
  }

  export type TaskWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    clientId?: StringFilter<"Task"> | string
    roomId?: StringNullableFilter<"Task"> | string | null
    assigneeId?: StringNullableFilter<"Task"> | string | null
    title?: StringFilter<"Task"> | string
    dueAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    priority?: IntFilter<"Task"> | number
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    autoGenerated?: BoolFilter<"Task"> | boolean
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
    assignee?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type TaskOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    assigneeId?: SortOrderInput | SortOrder
    title?: SortOrder
    dueAt?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    autoGenerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TaskCountOrderByAggregateInput
    _avg?: TaskAvgOrderByAggregateInput
    _max?: TaskMaxOrderByAggregateInput
    _min?: TaskMinOrderByAggregateInput
    _sum?: TaskSumOrderByAggregateInput
  }

  export type TaskScalarWhereWithAggregatesInput = {
    AND?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    OR?: TaskScalarWhereWithAggregatesInput[]
    NOT?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Task"> | string
    clientId?: StringWithAggregatesFilter<"Task"> | string
    roomId?: StringNullableWithAggregatesFilter<"Task"> | string | null
    assigneeId?: StringNullableWithAggregatesFilter<"Task"> | string | null
    title?: StringWithAggregatesFilter<"Task"> | string
    dueAt?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    priority?: IntWithAggregatesFilter<"Task"> | number
    status?: EnumTaskStatusWithAggregatesFilter<"Task"> | $Enums.TaskStatus
    autoGenerated?: BoolWithAggregatesFilter<"Task"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
  }

  export type AppointmentWhereInput = {
    AND?: AppointmentWhereInput | AppointmentWhereInput[]
    OR?: AppointmentWhereInput[]
    NOT?: AppointmentWhereInput | AppointmentWhereInput[]
    id?: StringFilter<"Appointment"> | string
    clientId?: StringFilter<"Appointment"> | string
    roomId?: StringNullableFilter<"Appointment"> | string | null
    type?: EnumAppointmentTypeFilter<"Appointment"> | $Enums.AppointmentType
    start?: DateTimeFilter<"Appointment"> | Date | string
    end?: DateTimeFilter<"Appointment"> | Date | string
    location?: StringNullableFilter<"Appointment"> | string | null
    participants?: JsonNullableFilter<"Appointment">
    status?: StringNullableFilter<"Appointment"> | string | null
    createdAt?: DateTimeFilter<"Appointment"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }

  export type AppointmentOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    type?: SortOrder
    start?: SortOrder
    end?: SortOrder
    location?: SortOrderInput | SortOrder
    participants?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
  }

  export type AppointmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AppointmentWhereInput | AppointmentWhereInput[]
    OR?: AppointmentWhereInput[]
    NOT?: AppointmentWhereInput | AppointmentWhereInput[]
    clientId?: StringFilter<"Appointment"> | string
    roomId?: StringNullableFilter<"Appointment"> | string | null
    type?: EnumAppointmentTypeFilter<"Appointment"> | $Enums.AppointmentType
    start?: DateTimeFilter<"Appointment"> | Date | string
    end?: DateTimeFilter<"Appointment"> | Date | string
    location?: StringNullableFilter<"Appointment"> | string | null
    participants?: JsonNullableFilter<"Appointment">
    status?: StringNullableFilter<"Appointment"> | string | null
    createdAt?: DateTimeFilter<"Appointment"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }, "id">

  export type AppointmentOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    type?: SortOrder
    start?: SortOrder
    end?: SortOrder
    location?: SortOrderInput | SortOrder
    participants?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AppointmentCountOrderByAggregateInput
    _max?: AppointmentMaxOrderByAggregateInput
    _min?: AppointmentMinOrderByAggregateInput
  }

  export type AppointmentScalarWhereWithAggregatesInput = {
    AND?: AppointmentScalarWhereWithAggregatesInput | AppointmentScalarWhereWithAggregatesInput[]
    OR?: AppointmentScalarWhereWithAggregatesInput[]
    NOT?: AppointmentScalarWhereWithAggregatesInput | AppointmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Appointment"> | string
    clientId?: StringWithAggregatesFilter<"Appointment"> | string
    roomId?: StringNullableWithAggregatesFilter<"Appointment"> | string | null
    type?: EnumAppointmentTypeWithAggregatesFilter<"Appointment"> | $Enums.AppointmentType
    start?: DateTimeWithAggregatesFilter<"Appointment"> | Date | string
    end?: DateTimeWithAggregatesFilter<"Appointment"> | Date | string
    location?: StringNullableWithAggregatesFilter<"Appointment"> | string | null
    participants?: JsonNullableWithAggregatesFilter<"Appointment">
    status?: StringNullableWithAggregatesFilter<"Appointment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Appointment"> | Date | string
  }

  export type DocumentWhereInput = {
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    id?: StringFilter<"Document"> | string
    clientId?: StringFilter<"Document"> | string
    roomId?: StringNullableFilter<"Document"> | string | null
    category?: EnumDocCategoryFilter<"Document"> | $Enums.DocCategory
    url?: StringFilter<"Document"> | string
    thumbUrl?: StringNullableFilter<"Document"> | string | null
    size?: IntNullableFilter<"Document"> | number | null
    labels?: StringNullableListFilter<"Document">
    capturedAt?: DateTimeNullableFilter<"Document"> | Date | string | null
    capturedBy?: StringNullableFilter<"Document"> | string | null
    clientVisible?: BoolFilter<"Document"> | boolean
    clientWatermark?: BoolFilter<"Document"> | boolean
    createdAt?: DateTimeFilter<"Document"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }

  export type DocumentOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    category?: SortOrder
    url?: SortOrder
    thumbUrl?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    labels?: SortOrder
    capturedAt?: SortOrderInput | SortOrder
    capturedBy?: SortOrderInput | SortOrder
    clientVisible?: SortOrder
    clientWatermark?: SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
  }

  export type DocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    clientId?: StringFilter<"Document"> | string
    roomId?: StringNullableFilter<"Document"> | string | null
    category?: EnumDocCategoryFilter<"Document"> | $Enums.DocCategory
    url?: StringFilter<"Document"> | string
    thumbUrl?: StringNullableFilter<"Document"> | string | null
    size?: IntNullableFilter<"Document"> | number | null
    labels?: StringNullableListFilter<"Document">
    capturedAt?: DateTimeNullableFilter<"Document"> | Date | string | null
    capturedBy?: StringNullableFilter<"Document"> | string | null
    clientVisible?: BoolFilter<"Document"> | boolean
    clientWatermark?: BoolFilter<"Document"> | boolean
    createdAt?: DateTimeFilter<"Document"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }, "id">

  export type DocumentOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    category?: SortOrder
    url?: SortOrder
    thumbUrl?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    labels?: SortOrder
    capturedAt?: SortOrderInput | SortOrder
    capturedBy?: SortOrderInput | SortOrder
    clientVisible?: SortOrder
    clientWatermark?: SortOrder
    createdAt?: SortOrder
    _count?: DocumentCountOrderByAggregateInput
    _avg?: DocumentAvgOrderByAggregateInput
    _max?: DocumentMaxOrderByAggregateInput
    _min?: DocumentMinOrderByAggregateInput
    _sum?: DocumentSumOrderByAggregateInput
  }

  export type DocumentScalarWhereWithAggregatesInput = {
    AND?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    OR?: DocumentScalarWhereWithAggregatesInput[]
    NOT?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Document"> | string
    clientId?: StringWithAggregatesFilter<"Document"> | string
    roomId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    category?: EnumDocCategoryWithAggregatesFilter<"Document"> | $Enums.DocCategory
    url?: StringWithAggregatesFilter<"Document"> | string
    thumbUrl?: StringNullableWithAggregatesFilter<"Document"> | string | null
    size?: IntNullableWithAggregatesFilter<"Document"> | number | null
    labels?: StringNullableListFilter<"Document">
    capturedAt?: DateTimeNullableWithAggregatesFilter<"Document"> | Date | string | null
    capturedBy?: StringNullableWithAggregatesFilter<"Document"> | string | null
    clientVisible?: BoolWithAggregatesFilter<"Document"> | boolean
    clientWatermark?: BoolWithAggregatesFilter<"Document"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Document"> | Date | string
  }

  export type DesignVersionWhereInput = {
    AND?: DesignVersionWhereInput | DesignVersionWhereInput[]
    OR?: DesignVersionWhereInput[]
    NOT?: DesignVersionWhereInput | DesignVersionWhereInput[]
    id?: StringFilter<"DesignVersion"> | string
    clientId?: StringFilter<"DesignVersion"> | string
    roomId?: StringFilter<"DesignVersion"> | string
    version?: IntFilter<"DesignVersion"> | number
    notes?: StringNullableFilter<"DesignVersion"> | string | null
    assets?: JsonFilter<"DesignVersion">
    finalApproved?: BoolFilter<"DesignVersion"> | boolean
    createdAt?: DateTimeFilter<"DesignVersion"> | Date | string
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }

  export type DesignVersionOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    version?: SortOrder
    notes?: SortOrderInput | SortOrder
    assets?: SortOrder
    finalApproved?: SortOrder
    createdAt?: SortOrder
    room?: RoomOrderByWithRelationInput
  }

  export type DesignVersionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    roomId_version?: DesignVersionRoomIdVersionCompoundUniqueInput
    AND?: DesignVersionWhereInput | DesignVersionWhereInput[]
    OR?: DesignVersionWhereInput[]
    NOT?: DesignVersionWhereInput | DesignVersionWhereInput[]
    clientId?: StringFilter<"DesignVersion"> | string
    roomId?: StringFilter<"DesignVersion"> | string
    version?: IntFilter<"DesignVersion"> | number
    notes?: StringNullableFilter<"DesignVersion"> | string | null
    assets?: JsonFilter<"DesignVersion">
    finalApproved?: BoolFilter<"DesignVersion"> | boolean
    createdAt?: DateTimeFilter<"DesignVersion"> | Date | string
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }, "id" | "roomId_version">

  export type DesignVersionOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    version?: SortOrder
    notes?: SortOrderInput | SortOrder
    assets?: SortOrder
    finalApproved?: SortOrder
    createdAt?: SortOrder
    _count?: DesignVersionCountOrderByAggregateInput
    _avg?: DesignVersionAvgOrderByAggregateInput
    _max?: DesignVersionMaxOrderByAggregateInput
    _min?: DesignVersionMinOrderByAggregateInput
    _sum?: DesignVersionSumOrderByAggregateInput
  }

  export type DesignVersionScalarWhereWithAggregatesInput = {
    AND?: DesignVersionScalarWhereWithAggregatesInput | DesignVersionScalarWhereWithAggregatesInput[]
    OR?: DesignVersionScalarWhereWithAggregatesInput[]
    NOT?: DesignVersionScalarWhereWithAggregatesInput | DesignVersionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DesignVersion"> | string
    clientId?: StringWithAggregatesFilter<"DesignVersion"> | string
    roomId?: StringWithAggregatesFilter<"DesignVersion"> | string
    version?: IntWithAggregatesFilter<"DesignVersion"> | number
    notes?: StringNullableWithAggregatesFilter<"DesignVersion"> | string | null
    assets?: JsonWithAggregatesFilter<"DesignVersion">
    finalApproved?: BoolWithAggregatesFilter<"DesignVersion"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"DesignVersion"> | Date | string
  }

  export type ParsedSpecItemWhereInput = {
    AND?: ParsedSpecItemWhereInput | ParsedSpecItemWhereInput[]
    OR?: ParsedSpecItemWhereInput[]
    NOT?: ParsedSpecItemWhereInput | ParsedSpecItemWhereInput[]
    id?: StringFilter<"ParsedSpecItem"> | string
    clientId?: StringFilter<"ParsedSpecItem"> | string
    roomId?: StringFilter<"ParsedSpecItem"> | string
    specVersion?: IntFilter<"ParsedSpecItem"> | number
    lineNo?: IntFilter<"ParsedSpecItem"> | number
    brand?: StringNullableFilter<"ParsedSpecItem"> | string | null
    description?: StringFilter<"ParsedSpecItem"> | string
    finish?: StringNullableFilter<"ParsedSpecItem"> | string | null
    qty?: FloatNullableFilter<"ParsedSpecItem"> | number | null
    unitPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    totalPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    status?: EnumSpecStatusFilter<"ParsedSpecItem"> | $Enums.SpecStatus
    note?: StringNullableFilter<"ParsedSpecItem"> | string | null
    isCritical?: BoolFilter<"ParsedSpecItem"> | boolean
    createdAt?: DateTimeFilter<"ParsedSpecItem"> | Date | string
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }

  export type ParsedSpecItemOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    specVersion?: SortOrder
    lineNo?: SortOrder
    brand?: SortOrderInput | SortOrder
    description?: SortOrder
    finish?: SortOrderInput | SortOrder
    qty?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    totalPrice?: SortOrderInput | SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    isCritical?: SortOrder
    createdAt?: SortOrder
    room?: RoomOrderByWithRelationInput
  }

  export type ParsedSpecItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ParsedSpecItemWhereInput | ParsedSpecItemWhereInput[]
    OR?: ParsedSpecItemWhereInput[]
    NOT?: ParsedSpecItemWhereInput | ParsedSpecItemWhereInput[]
    clientId?: StringFilter<"ParsedSpecItem"> | string
    roomId?: StringFilter<"ParsedSpecItem"> | string
    specVersion?: IntFilter<"ParsedSpecItem"> | number
    lineNo?: IntFilter<"ParsedSpecItem"> | number
    brand?: StringNullableFilter<"ParsedSpecItem"> | string | null
    description?: StringFilter<"ParsedSpecItem"> | string
    finish?: StringNullableFilter<"ParsedSpecItem"> | string | null
    qty?: FloatNullableFilter<"ParsedSpecItem"> | number | null
    unitPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    totalPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    status?: EnumSpecStatusFilter<"ParsedSpecItem"> | $Enums.SpecStatus
    note?: StringNullableFilter<"ParsedSpecItem"> | string | null
    isCritical?: BoolFilter<"ParsedSpecItem"> | boolean
    createdAt?: DateTimeFilter<"ParsedSpecItem"> | Date | string
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }, "id">

  export type ParsedSpecItemOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    specVersion?: SortOrder
    lineNo?: SortOrder
    brand?: SortOrderInput | SortOrder
    description?: SortOrder
    finish?: SortOrderInput | SortOrder
    qty?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    totalPrice?: SortOrderInput | SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    isCritical?: SortOrder
    createdAt?: SortOrder
    _count?: ParsedSpecItemCountOrderByAggregateInput
    _avg?: ParsedSpecItemAvgOrderByAggregateInput
    _max?: ParsedSpecItemMaxOrderByAggregateInput
    _min?: ParsedSpecItemMinOrderByAggregateInput
    _sum?: ParsedSpecItemSumOrderByAggregateInput
  }

  export type ParsedSpecItemScalarWhereWithAggregatesInput = {
    AND?: ParsedSpecItemScalarWhereWithAggregatesInput | ParsedSpecItemScalarWhereWithAggregatesInput[]
    OR?: ParsedSpecItemScalarWhereWithAggregatesInput[]
    NOT?: ParsedSpecItemScalarWhereWithAggregatesInput | ParsedSpecItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ParsedSpecItem"> | string
    clientId?: StringWithAggregatesFilter<"ParsedSpecItem"> | string
    roomId?: StringWithAggregatesFilter<"ParsedSpecItem"> | string
    specVersion?: IntWithAggregatesFilter<"ParsedSpecItem"> | number
    lineNo?: IntWithAggregatesFilter<"ParsedSpecItem"> | number
    brand?: StringNullableWithAggregatesFilter<"ParsedSpecItem"> | string | null
    description?: StringWithAggregatesFilter<"ParsedSpecItem"> | string
    finish?: StringNullableWithAggregatesFilter<"ParsedSpecItem"> | string | null
    qty?: FloatNullableWithAggregatesFilter<"ParsedSpecItem"> | number | null
    unitPrice?: IntNullableWithAggregatesFilter<"ParsedSpecItem"> | number | null
    totalPrice?: IntNullableWithAggregatesFilter<"ParsedSpecItem"> | number | null
    status?: EnumSpecStatusWithAggregatesFilter<"ParsedSpecItem"> | $Enums.SpecStatus
    note?: StringNullableWithAggregatesFilter<"ParsedSpecItem"> | string | null
    isCritical?: BoolWithAggregatesFilter<"ParsedSpecItem"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ParsedSpecItem"> | Date | string
  }

  export type SnagWhereInput = {
    AND?: SnagWhereInput | SnagWhereInput[]
    OR?: SnagWhereInput[]
    NOT?: SnagWhereInput | SnagWhereInput[]
    id?: StringFilter<"Snag"> | string
    clientId?: StringFilter<"Snag"> | string
    roomId?: StringFilter<"Snag"> | string
    title?: StringFilter<"Snag"> | string
    description?: StringNullableFilter<"Snag"> | string | null
    status?: EnumSnagStatusFilter<"Snag"> | $Enums.SnagStatus
    assigneeId?: StringNullableFilter<"Snag"> | string | null
    dueAt?: DateTimeNullableFilter<"Snag"> | Date | string | null
    clientVisible?: BoolFilter<"Snag"> | boolean
    photos?: JsonNullableFilter<"Snag">
    createdAt?: DateTimeFilter<"Snag"> | Date | string
    updatedAt?: DateTimeFilter<"Snag"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }

  export type SnagOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    dueAt?: SortOrderInput | SortOrder
    clientVisible?: SortOrder
    photos?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
  }

  export type SnagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SnagWhereInput | SnagWhereInput[]
    OR?: SnagWhereInput[]
    NOT?: SnagWhereInput | SnagWhereInput[]
    clientId?: StringFilter<"Snag"> | string
    roomId?: StringFilter<"Snag"> | string
    title?: StringFilter<"Snag"> | string
    description?: StringNullableFilter<"Snag"> | string | null
    status?: EnumSnagStatusFilter<"Snag"> | $Enums.SnagStatus
    assigneeId?: StringNullableFilter<"Snag"> | string | null
    dueAt?: DateTimeNullableFilter<"Snag"> | Date | string | null
    clientVisible?: BoolFilter<"Snag"> | boolean
    photos?: JsonNullableFilter<"Snag">
    createdAt?: DateTimeFilter<"Snag"> | Date | string
    updatedAt?: DateTimeFilter<"Snag"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomRelationFilter, RoomWhereInput>
  }, "id">

  export type SnagOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    dueAt?: SortOrderInput | SortOrder
    clientVisible?: SortOrder
    photos?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SnagCountOrderByAggregateInput
    _max?: SnagMaxOrderByAggregateInput
    _min?: SnagMinOrderByAggregateInput
  }

  export type SnagScalarWhereWithAggregatesInput = {
    AND?: SnagScalarWhereWithAggregatesInput | SnagScalarWhereWithAggregatesInput[]
    OR?: SnagScalarWhereWithAggregatesInput[]
    NOT?: SnagScalarWhereWithAggregatesInput | SnagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Snag"> | string
    clientId?: StringWithAggregatesFilter<"Snag"> | string
    roomId?: StringWithAggregatesFilter<"Snag"> | string
    title?: StringWithAggregatesFilter<"Snag"> | string
    description?: StringNullableWithAggregatesFilter<"Snag"> | string | null
    status?: EnumSnagStatusWithAggregatesFilter<"Snag"> | $Enums.SnagStatus
    assigneeId?: StringNullableWithAggregatesFilter<"Snag"> | string | null
    dueAt?: DateTimeNullableWithAggregatesFilter<"Snag"> | Date | string | null
    clientVisible?: BoolWithAggregatesFilter<"Snag"> | boolean
    photos?: JsonNullableWithAggregatesFilter<"Snag">
    createdAt?: DateTimeWithAggregatesFilter<"Snag"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Snag"> | Date | string
  }

  export type JobWhereInput = {
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    id?: StringFilter<"Job"> | string
    clientId?: StringFilter<"Job"> | string
    roomId?: StringNullableFilter<"Job"> | string | null
    title?: StringFilter<"Job"> | string
    description?: StringNullableFilter<"Job"> | string | null
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    startDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }

  export type JobOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: ClientOrderByWithRelationInput
    room?: RoomOrderByWithRelationInput
  }

  export type JobWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    clientId?: StringFilter<"Job"> | string
    roomId?: StringNullableFilter<"Job"> | string | null
    title?: StringFilter<"Job"> | string
    description?: StringNullableFilter<"Job"> | string | null
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    startDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }, "id">

  export type JobOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: JobCountOrderByAggregateInput
    _max?: JobMaxOrderByAggregateInput
    _min?: JobMinOrderByAggregateInput
  }

  export type JobScalarWhereWithAggregatesInput = {
    AND?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    OR?: JobScalarWhereWithAggregatesInput[]
    NOT?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Job"> | string
    clientId?: StringWithAggregatesFilter<"Job"> | string
    roomId?: StringNullableWithAggregatesFilter<"Job"> | string | null
    title?: StringWithAggregatesFilter<"Job"> | string
    description?: StringNullableWithAggregatesFilter<"Job"> | string | null
    status?: EnumJobStatusWithAggregatesFilter<"Job"> | $Enums.JobStatus
    startDate?: DateTimeNullableWithAggregatesFilter<"Job"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Job"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
  }

  export type FormSubmissionWhereInput = {
    AND?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    OR?: FormSubmissionWhereInput[]
    NOT?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    id?: StringFilter<"FormSubmission"> | string
    clientId?: StringFilter<"FormSubmission"> | string
    roomId?: StringNullableFilter<"FormSubmission"> | string | null
    formType?: StringFilter<"FormSubmission"> | string
    data?: JsonFilter<"FormSubmission">
    submittedAt?: DateTimeFilter<"FormSubmission"> | Date | string
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }

  export type FormSubmissionOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    formType?: SortOrder
    data?: SortOrder
    submittedAt?: SortOrder
    room?: RoomOrderByWithRelationInput
  }

  export type FormSubmissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    OR?: FormSubmissionWhereInput[]
    NOT?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    clientId?: StringFilter<"FormSubmission"> | string
    roomId?: StringNullableFilter<"FormSubmission"> | string | null
    formType?: StringFilter<"FormSubmission"> | string
    data?: JsonFilter<"FormSubmission">
    submittedAt?: DateTimeFilter<"FormSubmission"> | Date | string
    room?: XOR<RoomNullableRelationFilter, RoomWhereInput> | null
  }, "id">

  export type FormSubmissionOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrderInput | SortOrder
    formType?: SortOrder
    data?: SortOrder
    submittedAt?: SortOrder
    _count?: FormSubmissionCountOrderByAggregateInput
    _max?: FormSubmissionMaxOrderByAggregateInput
    _min?: FormSubmissionMinOrderByAggregateInput
  }

  export type FormSubmissionScalarWhereWithAggregatesInput = {
    AND?: FormSubmissionScalarWhereWithAggregatesInput | FormSubmissionScalarWhereWithAggregatesInput[]
    OR?: FormSubmissionScalarWhereWithAggregatesInput[]
    NOT?: FormSubmissionScalarWhereWithAggregatesInput | FormSubmissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FormSubmission"> | string
    clientId?: StringWithAggregatesFilter<"FormSubmission"> | string
    roomId?: StringNullableWithAggregatesFilter<"FormSubmission"> | string | null
    formType?: StringWithAggregatesFilter<"FormSubmission"> | string
    data?: JsonWithAggregatesFilter<"FormSubmission">
    submittedAt?: DateTimeWithAggregatesFilter<"FormSubmission"> | Date | string
  }

  export type EventLogWhereInput = {
    AND?: EventLogWhereInput | EventLogWhereInput[]
    OR?: EventLogWhereInput[]
    NOT?: EventLogWhereInput | EventLogWhereInput[]
    id?: StringFilter<"EventLog"> | string
    clientId?: StringNullableFilter<"EventLog"> | string | null
    roomId?: StringNullableFilter<"EventLog"> | string | null
    actorId?: StringNullableFilter<"EventLog"> | string | null
    entity?: StringFilter<"EventLog"> | string
    entityId?: StringFilter<"EventLog"> | string
    action?: StringFilter<"EventLog"> | string
    before?: JsonNullableFilter<"EventLog">
    after?: JsonNullableFilter<"EventLog">
    createdAt?: DateTimeFilter<"EventLog"> | Date | string
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
  }

  export type EventLogOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrderInput | SortOrder
    roomId?: SortOrderInput | SortOrder
    actorId?: SortOrderInput | SortOrder
    entity?: SortOrder
    entityId?: SortOrder
    action?: SortOrder
    before?: SortOrderInput | SortOrder
    after?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type EventLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventLogWhereInput | EventLogWhereInput[]
    OR?: EventLogWhereInput[]
    NOT?: EventLogWhereInput | EventLogWhereInput[]
    clientId?: StringNullableFilter<"EventLog"> | string | null
    roomId?: StringNullableFilter<"EventLog"> | string | null
    actorId?: StringNullableFilter<"EventLog"> | string | null
    entity?: StringFilter<"EventLog"> | string
    entityId?: StringFilter<"EventLog"> | string
    action?: StringFilter<"EventLog"> | string
    before?: JsonNullableFilter<"EventLog">
    after?: JsonNullableFilter<"EventLog">
    createdAt?: DateTimeFilter<"EventLog"> | Date | string
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
  }, "id">

  export type EventLogOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrderInput | SortOrder
    roomId?: SortOrderInput | SortOrder
    actorId?: SortOrderInput | SortOrder
    entity?: SortOrder
    entityId?: SortOrder
    action?: SortOrder
    before?: SortOrderInput | SortOrder
    after?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: EventLogCountOrderByAggregateInput
    _max?: EventLogMaxOrderByAggregateInput
    _min?: EventLogMinOrderByAggregateInput
  }

  export type EventLogScalarWhereWithAggregatesInput = {
    AND?: EventLogScalarWhereWithAggregatesInput | EventLogScalarWhereWithAggregatesInput[]
    OR?: EventLogScalarWhereWithAggregatesInput[]
    NOT?: EventLogScalarWhereWithAggregatesInput | EventLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventLog"> | string
    clientId?: StringNullableWithAggregatesFilter<"EventLog"> | string | null
    roomId?: StringNullableWithAggregatesFilter<"EventLog"> | string | null
    actorId?: StringNullableWithAggregatesFilter<"EventLog"> | string | null
    entity?: StringWithAggregatesFilter<"EventLog"> | string
    entityId?: StringWithAggregatesFilter<"EventLog"> | string
    action?: StringWithAggregatesFilter<"EventLog"> | string
    before?: JsonNullableWithAggregatesFilter<"EventLog">
    after?: JsonNullableWithAggregatesFilter<"EventLog">
    createdAt?: DateTimeWithAggregatesFilter<"EventLog"> | Date | string
  }

  export type LeadWhereInput = {
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    id?: StringFilter<"Lead"> | string
    title?: StringFilter<"Lead"> | string
    description?: StringNullableFilter<"Lead"> | string | null
    status?: EnumLeadStatusFilter<"Lead"> | $Enums.LeadStatus
    priority?: EnumPriorityFilter<"Lead"> | $Enums.Priority
    estimatedValue?: DecimalNullableFilter<"Lead"> | Decimal | DecimalJsLike | number | string | null
    probability?: IntFilter<"Lead"> | number
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    source?: StringNullableFilter<"Lead"> | string | null
    campaign?: StringNullableFilter<"Lead"> | string | null
    medium?: StringNullableFilter<"Lead"> | string | null
    firstResponseAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    responseTime?: IntNullableFilter<"Lead"> | number | null
    clientId?: StringFilter<"Lead"> | string
    ownerId?: StringFilter<"Lead"> | string
    dealId?: StringNullableFilter<"Lead"> | string | null
    createdAt?: DateTimeFilter<"Lead"> | Date | string
    updatedAt?: DateTimeFilter<"Lead"> | Date | string
    createdById?: StringNullableFilter<"Lead"> | string | null
    updatedById?: StringNullableFilter<"Lead"> | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    owner?: XOR<UserRelationFilter, UserWhereInput>
    deal?: XOR<DealNullableRelationFilter, DealWhereInput> | null
  }

  export type LeadOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    probability?: SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    campaign?: SortOrderInput | SortOrder
    medium?: SortOrderInput | SortOrder
    firstResponseAt?: SortOrderInput | SortOrder
    responseTime?: SortOrderInput | SortOrder
    clientId?: SortOrder
    ownerId?: SortOrder
    dealId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    owner?: UserOrderByWithRelationInput
    deal?: DealOrderByWithRelationInput
  }

  export type LeadWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    dealId?: string
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    title?: StringFilter<"Lead"> | string
    description?: StringNullableFilter<"Lead"> | string | null
    status?: EnumLeadStatusFilter<"Lead"> | $Enums.LeadStatus
    priority?: EnumPriorityFilter<"Lead"> | $Enums.Priority
    estimatedValue?: DecimalNullableFilter<"Lead"> | Decimal | DecimalJsLike | number | string | null
    probability?: IntFilter<"Lead"> | number
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    source?: StringNullableFilter<"Lead"> | string | null
    campaign?: StringNullableFilter<"Lead"> | string | null
    medium?: StringNullableFilter<"Lead"> | string | null
    firstResponseAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    responseTime?: IntNullableFilter<"Lead"> | number | null
    clientId?: StringFilter<"Lead"> | string
    ownerId?: StringFilter<"Lead"> | string
    createdAt?: DateTimeFilter<"Lead"> | Date | string
    updatedAt?: DateTimeFilter<"Lead"> | Date | string
    createdById?: StringNullableFilter<"Lead"> | string | null
    updatedById?: StringNullableFilter<"Lead"> | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    owner?: XOR<UserRelationFilter, UserWhereInput>
    deal?: XOR<DealNullableRelationFilter, DealWhereInput> | null
  }, "id" | "dealId">

  export type LeadOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    probability?: SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    campaign?: SortOrderInput | SortOrder
    medium?: SortOrderInput | SortOrder
    firstResponseAt?: SortOrderInput | SortOrder
    responseTime?: SortOrderInput | SortOrder
    clientId?: SortOrder
    ownerId?: SortOrder
    dealId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    _count?: LeadCountOrderByAggregateInput
    _avg?: LeadAvgOrderByAggregateInput
    _max?: LeadMaxOrderByAggregateInput
    _min?: LeadMinOrderByAggregateInput
    _sum?: LeadSumOrderByAggregateInput
  }

  export type LeadScalarWhereWithAggregatesInput = {
    AND?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    OR?: LeadScalarWhereWithAggregatesInput[]
    NOT?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Lead"> | string
    title?: StringWithAggregatesFilter<"Lead"> | string
    description?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    status?: EnumLeadStatusWithAggregatesFilter<"Lead"> | $Enums.LeadStatus
    priority?: EnumPriorityWithAggregatesFilter<"Lead"> | $Enums.Priority
    estimatedValue?: DecimalNullableWithAggregatesFilter<"Lead"> | Decimal | DecimalJsLike | number | string | null
    probability?: IntWithAggregatesFilter<"Lead"> | number
    expectedCloseDate?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    source?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    campaign?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    medium?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    firstResponseAt?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    responseTime?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    clientId?: StringWithAggregatesFilter<"Lead"> | string
    ownerId?: StringWithAggregatesFilter<"Lead"> | string
    dealId?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Lead"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Lead"> | Date | string
    createdById?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    updatedById?: StringNullableWithAggregatesFilter<"Lead"> | string | null
  }

  export type UserCreateInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientCreateInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateManyInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type ClientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactCreateInput = {
    id?: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateInput = {
    id?: string
    clientId: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactCreateManyInput = {
    id?: string
    clientId: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoomCreateInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomCreateManyInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type RoomUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoomUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DealCreateInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutDealsInput
    room?: RoomCreateNestedOneWithoutDealInput
    stage: PipelineStageCreateNestedOneWithoutDealsInput
    owner: UserCreateNestedOneWithoutOwnedDealsInput
    lead?: LeadCreateNestedOneWithoutDealInput
  }

  export type DealUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    lead?: LeadUncheckedCreateNestedOneWithoutDealInput
  }

  export type DealUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDealsNestedInput
    room?: RoomUpdateOneWithoutDealNestedInput
    stage?: PipelineStageUpdateOneRequiredWithoutDealsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedDealsNestedInput
    lead?: LeadUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lead?: LeadUncheckedUpdateOneWithoutDealNestedInput
  }

  export type DealCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DealUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DealUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PipelineStageCreateInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    rooms?: RoomCreateNestedManyWithoutStageInput
    deals?: DealCreateNestedManyWithoutStageInput
  }

  export type PipelineStageUncheckedCreateInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    rooms?: RoomUncheckedCreateNestedManyWithoutStageInput
    deals?: DealUncheckedCreateNestedManyWithoutStageInput
  }

  export type PipelineStageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    rooms?: RoomUpdateManyWithoutStageNestedInput
    deals?: DealUpdateManyWithoutStageNestedInput
  }

  export type PipelineStageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    rooms?: RoomUncheckedUpdateManyWithoutStageNestedInput
    deals?: DealUncheckedUpdateManyWithoutStageNestedInput
  }

  export type PipelineStageCreateManyInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
  }

  export type PipelineStageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PipelineStageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ActivityCreateInput = {
    id?: string
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutActivitiesInput
    room?: RoomCreateNestedOneWithoutActivitiesInput
    user?: UserCreateNestedOneWithoutActivitiesInput
  }

  export type ActivityUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type ActivityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutActivitiesNestedInput
    room?: RoomUpdateOneWithoutActivitiesNestedInput
    user?: UserUpdateOneWithoutActivitiesNestedInput
  }

  export type ActivityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type ActivityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskCreateInput = {
    id?: string
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutTasksInput
    room?: RoomCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutAssignedTasksInput
  }

  export type TaskUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutTasksNestedInput
    room?: RoomUpdateOneWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutAssignedTasksNestedInput
  }

  export type TaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentCreateInput = {
    id?: string
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutAppointmentsInput
    room?: RoomCreateNestedOneWithoutAppointmentsInput
  }

  export type AppointmentUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type AppointmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutAppointmentsNestedInput
    room?: RoomUpdateOneWithoutAppointmentsNestedInput
  }

  export type AppointmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type AppointmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentCreateInput = {
    id?: string
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutDocumentsInput
    room?: RoomCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type DocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDocumentsNestedInput
    room?: RoomUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type DocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionCreateInput = {
    id?: string
    clientId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
    room: RoomCreateNestedOneWithoutDesignVersionsInput
  }

  export type DesignVersionUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
  }

  export type DesignVersionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneRequiredWithoutDesignVersionsNestedInput
  }

  export type DesignVersionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionCreateManyInput = {
    id?: string
    clientId: string
    roomId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
  }

  export type DesignVersionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemCreateInput = {
    id?: string
    clientId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
    room: RoomCreateNestedOneWithoutParsedSpecItemsInput
  }

  export type ParsedSpecItemUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
  }

  export type ParsedSpecItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneRequiredWithoutParsedSpecItemsNestedInput
  }

  export type ParsedSpecItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemCreateManyInput = {
    id?: string
    clientId: string
    roomId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
  }

  export type ParsedSpecItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagCreateInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutSnagsInput
    room: RoomCreateNestedOneWithoutSnagsInput
  }

  export type SnagUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SnagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutSnagsNestedInput
    room?: RoomUpdateOneRequiredWithoutSnagsNestedInput
  }

  export type SnagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagCreateManyInput = {
    id?: string
    clientId: string
    roomId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SnagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobCreateInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutJobsInput
    room?: RoomCreateNestedOneWithoutJobsInput
  }

  export type JobUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutJobsNestedInput
    room?: RoomUpdateOneWithoutJobsNestedInput
  }

  export type JobUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionCreateInput = {
    id?: string
    clientId: string
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
    room?: RoomCreateNestedOneWithoutFormsInput
  }

  export type FormSubmissionUncheckedCreateInput = {
    id?: string
    clientId: string
    roomId?: string | null
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
  }

  export type FormSubmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutFormsNestedInput
  }

  export type FormSubmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionCreateManyInput = {
    id?: string
    clientId: string
    roomId?: string | null
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
  }

  export type FormSubmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogCreateInput = {
    id?: string
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    client?: ClientCreateNestedOneWithoutEventsInput
  }

  export type EventLogUncheckedCreateInput = {
    id?: string
    clientId?: string | null
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type EventLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneWithoutEventsNestedInput
  }

  export type EventLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogCreateManyInput = {
    id?: string
    clientId?: string | null
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type EventLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadCreateInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    client: ClientCreateNestedOneWithoutLeadsInput
    owner: UserCreateNestedOneWithoutOwnedLeadsInput
    deal?: DealCreateNestedOneWithoutLeadInput
  }

  export type LeadUncheckedCreateInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    clientId: string
    ownerId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type LeadUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    client?: ClientUpdateOneRequiredWithoutLeadsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedLeadsNestedInput
    deal?: DealUpdateOneWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadCreateManyInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    clientId: string
    ownerId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type LeadUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type ClientListRelationFilter = {
    every?: ClientWhereInput
    some?: ClientWhereInput
    none?: ClientWhereInput
  }

  export type RoomListRelationFilter = {
    every?: RoomWhereInput
    some?: RoomWhereInput
    none?: RoomWhereInput
  }

  export type DealListRelationFilter = {
    every?: DealWhereInput
    some?: DealWhereInput
    none?: DealWhereInput
  }

  export type TaskListRelationFilter = {
    every?: TaskWhereInput
    some?: TaskWhereInput
    none?: TaskWhereInput
  }

  export type ActivityListRelationFilter = {
    every?: ActivityWhereInput
    some?: ActivityWhereInput
    none?: ActivityWhereInput
  }

  export type LeadListRelationFilter = {
    every?: LeadWhereInput
    some?: LeadWhereInput
    none?: LeadWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoomOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DealOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ActivityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LeadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorEnabled?: SortOrder
    avatarUrl?: SortOrder
    timezone?: SortOrder
    preferences?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorEnabled?: SortOrder
    avatarUrl?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorEnabled?: SortOrder
    avatarUrl?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumClientStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientStatus | EnumClientStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumClientStatusFilter<$PrismaModel> | $Enums.ClientStatus
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type ContactListRelationFilter = {
    every?: ContactWhereInput
    some?: ContactWhereInput
    none?: ContactWhereInput
  }

  export type AppointmentListRelationFilter = {
    every?: AppointmentWhereInput
    some?: AppointmentWhereInput
    none?: AppointmentWhereInput
  }

  export type DocumentListRelationFilter = {
    every?: DocumentWhereInput
    some?: DocumentWhereInput
    none?: DocumentWhereInput
  }

  export type SnagListRelationFilter = {
    every?: SnagWhereInput
    some?: SnagWhereInput
    none?: SnagWhereInput
  }

  export type JobListRelationFilter = {
    every?: JobWhereInput
    some?: JobWhereInput
    none?: JobWhereInput
  }

  export type EventLogListRelationFilter = {
    every?: EventLogWhereInput
    some?: EventLogWhereInput
    none?: EventLogWhereInput
  }

  export type ContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AppointmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SnagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    orgId?: SortOrder
    name?: SortOrder
    legalName?: SortOrder
    emails?: SortOrder
    phones?: SortOrder
    billingAddress?: SortOrder
    siteAddresses?: SortOrder
    ownerId?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    portalToken?: SortOrder
    designFeePaid?: SortOrder
    consentMarketing?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    orgId?: SortOrder
    name?: SortOrder
    legalName?: SortOrder
    ownerId?: SortOrder
    status?: SortOrder
    portalToken?: SortOrder
    designFeePaid?: SortOrder
    consentMarketing?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    orgId?: SortOrder
    name?: SortOrder
    legalName?: SortOrder
    ownerId?: SortOrder
    status?: SortOrder
    portalToken?: SortOrder
    designFeePaid?: SortOrder
    consentMarketing?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumClientStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientStatus | EnumClientStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumClientStatusWithAggregatesFilter<$PrismaModel> | $Enums.ClientStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumClientStatusFilter<$PrismaModel>
    _max?: NestedEnumClientStatusFilter<$PrismaModel>
  }

  export type ClientRelationFilter = {
    is?: ClientWhereInput
    isNot?: ClientWhereInput
  }

  export type ContactCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumRoomTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomType | EnumRoomTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomTypeFilter<$PrismaModel> | $Enums.RoomType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumRoomStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomStatus | EnumRoomStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomStatusFilter<$PrismaModel> | $Enums.RoomStatus
  }

  export type PipelineStageNullableRelationFilter = {
    is?: PipelineStageWhereInput | null
    isNot?: PipelineStageWhereInput | null
  }

  export type DealNullableRelationFilter = {
    is?: DealWhereInput | null
    isNot?: DealWhereInput | null
  }

  export type DesignVersionListRelationFilter = {
    every?: DesignVersionWhereInput
    some?: DesignVersionWhereInput
    none?: DesignVersionWhereInput
  }

  export type ParsedSpecItemListRelationFilter = {
    every?: ParsedSpecItemWhereInput
    some?: ParsedSpecItemWhereInput
    none?: ParsedSpecItemWhereInput
  }

  export type FormSubmissionListRelationFilter = {
    every?: FormSubmissionWhereInput
    some?: FormSubmissionWhereInput
    none?: FormSubmissionWhereInput
  }

  export type DesignVersionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ParsedSpecItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FormSubmissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoomCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    nickname?: SortOrder
    pipelineStageId?: SortOrder
    ownerId?: SortOrder
    budgetLow?: SortOrder
    budgetHigh?: SortOrder
    siteAddress?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type RoomAvgOrderByAggregateInput = {
    budgetLow?: SortOrder
    budgetHigh?: SortOrder
  }

  export type RoomMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    nickname?: SortOrder
    pipelineStageId?: SortOrder
    ownerId?: SortOrder
    budgetLow?: SortOrder
    budgetHigh?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type RoomMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    nickname?: SortOrder
    pipelineStageId?: SortOrder
    ownerId?: SortOrder
    budgetLow?: SortOrder
    budgetHigh?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type RoomSumOrderByAggregateInput = {
    budgetLow?: SortOrder
    budgetHigh?: SortOrder
  }

  export type EnumRoomTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomType | EnumRoomTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomTypeWithAggregatesFilter<$PrismaModel> | $Enums.RoomType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoomTypeFilter<$PrismaModel>
    _max?: NestedEnumRoomTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumRoomStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomStatus | EnumRoomStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomStatusWithAggregatesFilter<$PrismaModel> | $Enums.RoomStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoomStatusFilter<$PrismaModel>
    _max?: NestedEnumRoomStatusFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type RoomNullableRelationFilter = {
    is?: RoomWhereInput | null
    isNot?: RoomWhereInput | null
  }

  export type PipelineStageRelationFilter = {
    is?: PipelineStageWhereInput
    isNot?: PipelineStageWhereInput
  }

  export type LeadNullableRelationFilter = {
    is?: LeadWhereInput | null
    isNot?: LeadWhereInput | null
  }

  export type DealCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    stageId?: SortOrder
    ownerId?: SortOrder
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
    source?: SortOrder
    utm?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DealAvgOrderByAggregateInput = {
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
  }

  export type DealMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    stageId?: SortOrder
    ownerId?: SortOrder
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DealMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    stageId?: SortOrder
    ownerId?: SortOrder
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DealSumOrderByAggregateInput = {
    amountGrossIncVat?: SortOrder
    vatRate?: SortOrder
    probability?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type PipelineStageCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    slaHours?: SortOrder
  }

  export type PipelineStageAvgOrderByAggregateInput = {
    order?: SortOrder
    slaHours?: SortOrder
  }

  export type PipelineStageMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    slaHours?: SortOrder
  }

  export type PipelineStageMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    slaHours?: SortOrder
  }

  export type PipelineStageSumOrderByAggregateInput = {
    order?: SortOrder
    slaHours?: SortOrder
  }

  export type EnumActivityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ActivityType | EnumActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumActivityTypeFilter<$PrismaModel> | $Enums.ActivityType
  }

  export type ActivityCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    threadKey?: SortOrder
    summary?: SortOrder
    body?: SortOrder
    attachments?: SortOrder
    durations?: SortOrder
    metadata?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type ActivityMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    threadKey?: SortOrder
    summary?: SortOrder
    body?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type ActivityMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    threadKey?: SortOrder
    summary?: SortOrder
    body?: SortOrder
    occurredAt?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumActivityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ActivityType | EnumActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumActivityTypeWithAggregatesFilter<$PrismaModel> | $Enums.ActivityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumActivityTypeFilter<$PrismaModel>
    _max?: NestedEnumActivityTypeFilter<$PrismaModel>
  }

  export type EnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type TaskCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    assigneeId?: SortOrder
    title?: SortOrder
    dueAt?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    autoGenerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TaskAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type TaskMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    assigneeId?: SortOrder
    title?: SortOrder
    dueAt?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    autoGenerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TaskMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    assigneeId?: SortOrder
    title?: SortOrder
    dueAt?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    autoGenerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TaskSumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type EnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type EnumAppointmentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AppointmentType | EnumAppointmentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAppointmentTypeFilter<$PrismaModel> | $Enums.AppointmentType
  }

  export type AppointmentCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    type?: SortOrder
    start?: SortOrder
    end?: SortOrder
    location?: SortOrder
    participants?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type AppointmentMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    type?: SortOrder
    start?: SortOrder
    end?: SortOrder
    location?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type AppointmentMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    type?: SortOrder
    start?: SortOrder
    end?: SortOrder
    location?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumAppointmentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppointmentType | EnumAppointmentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAppointmentTypeWithAggregatesFilter<$PrismaModel> | $Enums.AppointmentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppointmentTypeFilter<$PrismaModel>
    _max?: NestedEnumAppointmentTypeFilter<$PrismaModel>
  }

  export type EnumDocCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.DocCategory | EnumDocCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumDocCategoryFilter<$PrismaModel> | $Enums.DocCategory
  }

  export type DocumentCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    category?: SortOrder
    url?: SortOrder
    thumbUrl?: SortOrder
    size?: SortOrder
    labels?: SortOrder
    capturedAt?: SortOrder
    capturedBy?: SortOrder
    clientVisible?: SortOrder
    clientWatermark?: SortOrder
    createdAt?: SortOrder
  }

  export type DocumentAvgOrderByAggregateInput = {
    size?: SortOrder
  }

  export type DocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    category?: SortOrder
    url?: SortOrder
    thumbUrl?: SortOrder
    size?: SortOrder
    capturedAt?: SortOrder
    capturedBy?: SortOrder
    clientVisible?: SortOrder
    clientWatermark?: SortOrder
    createdAt?: SortOrder
  }

  export type DocumentMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    category?: SortOrder
    url?: SortOrder
    thumbUrl?: SortOrder
    size?: SortOrder
    capturedAt?: SortOrder
    capturedBy?: SortOrder
    clientVisible?: SortOrder
    clientWatermark?: SortOrder
    createdAt?: SortOrder
  }

  export type DocumentSumOrderByAggregateInput = {
    size?: SortOrder
  }

  export type EnumDocCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocCategory | EnumDocCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumDocCategoryWithAggregatesFilter<$PrismaModel> | $Enums.DocCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocCategoryFilter<$PrismaModel>
    _max?: NestedEnumDocCategoryFilter<$PrismaModel>
  }

  export type RoomRelationFilter = {
    is?: RoomWhereInput
    isNot?: RoomWhereInput
  }

  export type DesignVersionRoomIdVersionCompoundUniqueInput = {
    roomId: string
    version: number
  }

  export type DesignVersionCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    version?: SortOrder
    notes?: SortOrder
    assets?: SortOrder
    finalApproved?: SortOrder
    createdAt?: SortOrder
  }

  export type DesignVersionAvgOrderByAggregateInput = {
    version?: SortOrder
  }

  export type DesignVersionMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    version?: SortOrder
    notes?: SortOrder
    finalApproved?: SortOrder
    createdAt?: SortOrder
  }

  export type DesignVersionMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    version?: SortOrder
    notes?: SortOrder
    finalApproved?: SortOrder
    createdAt?: SortOrder
  }

  export type DesignVersionSumOrderByAggregateInput = {
    version?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type EnumSpecStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SpecStatus | EnumSpecStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSpecStatusFilter<$PrismaModel> | $Enums.SpecStatus
  }

  export type ParsedSpecItemCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    specVersion?: SortOrder
    lineNo?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    finish?: SortOrder
    qty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    note?: SortOrder
    isCritical?: SortOrder
    createdAt?: SortOrder
  }

  export type ParsedSpecItemAvgOrderByAggregateInput = {
    specVersion?: SortOrder
    lineNo?: SortOrder
    qty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type ParsedSpecItemMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    specVersion?: SortOrder
    lineNo?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    finish?: SortOrder
    qty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    note?: SortOrder
    isCritical?: SortOrder
    createdAt?: SortOrder
  }

  export type ParsedSpecItemMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    specVersion?: SortOrder
    lineNo?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    finish?: SortOrder
    qty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    note?: SortOrder
    isCritical?: SortOrder
    createdAt?: SortOrder
  }

  export type ParsedSpecItemSumOrderByAggregateInput = {
    specVersion?: SortOrder
    lineNo?: SortOrder
    qty?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumSpecStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SpecStatus | EnumSpecStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSpecStatusWithAggregatesFilter<$PrismaModel> | $Enums.SpecStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSpecStatusFilter<$PrismaModel>
    _max?: NestedEnumSpecStatusFilter<$PrismaModel>
  }

  export type EnumSnagStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SnagStatus | EnumSnagStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSnagStatusFilter<$PrismaModel> | $Enums.SnagStatus
  }

  export type SnagCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    assigneeId?: SortOrder
    dueAt?: SortOrder
    clientVisible?: SortOrder
    photos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SnagMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    assigneeId?: SortOrder
    dueAt?: SortOrder
    clientVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SnagMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    assigneeId?: SortOrder
    dueAt?: SortOrder
    clientVisible?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumSnagStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SnagStatus | EnumSnagStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSnagStatusWithAggregatesFilter<$PrismaModel> | $Enums.SnagStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSnagStatusFilter<$PrismaModel>
    _max?: NestedEnumSnagStatusFilter<$PrismaModel>
  }

  export type EnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type JobCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type FormSubmissionCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    formType?: SortOrder
    data?: SortOrder
    submittedAt?: SortOrder
  }

  export type FormSubmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    formType?: SortOrder
    submittedAt?: SortOrder
  }

  export type FormSubmissionMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    formType?: SortOrder
    submittedAt?: SortOrder
  }

  export type ClientNullableRelationFilter = {
    is?: ClientWhereInput | null
    isNot?: ClientWhereInput | null
  }

  export type EventLogCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    actorId?: SortOrder
    entity?: SortOrder
    entityId?: SortOrder
    action?: SortOrder
    before?: SortOrder
    after?: SortOrder
    createdAt?: SortOrder
  }

  export type EventLogMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    actorId?: SortOrder
    entity?: SortOrder
    entityId?: SortOrder
    action?: SortOrder
    createdAt?: SortOrder
  }

  export type EventLogMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    roomId?: SortOrder
    actorId?: SortOrder
    entity?: SortOrder
    entityId?: SortOrder
    action?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumLeadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LeadStatus | EnumLeadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLeadStatusFilter<$PrismaModel> | $Enums.LeadStatus
  }

  export type EnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type LeadCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    estimatedValue?: SortOrder
    probability?: SortOrder
    expectedCloseDate?: SortOrder
    source?: SortOrder
    campaign?: SortOrder
    medium?: SortOrder
    firstResponseAt?: SortOrder
    responseTime?: SortOrder
    clientId?: SortOrder
    ownerId?: SortOrder
    dealId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type LeadAvgOrderByAggregateInput = {
    estimatedValue?: SortOrder
    probability?: SortOrder
    responseTime?: SortOrder
  }

  export type LeadMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    estimatedValue?: SortOrder
    probability?: SortOrder
    expectedCloseDate?: SortOrder
    source?: SortOrder
    campaign?: SortOrder
    medium?: SortOrder
    firstResponseAt?: SortOrder
    responseTime?: SortOrder
    clientId?: SortOrder
    ownerId?: SortOrder
    dealId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type LeadMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    estimatedValue?: SortOrder
    probability?: SortOrder
    expectedCloseDate?: SortOrder
    source?: SortOrder
    campaign?: SortOrder
    medium?: SortOrder
    firstResponseAt?: SortOrder
    responseTime?: SortOrder
    clientId?: SortOrder
    ownerId?: SortOrder
    dealId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type LeadSumOrderByAggregateInput = {
    estimatedValue?: SortOrder
    probability?: SortOrder
    responseTime?: SortOrder
  }

  export type EnumLeadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LeadStatus | EnumLeadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLeadStatusWithAggregatesFilter<$PrismaModel> | $Enums.LeadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLeadStatusFilter<$PrismaModel>
    _max?: NestedEnumLeadStatusFilter<$PrismaModel>
  }

  export type EnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type UserCreateNestedOneWithoutCreatedUsersInput = {
    create?: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedUsersInput = {
    create?: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ClientCreateNestedManyWithoutOwnerInput = {
    create?: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput> | ClientCreateWithoutOwnerInput[] | ClientUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutOwnerInput | ClientCreateOrConnectWithoutOwnerInput[]
    createMany?: ClientCreateManyOwnerInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type RoomCreateNestedManyWithoutOwnerInput = {
    create?: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput> | RoomCreateWithoutOwnerInput[] | RoomUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutOwnerInput | RoomCreateOrConnectWithoutOwnerInput[]
    createMany?: RoomCreateManyOwnerInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealCreateNestedManyWithoutOwnerInput = {
    create?: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput> | DealCreateWithoutOwnerInput[] | DealUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: DealCreateOrConnectWithoutOwnerInput | DealCreateOrConnectWithoutOwnerInput[]
    createMany?: DealCreateManyOwnerInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type ActivityCreateNestedManyWithoutUserInput = {
    create?: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput> | ActivityCreateWithoutUserInput[] | ActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutUserInput | ActivityCreateOrConnectWithoutUserInput[]
    createMany?: ActivityCreateManyUserInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type LeadCreateNestedManyWithoutOwnerInput = {
    create?: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput> | LeadCreateWithoutOwnerInput[] | LeadUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutOwnerInput | LeadCreateOrConnectWithoutOwnerInput[]
    createMany?: LeadCreateManyOwnerInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput> | ClientCreateWithoutOwnerInput[] | ClientUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutOwnerInput | ClientCreateOrConnectWithoutOwnerInput[]
    createMany?: ClientCreateManyOwnerInputEnvelope
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
  }

  export type RoomUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput> | RoomCreateWithoutOwnerInput[] | RoomUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutOwnerInput | RoomCreateOrConnectWithoutOwnerInput[]
    createMany?: RoomCreateManyOwnerInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput> | DealCreateWithoutOwnerInput[] | DealUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: DealCreateOrConnectWithoutOwnerInput | DealCreateOrConnectWithoutOwnerInput[]
    createMany?: DealCreateManyOwnerInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type ActivityUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput> | ActivityCreateWithoutUserInput[] | ActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutUserInput | ActivityCreateOrConnectWithoutUserInput[]
    createMany?: ActivityCreateManyUserInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type LeadUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput> | LeadCreateWithoutOwnerInput[] | LeadUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutOwnerInput | LeadCreateOrConnectWithoutOwnerInput[]
    createMany?: LeadCreateManyOwnerInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneWithoutCreatedUsersNestedInput = {
    create?: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUsersInput
    upsert?: UserUpsertWithoutCreatedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedUsersInput, UserUpdateWithoutCreatedUsersInput>, UserUncheckedUpdateWithoutCreatedUsersInput>
  }

  export type UserUpdateOneWithoutUpdatedUsersNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUsersInput
    upsert?: UserUpsertWithoutUpdatedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedUsersInput, UserUpdateWithoutUpdatedUsersInput>, UserUncheckedUpdateWithoutUpdatedUsersInput>
  }

  export type UserUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByInput | UserUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByInput | UserUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByInput | UserUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByInput | UserUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByInput | UserUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByInput | UserUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ClientUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput> | ClientCreateWithoutOwnerInput[] | ClientUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutOwnerInput | ClientCreateOrConnectWithoutOwnerInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutOwnerInput | ClientUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: ClientCreateManyOwnerInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutOwnerInput | ClientUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutOwnerInput | ClientUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type RoomUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput> | RoomCreateWithoutOwnerInput[] | RoomUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutOwnerInput | RoomCreateOrConnectWithoutOwnerInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutOwnerInput | RoomUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: RoomCreateManyOwnerInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutOwnerInput | RoomUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutOwnerInput | RoomUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput> | DealCreateWithoutOwnerInput[] | DealUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: DealCreateOrConnectWithoutOwnerInput | DealCreateOrConnectWithoutOwnerInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutOwnerInput | DealUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: DealCreateManyOwnerInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutOwnerInput | DealUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: DealUpdateManyWithWhereWithoutOwnerInput | DealUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type ActivityUpdateManyWithoutUserNestedInput = {
    create?: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput> | ActivityCreateWithoutUserInput[] | ActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutUserInput | ActivityCreateOrConnectWithoutUserInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutUserInput | ActivityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ActivityCreateManyUserInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutUserInput | ActivityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutUserInput | ActivityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type LeadUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput> | LeadCreateWithoutOwnerInput[] | LeadUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutOwnerInput | LeadCreateOrConnectWithoutOwnerInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutOwnerInput | LeadUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: LeadCreateManyOwnerInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutOwnerInput | LeadUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutOwnerInput | LeadUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByInput | UserUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByInput | UserUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByInput | UserUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByInput | UserUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByInput | UserUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByInput | UserUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ClientUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput> | ClientCreateWithoutOwnerInput[] | ClientUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: ClientCreateOrConnectWithoutOwnerInput | ClientCreateOrConnectWithoutOwnerInput[]
    upsert?: ClientUpsertWithWhereUniqueWithoutOwnerInput | ClientUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: ClientCreateManyOwnerInputEnvelope
    set?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    disconnect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    delete?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    connect?: ClientWhereUniqueInput | ClientWhereUniqueInput[]
    update?: ClientUpdateWithWhereUniqueWithoutOwnerInput | ClientUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: ClientUpdateManyWithWhereWithoutOwnerInput | ClientUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: ClientScalarWhereInput | ClientScalarWhereInput[]
  }

  export type RoomUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput> | RoomCreateWithoutOwnerInput[] | RoomUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutOwnerInput | RoomCreateOrConnectWithoutOwnerInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutOwnerInput | RoomUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: RoomCreateManyOwnerInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutOwnerInput | RoomUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutOwnerInput | RoomUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput> | DealCreateWithoutOwnerInput[] | DealUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: DealCreateOrConnectWithoutOwnerInput | DealCreateOrConnectWithoutOwnerInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutOwnerInput | DealUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: DealCreateManyOwnerInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutOwnerInput | DealUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: DealUpdateManyWithWhereWithoutOwnerInput | DealUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type ActivityUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput> | ActivityCreateWithoutUserInput[] | ActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutUserInput | ActivityCreateOrConnectWithoutUserInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutUserInput | ActivityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ActivityCreateManyUserInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutUserInput | ActivityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutUserInput | ActivityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type LeadUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput> | LeadCreateWithoutOwnerInput[] | LeadUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutOwnerInput | LeadCreateOrConnectWithoutOwnerInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutOwnerInput | LeadUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: LeadCreateManyOwnerInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutOwnerInput | LeadUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutOwnerInput | LeadUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type ClientCreateemailsInput = {
    set: string[]
  }

  export type ClientCreatephonesInput = {
    set: string[]
  }

  export type ClientCreatetagsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutOwnedClientsInput = {
    create?: XOR<UserCreateWithoutOwnedClientsInput, UserUncheckedCreateWithoutOwnedClientsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedClientsInput
    connect?: UserWhereUniqueInput
  }

  export type ContactCreateNestedManyWithoutClientInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type RoomCreateNestedManyWithoutClientInput = {
    create?: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput> | RoomCreateWithoutClientInput[] | RoomUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutClientInput | RoomCreateOrConnectWithoutClientInput[]
    createMany?: RoomCreateManyClientInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealCreateNestedManyWithoutClientInput = {
    create?: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput> | DealCreateWithoutClientInput[] | DealUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DealCreateOrConnectWithoutClientInput | DealCreateOrConnectWithoutClientInput[]
    createMany?: DealCreateManyClientInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type ActivityCreateNestedManyWithoutClientInput = {
    create?: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput> | ActivityCreateWithoutClientInput[] | ActivityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutClientInput | ActivityCreateOrConnectWithoutClientInput[]
    createMany?: ActivityCreateManyClientInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutClientInput = {
    create?: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput> | TaskCreateWithoutClientInput[] | TaskUncheckedCreateWithoutClientInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutClientInput | TaskCreateOrConnectWithoutClientInput[]
    createMany?: TaskCreateManyClientInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type AppointmentCreateNestedManyWithoutClientInput = {
    create?: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput> | AppointmentCreateWithoutClientInput[] | AppointmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutClientInput | AppointmentCreateOrConnectWithoutClientInput[]
    createMany?: AppointmentCreateManyClientInputEnvelope
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutClientInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type SnagCreateNestedManyWithoutClientInput = {
    create?: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput> | SnagCreateWithoutClientInput[] | SnagUncheckedCreateWithoutClientInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutClientInput | SnagCreateOrConnectWithoutClientInput[]
    createMany?: SnagCreateManyClientInputEnvelope
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
  }

  export type JobCreateNestedManyWithoutClientInput = {
    create?: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput> | JobCreateWithoutClientInput[] | JobUncheckedCreateWithoutClientInput[]
    connectOrCreate?: JobCreateOrConnectWithoutClientInput | JobCreateOrConnectWithoutClientInput[]
    createMany?: JobCreateManyClientInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type EventLogCreateNestedManyWithoutClientInput = {
    create?: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput> | EventLogCreateWithoutClientInput[] | EventLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: EventLogCreateOrConnectWithoutClientInput | EventLogCreateOrConnectWithoutClientInput[]
    createMany?: EventLogCreateManyClientInputEnvelope
    connect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
  }

  export type LeadCreateNestedManyWithoutClientInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type RoomUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput> | RoomCreateWithoutClientInput[] | RoomUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutClientInput | RoomCreateOrConnectWithoutClientInput[]
    createMany?: RoomCreateManyClientInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput> | DealCreateWithoutClientInput[] | DealUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DealCreateOrConnectWithoutClientInput | DealCreateOrConnectWithoutClientInput[]
    createMany?: DealCreateManyClientInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type ActivityUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput> | ActivityCreateWithoutClientInput[] | ActivityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutClientInput | ActivityCreateOrConnectWithoutClientInput[]
    createMany?: ActivityCreateManyClientInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput> | TaskCreateWithoutClientInput[] | TaskUncheckedCreateWithoutClientInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutClientInput | TaskCreateOrConnectWithoutClientInput[]
    createMany?: TaskCreateManyClientInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type AppointmentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput> | AppointmentCreateWithoutClientInput[] | AppointmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutClientInput | AppointmentCreateOrConnectWithoutClientInput[]
    createMany?: AppointmentCreateManyClientInputEnvelope
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type SnagUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput> | SnagCreateWithoutClientInput[] | SnagUncheckedCreateWithoutClientInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutClientInput | SnagCreateOrConnectWithoutClientInput[]
    createMany?: SnagCreateManyClientInputEnvelope
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
  }

  export type JobUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput> | JobCreateWithoutClientInput[] | JobUncheckedCreateWithoutClientInput[]
    connectOrCreate?: JobCreateOrConnectWithoutClientInput | JobCreateOrConnectWithoutClientInput[]
    createMany?: JobCreateManyClientInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type EventLogUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput> | EventLogCreateWithoutClientInput[] | EventLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: EventLogCreateOrConnectWithoutClientInput | EventLogCreateOrConnectWithoutClientInput[]
    createMany?: EventLogCreateManyClientInputEnvelope
    connect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
  }

  export type LeadUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
  }

  export type ClientUpdateemailsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ClientUpdatephonesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ClientUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumClientStatusFieldUpdateOperationsInput = {
    set?: $Enums.ClientStatus
  }

  export type UserUpdateOneRequiredWithoutOwnedClientsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedClientsInput, UserUncheckedCreateWithoutOwnedClientsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedClientsInput
    upsert?: UserUpsertWithoutOwnedClientsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedClientsInput, UserUpdateWithoutOwnedClientsInput>, UserUncheckedUpdateWithoutOwnedClientsInput>
  }

  export type ContactUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutClientInput | ContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutClientInput | ContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutClientInput | ContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type RoomUpdateManyWithoutClientNestedInput = {
    create?: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput> | RoomCreateWithoutClientInput[] | RoomUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutClientInput | RoomCreateOrConnectWithoutClientInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutClientInput | RoomUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RoomCreateManyClientInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutClientInput | RoomUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutClientInput | RoomUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUpdateManyWithoutClientNestedInput = {
    create?: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput> | DealCreateWithoutClientInput[] | DealUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DealCreateOrConnectWithoutClientInput | DealCreateOrConnectWithoutClientInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutClientInput | DealUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DealCreateManyClientInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutClientInput | DealUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DealUpdateManyWithWhereWithoutClientInput | DealUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type ActivityUpdateManyWithoutClientNestedInput = {
    create?: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput> | ActivityCreateWithoutClientInput[] | ActivityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutClientInput | ActivityCreateOrConnectWithoutClientInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutClientInput | ActivityUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ActivityCreateManyClientInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutClientInput | ActivityUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutClientInput | ActivityUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutClientNestedInput = {
    create?: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput> | TaskCreateWithoutClientInput[] | TaskUncheckedCreateWithoutClientInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutClientInput | TaskCreateOrConnectWithoutClientInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutClientInput | TaskUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: TaskCreateManyClientInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutClientInput | TaskUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutClientInput | TaskUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type AppointmentUpdateManyWithoutClientNestedInput = {
    create?: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput> | AppointmentCreateWithoutClientInput[] | AppointmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutClientInput | AppointmentCreateOrConnectWithoutClientInput[]
    upsert?: AppointmentUpsertWithWhereUniqueWithoutClientInput | AppointmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: AppointmentCreateManyClientInputEnvelope
    set?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    disconnect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    delete?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    update?: AppointmentUpdateWithWhereUniqueWithoutClientInput | AppointmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: AppointmentUpdateManyWithWhereWithoutClientInput | AppointmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutClientNestedInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutClientInput | DocumentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutClientInput | DocumentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutClientInput | DocumentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type SnagUpdateManyWithoutClientNestedInput = {
    create?: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput> | SnagCreateWithoutClientInput[] | SnagUncheckedCreateWithoutClientInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutClientInput | SnagCreateOrConnectWithoutClientInput[]
    upsert?: SnagUpsertWithWhereUniqueWithoutClientInput | SnagUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: SnagCreateManyClientInputEnvelope
    set?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    disconnect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    delete?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    update?: SnagUpdateWithWhereUniqueWithoutClientInput | SnagUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: SnagUpdateManyWithWhereWithoutClientInput | SnagUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: SnagScalarWhereInput | SnagScalarWhereInput[]
  }

  export type JobUpdateManyWithoutClientNestedInput = {
    create?: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput> | JobCreateWithoutClientInput[] | JobUncheckedCreateWithoutClientInput[]
    connectOrCreate?: JobCreateOrConnectWithoutClientInput | JobCreateOrConnectWithoutClientInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutClientInput | JobUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: JobCreateManyClientInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutClientInput | JobUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: JobUpdateManyWithWhereWithoutClientInput | JobUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type EventLogUpdateManyWithoutClientNestedInput = {
    create?: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput> | EventLogCreateWithoutClientInput[] | EventLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: EventLogCreateOrConnectWithoutClientInput | EventLogCreateOrConnectWithoutClientInput[]
    upsert?: EventLogUpsertWithWhereUniqueWithoutClientInput | EventLogUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: EventLogCreateManyClientInputEnvelope
    set?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    disconnect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    delete?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    connect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    update?: EventLogUpdateWithWhereUniqueWithoutClientInput | EventLogUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: EventLogUpdateManyWithWhereWithoutClientInput | EventLogUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: EventLogScalarWhereInput | EventLogScalarWhereInput[]
  }

  export type LeadUpdateManyWithoutClientNestedInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutClientInput | LeadUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutClientInput | LeadUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutClientInput | LeadUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput> | ContactCreateWithoutClientInput[] | ContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutClientInput | ContactCreateOrConnectWithoutClientInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutClientInput | ContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ContactCreateManyClientInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutClientInput | ContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutClientInput | ContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type RoomUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput> | RoomCreateWithoutClientInput[] | RoomUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutClientInput | RoomCreateOrConnectWithoutClientInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutClientInput | RoomUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RoomCreateManyClientInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutClientInput | RoomUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutClientInput | RoomUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput> | DealCreateWithoutClientInput[] | DealUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DealCreateOrConnectWithoutClientInput | DealCreateOrConnectWithoutClientInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutClientInput | DealUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DealCreateManyClientInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutClientInput | DealUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DealUpdateManyWithWhereWithoutClientInput | DealUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type ActivityUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput> | ActivityCreateWithoutClientInput[] | ActivityUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutClientInput | ActivityCreateOrConnectWithoutClientInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutClientInput | ActivityUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ActivityCreateManyClientInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutClientInput | ActivityUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutClientInput | ActivityUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput> | TaskCreateWithoutClientInput[] | TaskUncheckedCreateWithoutClientInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutClientInput | TaskCreateOrConnectWithoutClientInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutClientInput | TaskUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: TaskCreateManyClientInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutClientInput | TaskUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutClientInput | TaskUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type AppointmentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput> | AppointmentCreateWithoutClientInput[] | AppointmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutClientInput | AppointmentCreateOrConnectWithoutClientInput[]
    upsert?: AppointmentUpsertWithWhereUniqueWithoutClientInput | AppointmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: AppointmentCreateManyClientInputEnvelope
    set?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    disconnect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    delete?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    update?: AppointmentUpdateWithWhereUniqueWithoutClientInput | AppointmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: AppointmentUpdateManyWithWhereWithoutClientInput | AppointmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutClientInput | DocumentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutClientInput | DocumentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutClientInput | DocumentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type SnagUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput> | SnagCreateWithoutClientInput[] | SnagUncheckedCreateWithoutClientInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutClientInput | SnagCreateOrConnectWithoutClientInput[]
    upsert?: SnagUpsertWithWhereUniqueWithoutClientInput | SnagUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: SnagCreateManyClientInputEnvelope
    set?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    disconnect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    delete?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    update?: SnagUpdateWithWhereUniqueWithoutClientInput | SnagUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: SnagUpdateManyWithWhereWithoutClientInput | SnagUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: SnagScalarWhereInput | SnagScalarWhereInput[]
  }

  export type JobUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput> | JobCreateWithoutClientInput[] | JobUncheckedCreateWithoutClientInput[]
    connectOrCreate?: JobCreateOrConnectWithoutClientInput | JobCreateOrConnectWithoutClientInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutClientInput | JobUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: JobCreateManyClientInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutClientInput | JobUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: JobUpdateManyWithWhereWithoutClientInput | JobUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type EventLogUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput> | EventLogCreateWithoutClientInput[] | EventLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: EventLogCreateOrConnectWithoutClientInput | EventLogCreateOrConnectWithoutClientInput[]
    upsert?: EventLogUpsertWithWhereUniqueWithoutClientInput | EventLogUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: EventLogCreateManyClientInputEnvelope
    set?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    disconnect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    delete?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    connect?: EventLogWhereUniqueInput | EventLogWhereUniqueInput[]
    update?: EventLogUpdateWithWhereUniqueWithoutClientInput | EventLogUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: EventLogUpdateManyWithWhereWithoutClientInput | EventLogUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: EventLogScalarWhereInput | EventLogScalarWhereInput[]
  }

  export type LeadUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput> | LeadCreateWithoutClientInput[] | LeadUncheckedCreateWithoutClientInput[]
    connectOrCreate?: LeadCreateOrConnectWithoutClientInput | LeadCreateOrConnectWithoutClientInput[]
    upsert?: LeadUpsertWithWhereUniqueWithoutClientInput | LeadUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: LeadCreateManyClientInputEnvelope
    set?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    disconnect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    delete?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    connect?: LeadWhereUniqueInput | LeadWhereUniqueInput[]
    update?: LeadUpdateWithWhereUniqueWithoutClientInput | LeadUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: LeadUpdateManyWithWhereWithoutClientInput | LeadUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: LeadScalarWhereInput | LeadScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutContactsInput = {
    create?: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContactsInput
    connect?: ClientWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutContactsNestedInput = {
    create?: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutContactsInput
    upsert?: ClientUpsertWithoutContactsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutContactsInput, ClientUpdateWithoutContactsInput>, ClientUncheckedUpdateWithoutContactsInput>
  }

  export type ClientCreateNestedOneWithoutRoomsInput = {
    create?: XOR<ClientCreateWithoutRoomsInput, ClientUncheckedCreateWithoutRoomsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutRoomsInput
    connect?: ClientWhereUniqueInput
  }

  export type PipelineStageCreateNestedOneWithoutRoomsInput = {
    create?: XOR<PipelineStageCreateWithoutRoomsInput, PipelineStageUncheckedCreateWithoutRoomsInput>
    connectOrCreate?: PipelineStageCreateOrConnectWithoutRoomsInput
    connect?: PipelineStageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOwnedRoomsInput = {
    create?: XOR<UserCreateWithoutOwnedRoomsInput, UserUncheckedCreateWithoutOwnedRoomsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedRoomsInput
    connect?: UserWhereUniqueInput
  }

  export type DealCreateNestedOneWithoutRoomInput = {
    create?: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
    connectOrCreate?: DealCreateOrConnectWithoutRoomInput
    connect?: DealWhereUniqueInput
  }

  export type ActivityCreateNestedManyWithoutRoomInput = {
    create?: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput> | ActivityCreateWithoutRoomInput[] | ActivityUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutRoomInput | ActivityCreateOrConnectWithoutRoomInput[]
    createMany?: ActivityCreateManyRoomInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutRoomInput = {
    create?: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput> | TaskCreateWithoutRoomInput[] | TaskUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutRoomInput | TaskCreateOrConnectWithoutRoomInput[]
    createMany?: TaskCreateManyRoomInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type AppointmentCreateNestedManyWithoutRoomInput = {
    create?: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput> | AppointmentCreateWithoutRoomInput[] | AppointmentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutRoomInput | AppointmentCreateOrConnectWithoutRoomInput[]
    createMany?: AppointmentCreateManyRoomInputEnvelope
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutRoomInput = {
    create?: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput> | DocumentCreateWithoutRoomInput[] | DocumentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutRoomInput | DocumentCreateOrConnectWithoutRoomInput[]
    createMany?: DocumentCreateManyRoomInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type DesignVersionCreateNestedManyWithoutRoomInput = {
    create?: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput> | DesignVersionCreateWithoutRoomInput[] | DesignVersionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DesignVersionCreateOrConnectWithoutRoomInput | DesignVersionCreateOrConnectWithoutRoomInput[]
    createMany?: DesignVersionCreateManyRoomInputEnvelope
    connect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
  }

  export type ParsedSpecItemCreateNestedManyWithoutRoomInput = {
    create?: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput> | ParsedSpecItemCreateWithoutRoomInput[] | ParsedSpecItemUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ParsedSpecItemCreateOrConnectWithoutRoomInput | ParsedSpecItemCreateOrConnectWithoutRoomInput[]
    createMany?: ParsedSpecItemCreateManyRoomInputEnvelope
    connect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
  }

  export type FormSubmissionCreateNestedManyWithoutRoomInput = {
    create?: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput> | FormSubmissionCreateWithoutRoomInput[] | FormSubmissionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: FormSubmissionCreateOrConnectWithoutRoomInput | FormSubmissionCreateOrConnectWithoutRoomInput[]
    createMany?: FormSubmissionCreateManyRoomInputEnvelope
    connect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
  }

  export type JobCreateNestedManyWithoutRoomInput = {
    create?: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput> | JobCreateWithoutRoomInput[] | JobUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: JobCreateOrConnectWithoutRoomInput | JobCreateOrConnectWithoutRoomInput[]
    createMany?: JobCreateManyRoomInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type SnagCreateNestedManyWithoutRoomInput = {
    create?: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput> | SnagCreateWithoutRoomInput[] | SnagUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutRoomInput | SnagCreateOrConnectWithoutRoomInput[]
    createMany?: SnagCreateManyRoomInputEnvelope
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
  }

  export type DealUncheckedCreateNestedOneWithoutRoomInput = {
    create?: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
    connectOrCreate?: DealCreateOrConnectWithoutRoomInput
    connect?: DealWhereUniqueInput
  }

  export type ActivityUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput> | ActivityCreateWithoutRoomInput[] | ActivityUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutRoomInput | ActivityCreateOrConnectWithoutRoomInput[]
    createMany?: ActivityCreateManyRoomInputEnvelope
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput> | TaskCreateWithoutRoomInput[] | TaskUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutRoomInput | TaskCreateOrConnectWithoutRoomInput[]
    createMany?: TaskCreateManyRoomInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type AppointmentUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput> | AppointmentCreateWithoutRoomInput[] | AppointmentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutRoomInput | AppointmentCreateOrConnectWithoutRoomInput[]
    createMany?: AppointmentCreateManyRoomInputEnvelope
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput> | DocumentCreateWithoutRoomInput[] | DocumentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutRoomInput | DocumentCreateOrConnectWithoutRoomInput[]
    createMany?: DocumentCreateManyRoomInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type DesignVersionUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput> | DesignVersionCreateWithoutRoomInput[] | DesignVersionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DesignVersionCreateOrConnectWithoutRoomInput | DesignVersionCreateOrConnectWithoutRoomInput[]
    createMany?: DesignVersionCreateManyRoomInputEnvelope
    connect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
  }

  export type ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput> | ParsedSpecItemCreateWithoutRoomInput[] | ParsedSpecItemUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ParsedSpecItemCreateOrConnectWithoutRoomInput | ParsedSpecItemCreateOrConnectWithoutRoomInput[]
    createMany?: ParsedSpecItemCreateManyRoomInputEnvelope
    connect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
  }

  export type FormSubmissionUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput> | FormSubmissionCreateWithoutRoomInput[] | FormSubmissionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: FormSubmissionCreateOrConnectWithoutRoomInput | FormSubmissionCreateOrConnectWithoutRoomInput[]
    createMany?: FormSubmissionCreateManyRoomInputEnvelope
    connect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
  }

  export type JobUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput> | JobCreateWithoutRoomInput[] | JobUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: JobCreateOrConnectWithoutRoomInput | JobCreateOrConnectWithoutRoomInput[]
    createMany?: JobCreateManyRoomInputEnvelope
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
  }

  export type SnagUncheckedCreateNestedManyWithoutRoomInput = {
    create?: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput> | SnagCreateWithoutRoomInput[] | SnagUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutRoomInput | SnagCreateOrConnectWithoutRoomInput[]
    createMany?: SnagCreateManyRoomInputEnvelope
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
  }

  export type EnumRoomTypeFieldUpdateOperationsInput = {
    set?: $Enums.RoomType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumRoomStatusFieldUpdateOperationsInput = {
    set?: $Enums.RoomStatus
  }

  export type ClientUpdateOneRequiredWithoutRoomsNestedInput = {
    create?: XOR<ClientCreateWithoutRoomsInput, ClientUncheckedCreateWithoutRoomsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutRoomsInput
    upsert?: ClientUpsertWithoutRoomsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutRoomsInput, ClientUpdateWithoutRoomsInput>, ClientUncheckedUpdateWithoutRoomsInput>
  }

  export type PipelineStageUpdateOneWithoutRoomsNestedInput = {
    create?: XOR<PipelineStageCreateWithoutRoomsInput, PipelineStageUncheckedCreateWithoutRoomsInput>
    connectOrCreate?: PipelineStageCreateOrConnectWithoutRoomsInput
    upsert?: PipelineStageUpsertWithoutRoomsInput
    disconnect?: PipelineStageWhereInput | boolean
    delete?: PipelineStageWhereInput | boolean
    connect?: PipelineStageWhereUniqueInput
    update?: XOR<XOR<PipelineStageUpdateToOneWithWhereWithoutRoomsInput, PipelineStageUpdateWithoutRoomsInput>, PipelineStageUncheckedUpdateWithoutRoomsInput>
  }

  export type UserUpdateOneWithoutOwnedRoomsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedRoomsInput, UserUncheckedCreateWithoutOwnedRoomsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedRoomsInput
    upsert?: UserUpsertWithoutOwnedRoomsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedRoomsInput, UserUpdateWithoutOwnedRoomsInput>, UserUncheckedUpdateWithoutOwnedRoomsInput>
  }

  export type DealUpdateOneWithoutRoomNestedInput = {
    create?: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
    connectOrCreate?: DealCreateOrConnectWithoutRoomInput
    upsert?: DealUpsertWithoutRoomInput
    disconnect?: DealWhereInput | boolean
    delete?: DealWhereInput | boolean
    connect?: DealWhereUniqueInput
    update?: XOR<XOR<DealUpdateToOneWithWhereWithoutRoomInput, DealUpdateWithoutRoomInput>, DealUncheckedUpdateWithoutRoomInput>
  }

  export type ActivityUpdateManyWithoutRoomNestedInput = {
    create?: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput> | ActivityCreateWithoutRoomInput[] | ActivityUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutRoomInput | ActivityCreateOrConnectWithoutRoomInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutRoomInput | ActivityUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: ActivityCreateManyRoomInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutRoomInput | ActivityUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutRoomInput | ActivityUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutRoomNestedInput = {
    create?: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput> | TaskCreateWithoutRoomInput[] | TaskUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutRoomInput | TaskCreateOrConnectWithoutRoomInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutRoomInput | TaskUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: TaskCreateManyRoomInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutRoomInput | TaskUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutRoomInput | TaskUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type AppointmentUpdateManyWithoutRoomNestedInput = {
    create?: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput> | AppointmentCreateWithoutRoomInput[] | AppointmentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutRoomInput | AppointmentCreateOrConnectWithoutRoomInput[]
    upsert?: AppointmentUpsertWithWhereUniqueWithoutRoomInput | AppointmentUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: AppointmentCreateManyRoomInputEnvelope
    set?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    disconnect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    delete?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    update?: AppointmentUpdateWithWhereUniqueWithoutRoomInput | AppointmentUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: AppointmentUpdateManyWithWhereWithoutRoomInput | AppointmentUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutRoomNestedInput = {
    create?: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput> | DocumentCreateWithoutRoomInput[] | DocumentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutRoomInput | DocumentCreateOrConnectWithoutRoomInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutRoomInput | DocumentUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: DocumentCreateManyRoomInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutRoomInput | DocumentUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutRoomInput | DocumentUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type DesignVersionUpdateManyWithoutRoomNestedInput = {
    create?: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput> | DesignVersionCreateWithoutRoomInput[] | DesignVersionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DesignVersionCreateOrConnectWithoutRoomInput | DesignVersionCreateOrConnectWithoutRoomInput[]
    upsert?: DesignVersionUpsertWithWhereUniqueWithoutRoomInput | DesignVersionUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: DesignVersionCreateManyRoomInputEnvelope
    set?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    disconnect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    delete?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    connect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    update?: DesignVersionUpdateWithWhereUniqueWithoutRoomInput | DesignVersionUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: DesignVersionUpdateManyWithWhereWithoutRoomInput | DesignVersionUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: DesignVersionScalarWhereInput | DesignVersionScalarWhereInput[]
  }

  export type ParsedSpecItemUpdateManyWithoutRoomNestedInput = {
    create?: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput> | ParsedSpecItemCreateWithoutRoomInput[] | ParsedSpecItemUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ParsedSpecItemCreateOrConnectWithoutRoomInput | ParsedSpecItemCreateOrConnectWithoutRoomInput[]
    upsert?: ParsedSpecItemUpsertWithWhereUniqueWithoutRoomInput | ParsedSpecItemUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: ParsedSpecItemCreateManyRoomInputEnvelope
    set?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    disconnect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    delete?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    connect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    update?: ParsedSpecItemUpdateWithWhereUniqueWithoutRoomInput | ParsedSpecItemUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: ParsedSpecItemUpdateManyWithWhereWithoutRoomInput | ParsedSpecItemUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: ParsedSpecItemScalarWhereInput | ParsedSpecItemScalarWhereInput[]
  }

  export type FormSubmissionUpdateManyWithoutRoomNestedInput = {
    create?: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput> | FormSubmissionCreateWithoutRoomInput[] | FormSubmissionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: FormSubmissionCreateOrConnectWithoutRoomInput | FormSubmissionCreateOrConnectWithoutRoomInput[]
    upsert?: FormSubmissionUpsertWithWhereUniqueWithoutRoomInput | FormSubmissionUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: FormSubmissionCreateManyRoomInputEnvelope
    set?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    disconnect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    delete?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    connect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    update?: FormSubmissionUpdateWithWhereUniqueWithoutRoomInput | FormSubmissionUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: FormSubmissionUpdateManyWithWhereWithoutRoomInput | FormSubmissionUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: FormSubmissionScalarWhereInput | FormSubmissionScalarWhereInput[]
  }

  export type JobUpdateManyWithoutRoomNestedInput = {
    create?: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput> | JobCreateWithoutRoomInput[] | JobUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: JobCreateOrConnectWithoutRoomInput | JobCreateOrConnectWithoutRoomInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutRoomInput | JobUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: JobCreateManyRoomInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutRoomInput | JobUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: JobUpdateManyWithWhereWithoutRoomInput | JobUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type SnagUpdateManyWithoutRoomNestedInput = {
    create?: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput> | SnagCreateWithoutRoomInput[] | SnagUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutRoomInput | SnagCreateOrConnectWithoutRoomInput[]
    upsert?: SnagUpsertWithWhereUniqueWithoutRoomInput | SnagUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: SnagCreateManyRoomInputEnvelope
    set?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    disconnect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    delete?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    update?: SnagUpdateWithWhereUniqueWithoutRoomInput | SnagUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: SnagUpdateManyWithWhereWithoutRoomInput | SnagUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: SnagScalarWhereInput | SnagScalarWhereInput[]
  }

  export type DealUncheckedUpdateOneWithoutRoomNestedInput = {
    create?: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
    connectOrCreate?: DealCreateOrConnectWithoutRoomInput
    upsert?: DealUpsertWithoutRoomInput
    disconnect?: DealWhereInput | boolean
    delete?: DealWhereInput | boolean
    connect?: DealWhereUniqueInput
    update?: XOR<XOR<DealUpdateToOneWithWhereWithoutRoomInput, DealUpdateWithoutRoomInput>, DealUncheckedUpdateWithoutRoomInput>
  }

  export type ActivityUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput> | ActivityCreateWithoutRoomInput[] | ActivityUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ActivityCreateOrConnectWithoutRoomInput | ActivityCreateOrConnectWithoutRoomInput[]
    upsert?: ActivityUpsertWithWhereUniqueWithoutRoomInput | ActivityUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: ActivityCreateManyRoomInputEnvelope
    set?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    disconnect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    delete?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    connect?: ActivityWhereUniqueInput | ActivityWhereUniqueInput[]
    update?: ActivityUpdateWithWhereUniqueWithoutRoomInput | ActivityUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: ActivityUpdateManyWithWhereWithoutRoomInput | ActivityUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput> | TaskCreateWithoutRoomInput[] | TaskUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutRoomInput | TaskCreateOrConnectWithoutRoomInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutRoomInput | TaskUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: TaskCreateManyRoomInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutRoomInput | TaskUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutRoomInput | TaskUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type AppointmentUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput> | AppointmentCreateWithoutRoomInput[] | AppointmentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: AppointmentCreateOrConnectWithoutRoomInput | AppointmentCreateOrConnectWithoutRoomInput[]
    upsert?: AppointmentUpsertWithWhereUniqueWithoutRoomInput | AppointmentUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: AppointmentCreateManyRoomInputEnvelope
    set?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    disconnect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    delete?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    connect?: AppointmentWhereUniqueInput | AppointmentWhereUniqueInput[]
    update?: AppointmentUpdateWithWhereUniqueWithoutRoomInput | AppointmentUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: AppointmentUpdateManyWithWhereWithoutRoomInput | AppointmentUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput> | DocumentCreateWithoutRoomInput[] | DocumentUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutRoomInput | DocumentCreateOrConnectWithoutRoomInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutRoomInput | DocumentUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: DocumentCreateManyRoomInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutRoomInput | DocumentUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutRoomInput | DocumentUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type DesignVersionUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput> | DesignVersionCreateWithoutRoomInput[] | DesignVersionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: DesignVersionCreateOrConnectWithoutRoomInput | DesignVersionCreateOrConnectWithoutRoomInput[]
    upsert?: DesignVersionUpsertWithWhereUniqueWithoutRoomInput | DesignVersionUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: DesignVersionCreateManyRoomInputEnvelope
    set?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    disconnect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    delete?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    connect?: DesignVersionWhereUniqueInput | DesignVersionWhereUniqueInput[]
    update?: DesignVersionUpdateWithWhereUniqueWithoutRoomInput | DesignVersionUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: DesignVersionUpdateManyWithWhereWithoutRoomInput | DesignVersionUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: DesignVersionScalarWhereInput | DesignVersionScalarWhereInput[]
  }

  export type ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput> | ParsedSpecItemCreateWithoutRoomInput[] | ParsedSpecItemUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: ParsedSpecItemCreateOrConnectWithoutRoomInput | ParsedSpecItemCreateOrConnectWithoutRoomInput[]
    upsert?: ParsedSpecItemUpsertWithWhereUniqueWithoutRoomInput | ParsedSpecItemUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: ParsedSpecItemCreateManyRoomInputEnvelope
    set?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    disconnect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    delete?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    connect?: ParsedSpecItemWhereUniqueInput | ParsedSpecItemWhereUniqueInput[]
    update?: ParsedSpecItemUpdateWithWhereUniqueWithoutRoomInput | ParsedSpecItemUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: ParsedSpecItemUpdateManyWithWhereWithoutRoomInput | ParsedSpecItemUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: ParsedSpecItemScalarWhereInput | ParsedSpecItemScalarWhereInput[]
  }

  export type FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput> | FormSubmissionCreateWithoutRoomInput[] | FormSubmissionUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: FormSubmissionCreateOrConnectWithoutRoomInput | FormSubmissionCreateOrConnectWithoutRoomInput[]
    upsert?: FormSubmissionUpsertWithWhereUniqueWithoutRoomInput | FormSubmissionUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: FormSubmissionCreateManyRoomInputEnvelope
    set?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    disconnect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    delete?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    connect?: FormSubmissionWhereUniqueInput | FormSubmissionWhereUniqueInput[]
    update?: FormSubmissionUpdateWithWhereUniqueWithoutRoomInput | FormSubmissionUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: FormSubmissionUpdateManyWithWhereWithoutRoomInput | FormSubmissionUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: FormSubmissionScalarWhereInput | FormSubmissionScalarWhereInput[]
  }

  export type JobUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput> | JobCreateWithoutRoomInput[] | JobUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: JobCreateOrConnectWithoutRoomInput | JobCreateOrConnectWithoutRoomInput[]
    upsert?: JobUpsertWithWhereUniqueWithoutRoomInput | JobUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: JobCreateManyRoomInputEnvelope
    set?: JobWhereUniqueInput | JobWhereUniqueInput[]
    disconnect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    delete?: JobWhereUniqueInput | JobWhereUniqueInput[]
    connect?: JobWhereUniqueInput | JobWhereUniqueInput[]
    update?: JobUpdateWithWhereUniqueWithoutRoomInput | JobUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: JobUpdateManyWithWhereWithoutRoomInput | JobUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: JobScalarWhereInput | JobScalarWhereInput[]
  }

  export type SnagUncheckedUpdateManyWithoutRoomNestedInput = {
    create?: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput> | SnagCreateWithoutRoomInput[] | SnagUncheckedCreateWithoutRoomInput[]
    connectOrCreate?: SnagCreateOrConnectWithoutRoomInput | SnagCreateOrConnectWithoutRoomInput[]
    upsert?: SnagUpsertWithWhereUniqueWithoutRoomInput | SnagUpsertWithWhereUniqueWithoutRoomInput[]
    createMany?: SnagCreateManyRoomInputEnvelope
    set?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    disconnect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    delete?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    connect?: SnagWhereUniqueInput | SnagWhereUniqueInput[]
    update?: SnagUpdateWithWhereUniqueWithoutRoomInput | SnagUpdateWithWhereUniqueWithoutRoomInput[]
    updateMany?: SnagUpdateManyWithWhereWithoutRoomInput | SnagUpdateManyWithWhereWithoutRoomInput[]
    deleteMany?: SnagScalarWhereInput | SnagScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutDealsInput = {
    create?: XOR<ClientCreateWithoutDealsInput, ClientUncheckedCreateWithoutDealsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutDealsInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutDealInput = {
    create?: XOR<RoomCreateWithoutDealInput, RoomUncheckedCreateWithoutDealInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDealInput
    connect?: RoomWhereUniqueInput
  }

  export type PipelineStageCreateNestedOneWithoutDealsInput = {
    create?: XOR<PipelineStageCreateWithoutDealsInput, PipelineStageUncheckedCreateWithoutDealsInput>
    connectOrCreate?: PipelineStageCreateOrConnectWithoutDealsInput
    connect?: PipelineStageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOwnedDealsInput = {
    create?: XOR<UserCreateWithoutOwnedDealsInput, UserUncheckedCreateWithoutOwnedDealsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedDealsInput
    connect?: UserWhereUniqueInput
  }

  export type LeadCreateNestedOneWithoutDealInput = {
    create?: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
    connectOrCreate?: LeadCreateOrConnectWithoutDealInput
    connect?: LeadWhereUniqueInput
  }

  export type LeadUncheckedCreateNestedOneWithoutDealInput = {
    create?: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
    connectOrCreate?: LeadCreateOrConnectWithoutDealInput
    connect?: LeadWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClientUpdateOneRequiredWithoutDealsNestedInput = {
    create?: XOR<ClientCreateWithoutDealsInput, ClientUncheckedCreateWithoutDealsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutDealsInput
    upsert?: ClientUpsertWithoutDealsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutDealsInput, ClientUpdateWithoutDealsInput>, ClientUncheckedUpdateWithoutDealsInput>
  }

  export type RoomUpdateOneWithoutDealNestedInput = {
    create?: XOR<RoomCreateWithoutDealInput, RoomUncheckedCreateWithoutDealInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDealInput
    upsert?: RoomUpsertWithoutDealInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutDealInput, RoomUpdateWithoutDealInput>, RoomUncheckedUpdateWithoutDealInput>
  }

  export type PipelineStageUpdateOneRequiredWithoutDealsNestedInput = {
    create?: XOR<PipelineStageCreateWithoutDealsInput, PipelineStageUncheckedCreateWithoutDealsInput>
    connectOrCreate?: PipelineStageCreateOrConnectWithoutDealsInput
    upsert?: PipelineStageUpsertWithoutDealsInput
    connect?: PipelineStageWhereUniqueInput
    update?: XOR<XOR<PipelineStageUpdateToOneWithWhereWithoutDealsInput, PipelineStageUpdateWithoutDealsInput>, PipelineStageUncheckedUpdateWithoutDealsInput>
  }

  export type UserUpdateOneRequiredWithoutOwnedDealsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedDealsInput, UserUncheckedCreateWithoutOwnedDealsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedDealsInput
    upsert?: UserUpsertWithoutOwnedDealsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedDealsInput, UserUpdateWithoutOwnedDealsInput>, UserUncheckedUpdateWithoutOwnedDealsInput>
  }

  export type LeadUpdateOneWithoutDealNestedInput = {
    create?: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
    connectOrCreate?: LeadCreateOrConnectWithoutDealInput
    upsert?: LeadUpsertWithoutDealInput
    disconnect?: LeadWhereInput | boolean
    delete?: LeadWhereInput | boolean
    connect?: LeadWhereUniqueInput
    update?: XOR<XOR<LeadUpdateToOneWithWhereWithoutDealInput, LeadUpdateWithoutDealInput>, LeadUncheckedUpdateWithoutDealInput>
  }

  export type LeadUncheckedUpdateOneWithoutDealNestedInput = {
    create?: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
    connectOrCreate?: LeadCreateOrConnectWithoutDealInput
    upsert?: LeadUpsertWithoutDealInput
    disconnect?: LeadWhereInput | boolean
    delete?: LeadWhereInput | boolean
    connect?: LeadWhereUniqueInput
    update?: XOR<XOR<LeadUpdateToOneWithWhereWithoutDealInput, LeadUpdateWithoutDealInput>, LeadUncheckedUpdateWithoutDealInput>
  }

  export type RoomCreateNestedManyWithoutStageInput = {
    create?: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput> | RoomCreateWithoutStageInput[] | RoomUncheckedCreateWithoutStageInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutStageInput | RoomCreateOrConnectWithoutStageInput[]
    createMany?: RoomCreateManyStageInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealCreateNestedManyWithoutStageInput = {
    create?: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput> | DealCreateWithoutStageInput[] | DealUncheckedCreateWithoutStageInput[]
    connectOrCreate?: DealCreateOrConnectWithoutStageInput | DealCreateOrConnectWithoutStageInput[]
    createMany?: DealCreateManyStageInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type RoomUncheckedCreateNestedManyWithoutStageInput = {
    create?: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput> | RoomCreateWithoutStageInput[] | RoomUncheckedCreateWithoutStageInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutStageInput | RoomCreateOrConnectWithoutStageInput[]
    createMany?: RoomCreateManyStageInputEnvelope
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
  }

  export type DealUncheckedCreateNestedManyWithoutStageInput = {
    create?: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput> | DealCreateWithoutStageInput[] | DealUncheckedCreateWithoutStageInput[]
    connectOrCreate?: DealCreateOrConnectWithoutStageInput | DealCreateOrConnectWithoutStageInput[]
    createMany?: DealCreateManyStageInputEnvelope
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
  }

  export type RoomUpdateManyWithoutStageNestedInput = {
    create?: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput> | RoomCreateWithoutStageInput[] | RoomUncheckedCreateWithoutStageInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutStageInput | RoomCreateOrConnectWithoutStageInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutStageInput | RoomUpsertWithWhereUniqueWithoutStageInput[]
    createMany?: RoomCreateManyStageInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutStageInput | RoomUpdateWithWhereUniqueWithoutStageInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutStageInput | RoomUpdateManyWithWhereWithoutStageInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUpdateManyWithoutStageNestedInput = {
    create?: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput> | DealCreateWithoutStageInput[] | DealUncheckedCreateWithoutStageInput[]
    connectOrCreate?: DealCreateOrConnectWithoutStageInput | DealCreateOrConnectWithoutStageInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutStageInput | DealUpsertWithWhereUniqueWithoutStageInput[]
    createMany?: DealCreateManyStageInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutStageInput | DealUpdateWithWhereUniqueWithoutStageInput[]
    updateMany?: DealUpdateManyWithWhereWithoutStageInput | DealUpdateManyWithWhereWithoutStageInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type RoomUncheckedUpdateManyWithoutStageNestedInput = {
    create?: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput> | RoomCreateWithoutStageInput[] | RoomUncheckedCreateWithoutStageInput[]
    connectOrCreate?: RoomCreateOrConnectWithoutStageInput | RoomCreateOrConnectWithoutStageInput[]
    upsert?: RoomUpsertWithWhereUniqueWithoutStageInput | RoomUpsertWithWhereUniqueWithoutStageInput[]
    createMany?: RoomCreateManyStageInputEnvelope
    set?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    disconnect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    delete?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    connect?: RoomWhereUniqueInput | RoomWhereUniqueInput[]
    update?: RoomUpdateWithWhereUniqueWithoutStageInput | RoomUpdateWithWhereUniqueWithoutStageInput[]
    updateMany?: RoomUpdateManyWithWhereWithoutStageInput | RoomUpdateManyWithWhereWithoutStageInput[]
    deleteMany?: RoomScalarWhereInput | RoomScalarWhereInput[]
  }

  export type DealUncheckedUpdateManyWithoutStageNestedInput = {
    create?: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput> | DealCreateWithoutStageInput[] | DealUncheckedCreateWithoutStageInput[]
    connectOrCreate?: DealCreateOrConnectWithoutStageInput | DealCreateOrConnectWithoutStageInput[]
    upsert?: DealUpsertWithWhereUniqueWithoutStageInput | DealUpsertWithWhereUniqueWithoutStageInput[]
    createMany?: DealCreateManyStageInputEnvelope
    set?: DealWhereUniqueInput | DealWhereUniqueInput[]
    disconnect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    delete?: DealWhereUniqueInput | DealWhereUniqueInput[]
    connect?: DealWhereUniqueInput | DealWhereUniqueInput[]
    update?: DealUpdateWithWhereUniqueWithoutStageInput | DealUpdateWithWhereUniqueWithoutStageInput[]
    updateMany?: DealUpdateManyWithWhereWithoutStageInput | DealUpdateManyWithWhereWithoutStageInput[]
    deleteMany?: DealScalarWhereInput | DealScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<ClientCreateWithoutActivitiesInput, ClientUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutActivitiesInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<RoomCreateWithoutActivitiesInput, RoomUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: RoomCreateOrConnectWithoutActivitiesInput
    connect?: RoomWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivitiesInput
    connect?: UserWhereUniqueInput
  }

  export type EnumActivityTypeFieldUpdateOperationsInput = {
    set?: $Enums.ActivityType
  }

  export type ClientUpdateOneRequiredWithoutActivitiesNestedInput = {
    create?: XOR<ClientCreateWithoutActivitiesInput, ClientUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutActivitiesInput
    upsert?: ClientUpsertWithoutActivitiesInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutActivitiesInput, ClientUpdateWithoutActivitiesInput>, ClientUncheckedUpdateWithoutActivitiesInput>
  }

  export type RoomUpdateOneWithoutActivitiesNestedInput = {
    create?: XOR<RoomCreateWithoutActivitiesInput, RoomUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: RoomCreateOrConnectWithoutActivitiesInput
    upsert?: RoomUpsertWithoutActivitiesInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutActivitiesInput, RoomUpdateWithoutActivitiesInput>, RoomUncheckedUpdateWithoutActivitiesInput>
  }

  export type UserUpdateOneWithoutActivitiesNestedInput = {
    create?: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivitiesInput
    upsert?: UserUpsertWithoutActivitiesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutActivitiesInput, UserUpdateWithoutActivitiesInput>, UserUncheckedUpdateWithoutActivitiesInput>
  }

  export type ClientCreateNestedOneWithoutTasksInput = {
    create?: XOR<ClientCreateWithoutTasksInput, ClientUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ClientCreateOrConnectWithoutTasksInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutTasksInput = {
    create?: XOR<RoomCreateWithoutTasksInput, RoomUncheckedCreateWithoutTasksInput>
    connectOrCreate?: RoomCreateOrConnectWithoutTasksInput
    connect?: RoomWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAssignedTasksInput = {
    create?: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedTasksInput
    connect?: UserWhereUniqueInput
  }

  export type EnumTaskStatusFieldUpdateOperationsInput = {
    set?: $Enums.TaskStatus
  }

  export type ClientUpdateOneRequiredWithoutTasksNestedInput = {
    create?: XOR<ClientCreateWithoutTasksInput, ClientUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ClientCreateOrConnectWithoutTasksInput
    upsert?: ClientUpsertWithoutTasksInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutTasksInput, ClientUpdateWithoutTasksInput>, ClientUncheckedUpdateWithoutTasksInput>
  }

  export type RoomUpdateOneWithoutTasksNestedInput = {
    create?: XOR<RoomCreateWithoutTasksInput, RoomUncheckedCreateWithoutTasksInput>
    connectOrCreate?: RoomCreateOrConnectWithoutTasksInput
    upsert?: RoomUpsertWithoutTasksInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutTasksInput, RoomUpdateWithoutTasksInput>, RoomUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateOneWithoutAssignedTasksNestedInput = {
    create?: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedTasksInput
    upsert?: UserUpsertWithoutAssignedTasksInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedTasksInput, UserUpdateWithoutAssignedTasksInput>, UserUncheckedUpdateWithoutAssignedTasksInput>
  }

  export type ClientCreateNestedOneWithoutAppointmentsInput = {
    create?: XOR<ClientCreateWithoutAppointmentsInput, ClientUncheckedCreateWithoutAppointmentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAppointmentsInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutAppointmentsInput = {
    create?: XOR<RoomCreateWithoutAppointmentsInput, RoomUncheckedCreateWithoutAppointmentsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutAppointmentsInput
    connect?: RoomWhereUniqueInput
  }

  export type EnumAppointmentTypeFieldUpdateOperationsInput = {
    set?: $Enums.AppointmentType
  }

  export type ClientUpdateOneRequiredWithoutAppointmentsNestedInput = {
    create?: XOR<ClientCreateWithoutAppointmentsInput, ClientUncheckedCreateWithoutAppointmentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutAppointmentsInput
    upsert?: ClientUpsertWithoutAppointmentsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutAppointmentsInput, ClientUpdateWithoutAppointmentsInput>, ClientUncheckedUpdateWithoutAppointmentsInput>
  }

  export type RoomUpdateOneWithoutAppointmentsNestedInput = {
    create?: XOR<RoomCreateWithoutAppointmentsInput, RoomUncheckedCreateWithoutAppointmentsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutAppointmentsInput
    upsert?: RoomUpsertWithoutAppointmentsInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutAppointmentsInput, RoomUpdateWithoutAppointmentsInput>, RoomUncheckedUpdateWithoutAppointmentsInput>
  }

  export type DocumentCreatelabelsInput = {
    set: string[]
  }

  export type ClientCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<ClientCreateWithoutDocumentsInput, ClientUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutDocumentsInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<RoomCreateWithoutDocumentsInput, RoomUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDocumentsInput
    connect?: RoomWhereUniqueInput
  }

  export type EnumDocCategoryFieldUpdateOperationsInput = {
    set?: $Enums.DocCategory
  }

  export type DocumentUpdatelabelsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ClientUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<ClientCreateWithoutDocumentsInput, ClientUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutDocumentsInput
    upsert?: ClientUpsertWithoutDocumentsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutDocumentsInput, ClientUpdateWithoutDocumentsInput>, ClientUncheckedUpdateWithoutDocumentsInput>
  }

  export type RoomUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<RoomCreateWithoutDocumentsInput, RoomUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDocumentsInput
    upsert?: RoomUpsertWithoutDocumentsInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutDocumentsInput, RoomUpdateWithoutDocumentsInput>, RoomUncheckedUpdateWithoutDocumentsInput>
  }

  export type RoomCreateNestedOneWithoutDesignVersionsInput = {
    create?: XOR<RoomCreateWithoutDesignVersionsInput, RoomUncheckedCreateWithoutDesignVersionsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDesignVersionsInput
    connect?: RoomWhereUniqueInput
  }

  export type RoomUpdateOneRequiredWithoutDesignVersionsNestedInput = {
    create?: XOR<RoomCreateWithoutDesignVersionsInput, RoomUncheckedCreateWithoutDesignVersionsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutDesignVersionsInput
    upsert?: RoomUpsertWithoutDesignVersionsInput
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutDesignVersionsInput, RoomUpdateWithoutDesignVersionsInput>, RoomUncheckedUpdateWithoutDesignVersionsInput>
  }

  export type RoomCreateNestedOneWithoutParsedSpecItemsInput = {
    create?: XOR<RoomCreateWithoutParsedSpecItemsInput, RoomUncheckedCreateWithoutParsedSpecItemsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutParsedSpecItemsInput
    connect?: RoomWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumSpecStatusFieldUpdateOperationsInput = {
    set?: $Enums.SpecStatus
  }

  export type RoomUpdateOneRequiredWithoutParsedSpecItemsNestedInput = {
    create?: XOR<RoomCreateWithoutParsedSpecItemsInput, RoomUncheckedCreateWithoutParsedSpecItemsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutParsedSpecItemsInput
    upsert?: RoomUpsertWithoutParsedSpecItemsInput
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutParsedSpecItemsInput, RoomUpdateWithoutParsedSpecItemsInput>, RoomUncheckedUpdateWithoutParsedSpecItemsInput>
  }

  export type ClientCreateNestedOneWithoutSnagsInput = {
    create?: XOR<ClientCreateWithoutSnagsInput, ClientUncheckedCreateWithoutSnagsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutSnagsInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutSnagsInput = {
    create?: XOR<RoomCreateWithoutSnagsInput, RoomUncheckedCreateWithoutSnagsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutSnagsInput
    connect?: RoomWhereUniqueInput
  }

  export type EnumSnagStatusFieldUpdateOperationsInput = {
    set?: $Enums.SnagStatus
  }

  export type ClientUpdateOneRequiredWithoutSnagsNestedInput = {
    create?: XOR<ClientCreateWithoutSnagsInput, ClientUncheckedCreateWithoutSnagsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutSnagsInput
    upsert?: ClientUpsertWithoutSnagsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutSnagsInput, ClientUpdateWithoutSnagsInput>, ClientUncheckedUpdateWithoutSnagsInput>
  }

  export type RoomUpdateOneRequiredWithoutSnagsNestedInput = {
    create?: XOR<RoomCreateWithoutSnagsInput, RoomUncheckedCreateWithoutSnagsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutSnagsInput
    upsert?: RoomUpsertWithoutSnagsInput
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutSnagsInput, RoomUpdateWithoutSnagsInput>, RoomUncheckedUpdateWithoutSnagsInput>
  }

  export type ClientCreateNestedOneWithoutJobsInput = {
    create?: XOR<ClientCreateWithoutJobsInput, ClientUncheckedCreateWithoutJobsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutJobsInput
    connect?: ClientWhereUniqueInput
  }

  export type RoomCreateNestedOneWithoutJobsInput = {
    create?: XOR<RoomCreateWithoutJobsInput, RoomUncheckedCreateWithoutJobsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutJobsInput
    connect?: RoomWhereUniqueInput
  }

  export type EnumJobStatusFieldUpdateOperationsInput = {
    set?: $Enums.JobStatus
  }

  export type ClientUpdateOneRequiredWithoutJobsNestedInput = {
    create?: XOR<ClientCreateWithoutJobsInput, ClientUncheckedCreateWithoutJobsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutJobsInput
    upsert?: ClientUpsertWithoutJobsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutJobsInput, ClientUpdateWithoutJobsInput>, ClientUncheckedUpdateWithoutJobsInput>
  }

  export type RoomUpdateOneWithoutJobsNestedInput = {
    create?: XOR<RoomCreateWithoutJobsInput, RoomUncheckedCreateWithoutJobsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutJobsInput
    upsert?: RoomUpsertWithoutJobsInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutJobsInput, RoomUpdateWithoutJobsInput>, RoomUncheckedUpdateWithoutJobsInput>
  }

  export type RoomCreateNestedOneWithoutFormsInput = {
    create?: XOR<RoomCreateWithoutFormsInput, RoomUncheckedCreateWithoutFormsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutFormsInput
    connect?: RoomWhereUniqueInput
  }

  export type RoomUpdateOneWithoutFormsNestedInput = {
    create?: XOR<RoomCreateWithoutFormsInput, RoomUncheckedCreateWithoutFormsInput>
    connectOrCreate?: RoomCreateOrConnectWithoutFormsInput
    upsert?: RoomUpsertWithoutFormsInput
    disconnect?: RoomWhereInput | boolean
    delete?: RoomWhereInput | boolean
    connect?: RoomWhereUniqueInput
    update?: XOR<XOR<RoomUpdateToOneWithWhereWithoutFormsInput, RoomUpdateWithoutFormsInput>, RoomUncheckedUpdateWithoutFormsInput>
  }

  export type ClientCreateNestedOneWithoutEventsInput = {
    create?: XOR<ClientCreateWithoutEventsInput, ClientUncheckedCreateWithoutEventsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutEventsInput
    connect?: ClientWhereUniqueInput
  }

  export type ClientUpdateOneWithoutEventsNestedInput = {
    create?: XOR<ClientCreateWithoutEventsInput, ClientUncheckedCreateWithoutEventsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutEventsInput
    upsert?: ClientUpsertWithoutEventsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutEventsInput, ClientUpdateWithoutEventsInput>, ClientUncheckedUpdateWithoutEventsInput>
  }

  export type ClientCreateNestedOneWithoutLeadsInput = {
    create?: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutLeadsInput
    connect?: ClientWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOwnedLeadsInput = {
    create?: XOR<UserCreateWithoutOwnedLeadsInput, UserUncheckedCreateWithoutOwnedLeadsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedLeadsInput
    connect?: UserWhereUniqueInput
  }

  export type DealCreateNestedOneWithoutLeadInput = {
    create?: XOR<DealCreateWithoutLeadInput, DealUncheckedCreateWithoutLeadInput>
    connectOrCreate?: DealCreateOrConnectWithoutLeadInput
    connect?: DealWhereUniqueInput
  }

  export type EnumLeadStatusFieldUpdateOperationsInput = {
    set?: $Enums.LeadStatus
  }

  export type EnumPriorityFieldUpdateOperationsInput = {
    set?: $Enums.Priority
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ClientUpdateOneRequiredWithoutLeadsNestedInput = {
    create?: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutLeadsInput
    upsert?: ClientUpsertWithoutLeadsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutLeadsInput, ClientUpdateWithoutLeadsInput>, ClientUncheckedUpdateWithoutLeadsInput>
  }

  export type UserUpdateOneRequiredWithoutOwnedLeadsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedLeadsInput, UserUncheckedCreateWithoutOwnedLeadsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedLeadsInput
    upsert?: UserUpsertWithoutOwnedLeadsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedLeadsInput, UserUpdateWithoutOwnedLeadsInput>, UserUncheckedUpdateWithoutOwnedLeadsInput>
  }

  export type DealUpdateOneWithoutLeadNestedInput = {
    create?: XOR<DealCreateWithoutLeadInput, DealUncheckedCreateWithoutLeadInput>
    connectOrCreate?: DealCreateOrConnectWithoutLeadInput
    upsert?: DealUpsertWithoutLeadInput
    disconnect?: DealWhereInput | boolean
    delete?: DealWhereInput | boolean
    connect?: DealWhereUniqueInput
    update?: XOR<XOR<DealUpdateToOneWithWhereWithoutLeadInput, DealUpdateWithoutLeadInput>, DealUncheckedUpdateWithoutLeadInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumClientStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientStatus | EnumClientStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumClientStatusFilter<$PrismaModel> | $Enums.ClientStatus
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumClientStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ClientStatus | EnumClientStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ClientStatus[] | ListEnumClientStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumClientStatusWithAggregatesFilter<$PrismaModel> | $Enums.ClientStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumClientStatusFilter<$PrismaModel>
    _max?: NestedEnumClientStatusFilter<$PrismaModel>
  }

  export type NestedEnumRoomTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomType | EnumRoomTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomTypeFilter<$PrismaModel> | $Enums.RoomType
  }

  export type NestedEnumRoomStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomStatus | EnumRoomStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomStatusFilter<$PrismaModel> | $Enums.RoomStatus
  }

  export type NestedEnumRoomTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomType | EnumRoomTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomType[] | ListEnumRoomTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomTypeWithAggregatesFilter<$PrismaModel> | $Enums.RoomType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoomTypeFilter<$PrismaModel>
    _max?: NestedEnumRoomTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumRoomStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoomStatus | EnumRoomStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RoomStatus[] | ListEnumRoomStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRoomStatusWithAggregatesFilter<$PrismaModel> | $Enums.RoomStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoomStatusFilter<$PrismaModel>
    _max?: NestedEnumRoomStatusFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumActivityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ActivityType | EnumActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumActivityTypeFilter<$PrismaModel> | $Enums.ActivityType
  }

  export type NestedEnumActivityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ActivityType | EnumActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ActivityType[] | ListEnumActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumActivityTypeWithAggregatesFilter<$PrismaModel> | $Enums.ActivityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumActivityTypeFilter<$PrismaModel>
    _max?: NestedEnumActivityTypeFilter<$PrismaModel>
  }

  export type NestedEnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type NestedEnumAppointmentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AppointmentType | EnumAppointmentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAppointmentTypeFilter<$PrismaModel> | $Enums.AppointmentType
  }

  export type NestedEnumAppointmentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppointmentType | EnumAppointmentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppointmentType[] | ListEnumAppointmentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAppointmentTypeWithAggregatesFilter<$PrismaModel> | $Enums.AppointmentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppointmentTypeFilter<$PrismaModel>
    _max?: NestedEnumAppointmentTypeFilter<$PrismaModel>
  }

  export type NestedEnumDocCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.DocCategory | EnumDocCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumDocCategoryFilter<$PrismaModel> | $Enums.DocCategory
  }

  export type NestedEnumDocCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocCategory | EnumDocCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocCategory[] | ListEnumDocCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumDocCategoryWithAggregatesFilter<$PrismaModel> | $Enums.DocCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocCategoryFilter<$PrismaModel>
    _max?: NestedEnumDocCategoryFilter<$PrismaModel>
  }

  export type NestedEnumSpecStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SpecStatus | EnumSpecStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSpecStatusFilter<$PrismaModel> | $Enums.SpecStatus
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumSpecStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SpecStatus | EnumSpecStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SpecStatus[] | ListEnumSpecStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSpecStatusWithAggregatesFilter<$PrismaModel> | $Enums.SpecStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSpecStatusFilter<$PrismaModel>
    _max?: NestedEnumSpecStatusFilter<$PrismaModel>
  }

  export type NestedEnumSnagStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SnagStatus | EnumSnagStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSnagStatusFilter<$PrismaModel> | $Enums.SnagStatus
  }

  export type NestedEnumSnagStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SnagStatus | EnumSnagStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SnagStatus[] | ListEnumSnagStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSnagStatusWithAggregatesFilter<$PrismaModel> | $Enums.SnagStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSnagStatusFilter<$PrismaModel>
    _max?: NestedEnumSnagStatusFilter<$PrismaModel>
  }

  export type NestedEnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type NestedEnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type NestedEnumLeadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LeadStatus | EnumLeadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLeadStatusFilter<$PrismaModel> | $Enums.LeadStatus
  }

  export type NestedEnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumLeadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LeadStatus | EnumLeadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LeadStatus[] | ListEnumLeadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLeadStatusWithAggregatesFilter<$PrismaModel> | $Enums.LeadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLeadStatusFilter<$PrismaModel>
    _max?: NestedEnumLeadStatusFilter<$PrismaModel>
  }

  export type NestedEnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type UserCreateWithoutCreatedUsersInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutCreatedUsersInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutCreatedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
  }

  export type UserCreateWithoutUpdatedUsersInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutUpdatedUsersInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutUpdatedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
  }

  export type UserCreateWithoutCreatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutCreatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput>
  }

  export type UserCreateManyCreatedByInputEnvelope = {
    data: UserCreateManyCreatedByInput | UserCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutUpdatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserCreateManyUpdatedByInputEnvelope = {
    data: UserCreateManyUpdatedByInput | UserCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ClientCreateWithoutOwnerInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutOwnerInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutOwnerInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput>
  }

  export type ClientCreateManyOwnerInputEnvelope = {
    data: ClientCreateManyOwnerInput | ClientCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type RoomCreateWithoutOwnerInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutOwnerInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutOwnerInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput>
  }

  export type RoomCreateManyOwnerInputEnvelope = {
    data: RoomCreateManyOwnerInput | RoomCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type DealCreateWithoutOwnerInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutDealsInput
    room?: RoomCreateNestedOneWithoutDealInput
    stage: PipelineStageCreateNestedOneWithoutDealsInput
    lead?: LeadCreateNestedOneWithoutDealInput
  }

  export type DealUncheckedCreateWithoutOwnerInput = {
    id?: string
    clientId: string
    roomId?: string | null
    stageId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    lead?: LeadUncheckedCreateNestedOneWithoutDealInput
  }

  export type DealCreateOrConnectWithoutOwnerInput = {
    where: DealWhereUniqueInput
    create: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput>
  }

  export type DealCreateManyOwnerInputEnvelope = {
    data: DealCreateManyOwnerInput | DealCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutAssigneeInput = {
    id?: string
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutTasksInput
    room?: RoomCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutAssigneeInput = {
    id?: string
    clientId: string
    roomId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateOrConnectWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskCreateManyAssigneeInputEnvelope = {
    data: TaskCreateManyAssigneeInput | TaskCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type ActivityCreateWithoutUserInput = {
    id?: string
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutActivitiesInput
    room?: RoomCreateNestedOneWithoutActivitiesInput
  }

  export type ActivityUncheckedCreateWithoutUserInput = {
    id?: string
    clientId: string
    roomId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type ActivityCreateOrConnectWithoutUserInput = {
    where: ActivityWhereUniqueInput
    create: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput>
  }

  export type ActivityCreateManyUserInputEnvelope = {
    data: ActivityCreateManyUserInput | ActivityCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type LeadCreateWithoutOwnerInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    client: ClientCreateNestedOneWithoutLeadsInput
    deal?: DealCreateNestedOneWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutOwnerInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    clientId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type LeadCreateOrConnectWithoutOwnerInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput>
  }

  export type LeadCreateManyOwnerInputEnvelope = {
    data: LeadCreateManyOwnerInput | LeadCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreatedUsersInput = {
    update: XOR<UserUpdateWithoutCreatedUsersInput, UserUncheckedUpdateWithoutCreatedUsersInput>
    create: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedUsersInput, UserUncheckedUpdateWithoutCreatedUsersInput>
  }

  export type UserUpdateWithoutCreatedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type UserUpsertWithoutUpdatedUsersInput = {
    update: XOR<UserUpdateWithoutUpdatedUsersInput, UserUncheckedUpdateWithoutUpdatedUsersInput>
    create: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedUsersInput, UserUncheckedUpdateWithoutUpdatedUsersInput>
  }

  export type UserUpdateWithoutUpdatedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCreatedByInput, UserUncheckedUpdateWithoutCreatedByInput>
    create: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCreatedByInput, UserUncheckedUpdateWithoutCreatedByInput>
  }

  export type UserUpdateManyWithWhereWithoutCreatedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringNullableFilter<"User"> | string | null
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorSecret?: StringNullableFilter<"User"> | string | null
    twoFactorEnabled?: BoolFilter<"User"> | boolean
    avatarUrl?: StringNullableFilter<"User"> | string | null
    timezone?: StringFilter<"User"> | string
    preferences?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdById?: StringNullableFilter<"User"> | string | null
    updatedById?: StringNullableFilter<"User"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUpdatedByInput, UserUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUpdatedByInput, UserUncheckedUpdateWithoutUpdatedByInput>
  }

  export type UserUpdateManyWithWhereWithoutUpdatedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ClientUpsertWithWhereUniqueWithoutOwnerInput = {
    where: ClientWhereUniqueInput
    update: XOR<ClientUpdateWithoutOwnerInput, ClientUncheckedUpdateWithoutOwnerInput>
    create: XOR<ClientCreateWithoutOwnerInput, ClientUncheckedCreateWithoutOwnerInput>
  }

  export type ClientUpdateWithWhereUniqueWithoutOwnerInput = {
    where: ClientWhereUniqueInput
    data: XOR<ClientUpdateWithoutOwnerInput, ClientUncheckedUpdateWithoutOwnerInput>
  }

  export type ClientUpdateManyWithWhereWithoutOwnerInput = {
    where: ClientScalarWhereInput
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyWithoutOwnerInput>
  }

  export type ClientScalarWhereInput = {
    AND?: ClientScalarWhereInput | ClientScalarWhereInput[]
    OR?: ClientScalarWhereInput[]
    NOT?: ClientScalarWhereInput | ClientScalarWhereInput[]
    id?: StringFilter<"Client"> | string
    orgId?: StringNullableFilter<"Client"> | string | null
    name?: StringFilter<"Client"> | string
    legalName?: StringNullableFilter<"Client"> | string | null
    emails?: StringNullableListFilter<"Client">
    phones?: StringNullableListFilter<"Client">
    billingAddress?: JsonNullableFilter<"Client">
    siteAddresses?: JsonNullableFilter<"Client">
    ownerId?: StringFilter<"Client"> | string
    tags?: StringNullableListFilter<"Client">
    status?: EnumClientStatusFilter<"Client"> | $Enums.ClientStatus
    portalToken?: StringFilter<"Client"> | string
    designFeePaid?: BoolFilter<"Client"> | boolean
    consentMarketing?: BoolFilter<"Client"> | boolean
    createdAt?: DateTimeFilter<"Client"> | Date | string
    updatedAt?: DateTimeFilter<"Client"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    createdById?: StringNullableFilter<"Client"> | string | null
    updatedById?: StringNullableFilter<"Client"> | string | null
  }

  export type RoomUpsertWithWhereUniqueWithoutOwnerInput = {
    where: RoomWhereUniqueInput
    update: XOR<RoomUpdateWithoutOwnerInput, RoomUncheckedUpdateWithoutOwnerInput>
    create: XOR<RoomCreateWithoutOwnerInput, RoomUncheckedCreateWithoutOwnerInput>
  }

  export type RoomUpdateWithWhereUniqueWithoutOwnerInput = {
    where: RoomWhereUniqueInput
    data: XOR<RoomUpdateWithoutOwnerInput, RoomUncheckedUpdateWithoutOwnerInput>
  }

  export type RoomUpdateManyWithWhereWithoutOwnerInput = {
    where: RoomScalarWhereInput
    data: XOR<RoomUpdateManyMutationInput, RoomUncheckedUpdateManyWithoutOwnerInput>
  }

  export type RoomScalarWhereInput = {
    AND?: RoomScalarWhereInput | RoomScalarWhereInput[]
    OR?: RoomScalarWhereInput[]
    NOT?: RoomScalarWhereInput | RoomScalarWhereInput[]
    id?: StringFilter<"Room"> | string
    clientId?: StringFilter<"Room"> | string
    type?: EnumRoomTypeFilter<"Room"> | $Enums.RoomType
    nickname?: StringFilter<"Room"> | string
    pipelineStageId?: StringNullableFilter<"Room"> | string | null
    ownerId?: StringNullableFilter<"Room"> | string | null
    budgetLow?: IntNullableFilter<"Room"> | number | null
    budgetHigh?: IntNullableFilter<"Room"> | number | null
    siteAddress?: JsonNullableFilter<"Room">
    status?: EnumRoomStatusFilter<"Room"> | $Enums.RoomStatus
    createdAt?: DateTimeFilter<"Room"> | Date | string
    updatedAt?: DateTimeFilter<"Room"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Room"> | Date | string | null
  }

  export type DealUpsertWithWhereUniqueWithoutOwnerInput = {
    where: DealWhereUniqueInput
    update: XOR<DealUpdateWithoutOwnerInput, DealUncheckedUpdateWithoutOwnerInput>
    create: XOR<DealCreateWithoutOwnerInput, DealUncheckedCreateWithoutOwnerInput>
  }

  export type DealUpdateWithWhereUniqueWithoutOwnerInput = {
    where: DealWhereUniqueInput
    data: XOR<DealUpdateWithoutOwnerInput, DealUncheckedUpdateWithoutOwnerInput>
  }

  export type DealUpdateManyWithWhereWithoutOwnerInput = {
    where: DealScalarWhereInput
    data: XOR<DealUpdateManyMutationInput, DealUncheckedUpdateManyWithoutOwnerInput>
  }

  export type DealScalarWhereInput = {
    AND?: DealScalarWhereInput | DealScalarWhereInput[]
    OR?: DealScalarWhereInput[]
    NOT?: DealScalarWhereInput | DealScalarWhereInput[]
    id?: StringFilter<"Deal"> | string
    clientId?: StringFilter<"Deal"> | string
    roomId?: StringNullableFilter<"Deal"> | string | null
    stageId?: StringFilter<"Deal"> | string
    ownerId?: StringFilter<"Deal"> | string
    amountGrossIncVat?: IntFilter<"Deal"> | number
    vatRate?: FloatFilter<"Deal"> | number
    probability?: IntFilter<"Deal"> | number
    source?: StringNullableFilter<"Deal"> | string | null
    utm?: JsonNullableFilter<"Deal">
    createdAt?: DateTimeFilter<"Deal"> | Date | string
    updatedAt?: DateTimeFilter<"Deal"> | Date | string
  }

  export type TaskUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
  }

  export type TaskUpdateManyWithWhereWithoutAssigneeInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type TaskScalarWhereInput = {
    AND?: TaskScalarWhereInput | TaskScalarWhereInput[]
    OR?: TaskScalarWhereInput[]
    NOT?: TaskScalarWhereInput | TaskScalarWhereInput[]
    id?: StringFilter<"Task"> | string
    clientId?: StringFilter<"Task"> | string
    roomId?: StringNullableFilter<"Task"> | string | null
    assigneeId?: StringNullableFilter<"Task"> | string | null
    title?: StringFilter<"Task"> | string
    dueAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    priority?: IntFilter<"Task"> | number
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    autoGenerated?: BoolFilter<"Task"> | boolean
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
  }

  export type ActivityUpsertWithWhereUniqueWithoutUserInput = {
    where: ActivityWhereUniqueInput
    update: XOR<ActivityUpdateWithoutUserInput, ActivityUncheckedUpdateWithoutUserInput>
    create: XOR<ActivityCreateWithoutUserInput, ActivityUncheckedCreateWithoutUserInput>
  }

  export type ActivityUpdateWithWhereUniqueWithoutUserInput = {
    where: ActivityWhereUniqueInput
    data: XOR<ActivityUpdateWithoutUserInput, ActivityUncheckedUpdateWithoutUserInput>
  }

  export type ActivityUpdateManyWithWhereWithoutUserInput = {
    where: ActivityScalarWhereInput
    data: XOR<ActivityUpdateManyMutationInput, ActivityUncheckedUpdateManyWithoutUserInput>
  }

  export type ActivityScalarWhereInput = {
    AND?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
    OR?: ActivityScalarWhereInput[]
    NOT?: ActivityScalarWhereInput | ActivityScalarWhereInput[]
    id?: StringFilter<"Activity"> | string
    clientId?: StringFilter<"Activity"> | string
    roomId?: StringNullableFilter<"Activity"> | string | null
    userId?: StringNullableFilter<"Activity"> | string | null
    type?: EnumActivityTypeFilter<"Activity"> | $Enums.ActivityType
    threadKey?: StringNullableFilter<"Activity"> | string | null
    summary?: StringNullableFilter<"Activity"> | string | null
    body?: StringNullableFilter<"Activity"> | string | null
    attachments?: JsonNullableFilter<"Activity">
    durations?: JsonNullableFilter<"Activity">
    metadata?: JsonNullableFilter<"Activity">
    occurredAt?: DateTimeFilter<"Activity"> | Date | string
    createdAt?: DateTimeFilter<"Activity"> | Date | string
  }

  export type LeadUpsertWithWhereUniqueWithoutOwnerInput = {
    where: LeadWhereUniqueInput
    update: XOR<LeadUpdateWithoutOwnerInput, LeadUncheckedUpdateWithoutOwnerInput>
    create: XOR<LeadCreateWithoutOwnerInput, LeadUncheckedCreateWithoutOwnerInput>
  }

  export type LeadUpdateWithWhereUniqueWithoutOwnerInput = {
    where: LeadWhereUniqueInput
    data: XOR<LeadUpdateWithoutOwnerInput, LeadUncheckedUpdateWithoutOwnerInput>
  }

  export type LeadUpdateManyWithWhereWithoutOwnerInput = {
    where: LeadScalarWhereInput
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyWithoutOwnerInput>
  }

  export type LeadScalarWhereInput = {
    AND?: LeadScalarWhereInput | LeadScalarWhereInput[]
    OR?: LeadScalarWhereInput[]
    NOT?: LeadScalarWhereInput | LeadScalarWhereInput[]
    id?: StringFilter<"Lead"> | string
    title?: StringFilter<"Lead"> | string
    description?: StringNullableFilter<"Lead"> | string | null
    status?: EnumLeadStatusFilter<"Lead"> | $Enums.LeadStatus
    priority?: EnumPriorityFilter<"Lead"> | $Enums.Priority
    estimatedValue?: DecimalNullableFilter<"Lead"> | Decimal | DecimalJsLike | number | string | null
    probability?: IntFilter<"Lead"> | number
    expectedCloseDate?: DateTimeNullableFilter<"Lead"> | Date | string | null
    source?: StringNullableFilter<"Lead"> | string | null
    campaign?: StringNullableFilter<"Lead"> | string | null
    medium?: StringNullableFilter<"Lead"> | string | null
    firstResponseAt?: DateTimeNullableFilter<"Lead"> | Date | string | null
    responseTime?: IntNullableFilter<"Lead"> | number | null
    clientId?: StringFilter<"Lead"> | string
    ownerId?: StringFilter<"Lead"> | string
    dealId?: StringNullableFilter<"Lead"> | string | null
    createdAt?: DateTimeFilter<"Lead"> | Date | string
    updatedAt?: DateTimeFilter<"Lead"> | Date | string
    createdById?: StringNullableFilter<"Lead"> | string | null
    updatedById?: StringNullableFilter<"Lead"> | string | null
  }

  export type UserCreateWithoutOwnedClientsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutOwnedClientsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutOwnedClientsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedClientsInput, UserUncheckedCreateWithoutOwnedClientsInput>
  }

  export type ContactCreateWithoutClientInput = {
    id?: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactUncheckedCreateWithoutClientInput = {
    id?: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactCreateOrConnectWithoutClientInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput>
  }

  export type ContactCreateManyClientInputEnvelope = {
    data: ContactCreateManyClientInput | ContactCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type RoomCreateWithoutClientInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutClientInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutClientInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput>
  }

  export type RoomCreateManyClientInputEnvelope = {
    data: RoomCreateManyClientInput | RoomCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type DealCreateWithoutClientInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    room?: RoomCreateNestedOneWithoutDealInput
    stage: PipelineStageCreateNestedOneWithoutDealsInput
    owner: UserCreateNestedOneWithoutOwnedDealsInput
    lead?: LeadCreateNestedOneWithoutDealInput
  }

  export type DealUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    lead?: LeadUncheckedCreateNestedOneWithoutDealInput
  }

  export type DealCreateOrConnectWithoutClientInput = {
    where: DealWhereUniqueInput
    create: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput>
  }

  export type DealCreateManyClientInputEnvelope = {
    data: DealCreateManyClientInput | DealCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ActivityCreateWithoutClientInput = {
    id?: string
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
    room?: RoomCreateNestedOneWithoutActivitiesInput
    user?: UserCreateNestedOneWithoutActivitiesInput
  }

  export type ActivityUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type ActivityCreateOrConnectWithoutClientInput = {
    where: ActivityWhereUniqueInput
    create: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput>
  }

  export type ActivityCreateManyClientInputEnvelope = {
    data: ActivityCreateManyClientInput | ActivityCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutClientInput = {
    id?: string
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    room?: RoomCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutAssignedTasksInput
  }

  export type TaskUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateOrConnectWithoutClientInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput>
  }

  export type TaskCreateManyClientInputEnvelope = {
    data: TaskCreateManyClientInput | TaskCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type AppointmentCreateWithoutClientInput = {
    id?: string
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    room?: RoomCreateNestedOneWithoutAppointmentsInput
  }

  export type AppointmentUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type AppointmentCreateOrConnectWithoutClientInput = {
    where: AppointmentWhereUniqueInput
    create: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput>
  }

  export type AppointmentCreateManyClientInputEnvelope = {
    data: AppointmentCreateManyClientInput | AppointmentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type DocumentCreateWithoutClientInput = {
    id?: string
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
    room?: RoomCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type DocumentCreateOrConnectWithoutClientInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput>
  }

  export type DocumentCreateManyClientInputEnvelope = {
    data: DocumentCreateManyClientInput | DocumentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type SnagCreateWithoutClientInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    room: RoomCreateNestedOneWithoutSnagsInput
  }

  export type SnagUncheckedCreateWithoutClientInput = {
    id?: string
    roomId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SnagCreateOrConnectWithoutClientInput = {
    where: SnagWhereUniqueInput
    create: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput>
  }

  export type SnagCreateManyClientInputEnvelope = {
    data: SnagCreateManyClientInput | SnagCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type JobCreateWithoutClientInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    room?: RoomCreateNestedOneWithoutJobsInput
  }

  export type JobUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobCreateOrConnectWithoutClientInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput>
  }

  export type JobCreateManyClientInputEnvelope = {
    data: JobCreateManyClientInput | JobCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type EventLogCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type EventLogUncheckedCreateWithoutClientInput = {
    id?: string
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type EventLogCreateOrConnectWithoutClientInput = {
    where: EventLogWhereUniqueInput
    create: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput>
  }

  export type EventLogCreateManyClientInputEnvelope = {
    data: EventLogCreateManyClientInput | EventLogCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type LeadCreateWithoutClientInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedLeadsInput
    deal?: DealCreateNestedOneWithoutLeadInput
  }

  export type LeadUncheckedCreateWithoutClientInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    ownerId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type LeadCreateOrConnectWithoutClientInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput>
  }

  export type LeadCreateManyClientInputEnvelope = {
    data: LeadCreateManyClientInput | LeadCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOwnedClientsInput = {
    update: XOR<UserUpdateWithoutOwnedClientsInput, UserUncheckedUpdateWithoutOwnedClientsInput>
    create: XOR<UserCreateWithoutOwnedClientsInput, UserUncheckedCreateWithoutOwnedClientsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedClientsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedClientsInput, UserUncheckedUpdateWithoutOwnedClientsInput>
  }

  export type UserUpdateWithoutOwnedClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type ContactUpsertWithWhereUniqueWithoutClientInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutClientInput, ContactUncheckedUpdateWithoutClientInput>
    create: XOR<ContactCreateWithoutClientInput, ContactUncheckedCreateWithoutClientInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutClientInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutClientInput, ContactUncheckedUpdateWithoutClientInput>
  }

  export type ContactUpdateManyWithWhereWithoutClientInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutClientInput>
  }

  export type ContactScalarWhereInput = {
    AND?: ContactScalarWhereInput | ContactScalarWhereInput[]
    OR?: ContactScalarWhereInput[]
    NOT?: ContactScalarWhereInput | ContactScalarWhereInput[]
    id?: StringFilter<"Contact"> | string
    clientId?: StringFilter<"Contact"> | string
    name?: StringFilter<"Contact"> | string
    role?: StringNullableFilter<"Contact"> | string | null
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    isPrimary?: BoolFilter<"Contact"> | boolean
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
  }

  export type RoomUpsertWithWhereUniqueWithoutClientInput = {
    where: RoomWhereUniqueInput
    update: XOR<RoomUpdateWithoutClientInput, RoomUncheckedUpdateWithoutClientInput>
    create: XOR<RoomCreateWithoutClientInput, RoomUncheckedCreateWithoutClientInput>
  }

  export type RoomUpdateWithWhereUniqueWithoutClientInput = {
    where: RoomWhereUniqueInput
    data: XOR<RoomUpdateWithoutClientInput, RoomUncheckedUpdateWithoutClientInput>
  }

  export type RoomUpdateManyWithWhereWithoutClientInput = {
    where: RoomScalarWhereInput
    data: XOR<RoomUpdateManyMutationInput, RoomUncheckedUpdateManyWithoutClientInput>
  }

  export type DealUpsertWithWhereUniqueWithoutClientInput = {
    where: DealWhereUniqueInput
    update: XOR<DealUpdateWithoutClientInput, DealUncheckedUpdateWithoutClientInput>
    create: XOR<DealCreateWithoutClientInput, DealUncheckedCreateWithoutClientInput>
  }

  export type DealUpdateWithWhereUniqueWithoutClientInput = {
    where: DealWhereUniqueInput
    data: XOR<DealUpdateWithoutClientInput, DealUncheckedUpdateWithoutClientInput>
  }

  export type DealUpdateManyWithWhereWithoutClientInput = {
    where: DealScalarWhereInput
    data: XOR<DealUpdateManyMutationInput, DealUncheckedUpdateManyWithoutClientInput>
  }

  export type ActivityUpsertWithWhereUniqueWithoutClientInput = {
    where: ActivityWhereUniqueInput
    update: XOR<ActivityUpdateWithoutClientInput, ActivityUncheckedUpdateWithoutClientInput>
    create: XOR<ActivityCreateWithoutClientInput, ActivityUncheckedCreateWithoutClientInput>
  }

  export type ActivityUpdateWithWhereUniqueWithoutClientInput = {
    where: ActivityWhereUniqueInput
    data: XOR<ActivityUpdateWithoutClientInput, ActivityUncheckedUpdateWithoutClientInput>
  }

  export type ActivityUpdateManyWithWhereWithoutClientInput = {
    where: ActivityScalarWhereInput
    data: XOR<ActivityUpdateManyMutationInput, ActivityUncheckedUpdateManyWithoutClientInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutClientInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutClientInput, TaskUncheckedUpdateWithoutClientInput>
    create: XOR<TaskCreateWithoutClientInput, TaskUncheckedCreateWithoutClientInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutClientInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutClientInput, TaskUncheckedUpdateWithoutClientInput>
  }

  export type TaskUpdateManyWithWhereWithoutClientInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutClientInput>
  }

  export type AppointmentUpsertWithWhereUniqueWithoutClientInput = {
    where: AppointmentWhereUniqueInput
    update: XOR<AppointmentUpdateWithoutClientInput, AppointmentUncheckedUpdateWithoutClientInput>
    create: XOR<AppointmentCreateWithoutClientInput, AppointmentUncheckedCreateWithoutClientInput>
  }

  export type AppointmentUpdateWithWhereUniqueWithoutClientInput = {
    where: AppointmentWhereUniqueInput
    data: XOR<AppointmentUpdateWithoutClientInput, AppointmentUncheckedUpdateWithoutClientInput>
  }

  export type AppointmentUpdateManyWithWhereWithoutClientInput = {
    where: AppointmentScalarWhereInput
    data: XOR<AppointmentUpdateManyMutationInput, AppointmentUncheckedUpdateManyWithoutClientInput>
  }

  export type AppointmentScalarWhereInput = {
    AND?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
    OR?: AppointmentScalarWhereInput[]
    NOT?: AppointmentScalarWhereInput | AppointmentScalarWhereInput[]
    id?: StringFilter<"Appointment"> | string
    clientId?: StringFilter<"Appointment"> | string
    roomId?: StringNullableFilter<"Appointment"> | string | null
    type?: EnumAppointmentTypeFilter<"Appointment"> | $Enums.AppointmentType
    start?: DateTimeFilter<"Appointment"> | Date | string
    end?: DateTimeFilter<"Appointment"> | Date | string
    location?: StringNullableFilter<"Appointment"> | string | null
    participants?: JsonNullableFilter<"Appointment">
    status?: StringNullableFilter<"Appointment"> | string | null
    createdAt?: DateTimeFilter<"Appointment"> | Date | string
  }

  export type DocumentUpsertWithWhereUniqueWithoutClientInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutClientInput, DocumentUncheckedUpdateWithoutClientInput>
    create: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutClientInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutClientInput, DocumentUncheckedUpdateWithoutClientInput>
  }

  export type DocumentUpdateManyWithWhereWithoutClientInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutClientInput>
  }

  export type DocumentScalarWhereInput = {
    AND?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    OR?: DocumentScalarWhereInput[]
    NOT?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    id?: StringFilter<"Document"> | string
    clientId?: StringFilter<"Document"> | string
    roomId?: StringNullableFilter<"Document"> | string | null
    category?: EnumDocCategoryFilter<"Document"> | $Enums.DocCategory
    url?: StringFilter<"Document"> | string
    thumbUrl?: StringNullableFilter<"Document"> | string | null
    size?: IntNullableFilter<"Document"> | number | null
    labels?: StringNullableListFilter<"Document">
    capturedAt?: DateTimeNullableFilter<"Document"> | Date | string | null
    capturedBy?: StringNullableFilter<"Document"> | string | null
    clientVisible?: BoolFilter<"Document"> | boolean
    clientWatermark?: BoolFilter<"Document"> | boolean
    createdAt?: DateTimeFilter<"Document"> | Date | string
  }

  export type SnagUpsertWithWhereUniqueWithoutClientInput = {
    where: SnagWhereUniqueInput
    update: XOR<SnagUpdateWithoutClientInput, SnagUncheckedUpdateWithoutClientInput>
    create: XOR<SnagCreateWithoutClientInput, SnagUncheckedCreateWithoutClientInput>
  }

  export type SnagUpdateWithWhereUniqueWithoutClientInput = {
    where: SnagWhereUniqueInput
    data: XOR<SnagUpdateWithoutClientInput, SnagUncheckedUpdateWithoutClientInput>
  }

  export type SnagUpdateManyWithWhereWithoutClientInput = {
    where: SnagScalarWhereInput
    data: XOR<SnagUpdateManyMutationInput, SnagUncheckedUpdateManyWithoutClientInput>
  }

  export type SnagScalarWhereInput = {
    AND?: SnagScalarWhereInput | SnagScalarWhereInput[]
    OR?: SnagScalarWhereInput[]
    NOT?: SnagScalarWhereInput | SnagScalarWhereInput[]
    id?: StringFilter<"Snag"> | string
    clientId?: StringFilter<"Snag"> | string
    roomId?: StringFilter<"Snag"> | string
    title?: StringFilter<"Snag"> | string
    description?: StringNullableFilter<"Snag"> | string | null
    status?: EnumSnagStatusFilter<"Snag"> | $Enums.SnagStatus
    assigneeId?: StringNullableFilter<"Snag"> | string | null
    dueAt?: DateTimeNullableFilter<"Snag"> | Date | string | null
    clientVisible?: BoolFilter<"Snag"> | boolean
    photos?: JsonNullableFilter<"Snag">
    createdAt?: DateTimeFilter<"Snag"> | Date | string
    updatedAt?: DateTimeFilter<"Snag"> | Date | string
  }

  export type JobUpsertWithWhereUniqueWithoutClientInput = {
    where: JobWhereUniqueInput
    update: XOR<JobUpdateWithoutClientInput, JobUncheckedUpdateWithoutClientInput>
    create: XOR<JobCreateWithoutClientInput, JobUncheckedCreateWithoutClientInput>
  }

  export type JobUpdateWithWhereUniqueWithoutClientInput = {
    where: JobWhereUniqueInput
    data: XOR<JobUpdateWithoutClientInput, JobUncheckedUpdateWithoutClientInput>
  }

  export type JobUpdateManyWithWhereWithoutClientInput = {
    where: JobScalarWhereInput
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyWithoutClientInput>
  }

  export type JobScalarWhereInput = {
    AND?: JobScalarWhereInput | JobScalarWhereInput[]
    OR?: JobScalarWhereInput[]
    NOT?: JobScalarWhereInput | JobScalarWhereInput[]
    id?: StringFilter<"Job"> | string
    clientId?: StringFilter<"Job"> | string
    roomId?: StringNullableFilter<"Job"> | string | null
    title?: StringFilter<"Job"> | string
    description?: StringNullableFilter<"Job"> | string | null
    status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    startDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Job"> | Date | string | null
    createdAt?: DateTimeFilter<"Job"> | Date | string
    updatedAt?: DateTimeFilter<"Job"> | Date | string
  }

  export type EventLogUpsertWithWhereUniqueWithoutClientInput = {
    where: EventLogWhereUniqueInput
    update: XOR<EventLogUpdateWithoutClientInput, EventLogUncheckedUpdateWithoutClientInput>
    create: XOR<EventLogCreateWithoutClientInput, EventLogUncheckedCreateWithoutClientInput>
  }

  export type EventLogUpdateWithWhereUniqueWithoutClientInput = {
    where: EventLogWhereUniqueInput
    data: XOR<EventLogUpdateWithoutClientInput, EventLogUncheckedUpdateWithoutClientInput>
  }

  export type EventLogUpdateManyWithWhereWithoutClientInput = {
    where: EventLogScalarWhereInput
    data: XOR<EventLogUpdateManyMutationInput, EventLogUncheckedUpdateManyWithoutClientInput>
  }

  export type EventLogScalarWhereInput = {
    AND?: EventLogScalarWhereInput | EventLogScalarWhereInput[]
    OR?: EventLogScalarWhereInput[]
    NOT?: EventLogScalarWhereInput | EventLogScalarWhereInput[]
    id?: StringFilter<"EventLog"> | string
    clientId?: StringNullableFilter<"EventLog"> | string | null
    roomId?: StringNullableFilter<"EventLog"> | string | null
    actorId?: StringNullableFilter<"EventLog"> | string | null
    entity?: StringFilter<"EventLog"> | string
    entityId?: StringFilter<"EventLog"> | string
    action?: StringFilter<"EventLog"> | string
    before?: JsonNullableFilter<"EventLog">
    after?: JsonNullableFilter<"EventLog">
    createdAt?: DateTimeFilter<"EventLog"> | Date | string
  }

  export type LeadUpsertWithWhereUniqueWithoutClientInput = {
    where: LeadWhereUniqueInput
    update: XOR<LeadUpdateWithoutClientInput, LeadUncheckedUpdateWithoutClientInput>
    create: XOR<LeadCreateWithoutClientInput, LeadUncheckedCreateWithoutClientInput>
  }

  export type LeadUpdateWithWhereUniqueWithoutClientInput = {
    where: LeadWhereUniqueInput
    data: XOR<LeadUpdateWithoutClientInput, LeadUncheckedUpdateWithoutClientInput>
  }

  export type LeadUpdateManyWithWhereWithoutClientInput = {
    where: LeadScalarWhereInput
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyWithoutClientInput>
  }

  export type ClientCreateWithoutContactsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutContactsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutContactsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
  }

  export type ClientUpsertWithoutContactsInput = {
    update: XOR<ClientUpdateWithoutContactsInput, ClientUncheckedUpdateWithoutContactsInput>
    create: XOR<ClientCreateWithoutContactsInput, ClientUncheckedCreateWithoutContactsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutContactsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutContactsInput, ClientUncheckedUpdateWithoutContactsInput>
  }

  export type ClientUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateWithoutRoomsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutRoomsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutRoomsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutRoomsInput, ClientUncheckedCreateWithoutRoomsInput>
  }

  export type PipelineStageCreateWithoutRoomsInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    deals?: DealCreateNestedManyWithoutStageInput
  }

  export type PipelineStageUncheckedCreateWithoutRoomsInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    deals?: DealUncheckedCreateNestedManyWithoutStageInput
  }

  export type PipelineStageCreateOrConnectWithoutRoomsInput = {
    where: PipelineStageWhereUniqueInput
    create: XOR<PipelineStageCreateWithoutRoomsInput, PipelineStageUncheckedCreateWithoutRoomsInput>
  }

  export type UserCreateWithoutOwnedRoomsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutOwnedRoomsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutOwnedRoomsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedRoomsInput, UserUncheckedCreateWithoutOwnedRoomsInput>
  }

  export type DealCreateWithoutRoomInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutDealsInput
    stage: PipelineStageCreateNestedOneWithoutDealsInput
    owner: UserCreateNestedOneWithoutOwnedDealsInput
    lead?: LeadCreateNestedOneWithoutDealInput
  }

  export type DealUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    lead?: LeadUncheckedCreateNestedOneWithoutDealInput
  }

  export type DealCreateOrConnectWithoutRoomInput = {
    where: DealWhereUniqueInput
    create: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
  }

  export type ActivityCreateWithoutRoomInput = {
    id?: string
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutActivitiesInput
    user?: UserCreateNestedOneWithoutActivitiesInput
  }

  export type ActivityUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type ActivityCreateOrConnectWithoutRoomInput = {
    where: ActivityWhereUniqueInput
    create: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput>
  }

  export type ActivityCreateManyRoomInputEnvelope = {
    data: ActivityCreateManyRoomInput | ActivityCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutRoomInput = {
    id?: string
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutTasksInput
    assignee?: UserCreateNestedOneWithoutAssignedTasksInput
  }

  export type TaskUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateOrConnectWithoutRoomInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput>
  }

  export type TaskCreateManyRoomInputEnvelope = {
    data: TaskCreateManyRoomInput | TaskCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type AppointmentCreateWithoutRoomInput = {
    id?: string
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutAppointmentsInput
  }

  export type AppointmentUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type AppointmentCreateOrConnectWithoutRoomInput = {
    where: AppointmentWhereUniqueInput
    create: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput>
  }

  export type AppointmentCreateManyRoomInputEnvelope = {
    data: AppointmentCreateManyRoomInput | AppointmentCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type DocumentCreateWithoutRoomInput = {
    id?: string
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type DocumentCreateOrConnectWithoutRoomInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput>
  }

  export type DocumentCreateManyRoomInputEnvelope = {
    data: DocumentCreateManyRoomInput | DocumentCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type DesignVersionCreateWithoutRoomInput = {
    id?: string
    clientId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
  }

  export type DesignVersionUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
  }

  export type DesignVersionCreateOrConnectWithoutRoomInput = {
    where: DesignVersionWhereUniqueInput
    create: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput>
  }

  export type DesignVersionCreateManyRoomInputEnvelope = {
    data: DesignVersionCreateManyRoomInput | DesignVersionCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type ParsedSpecItemCreateWithoutRoomInput = {
    id?: string
    clientId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
  }

  export type ParsedSpecItemUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
  }

  export type ParsedSpecItemCreateOrConnectWithoutRoomInput = {
    where: ParsedSpecItemWhereUniqueInput
    create: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput>
  }

  export type ParsedSpecItemCreateManyRoomInputEnvelope = {
    data: ParsedSpecItemCreateManyRoomInput | ParsedSpecItemCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type FormSubmissionCreateWithoutRoomInput = {
    id?: string
    clientId: string
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
  }

  export type FormSubmissionUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
  }

  export type FormSubmissionCreateOrConnectWithoutRoomInput = {
    where: FormSubmissionWhereUniqueInput
    create: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput>
  }

  export type FormSubmissionCreateManyRoomInputEnvelope = {
    data: FormSubmissionCreateManyRoomInput | FormSubmissionCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type JobCreateWithoutRoomInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutJobsInput
  }

  export type JobUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobCreateOrConnectWithoutRoomInput = {
    where: JobWhereUniqueInput
    create: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput>
  }

  export type JobCreateManyRoomInputEnvelope = {
    data: JobCreateManyRoomInput | JobCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type SnagCreateWithoutRoomInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutSnagsInput
  }

  export type SnagUncheckedCreateWithoutRoomInput = {
    id?: string
    clientId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SnagCreateOrConnectWithoutRoomInput = {
    where: SnagWhereUniqueInput
    create: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput>
  }

  export type SnagCreateManyRoomInputEnvelope = {
    data: SnagCreateManyRoomInput | SnagCreateManyRoomInput[]
    skipDuplicates?: boolean
  }

  export type ClientUpsertWithoutRoomsInput = {
    update: XOR<ClientUpdateWithoutRoomsInput, ClientUncheckedUpdateWithoutRoomsInput>
    create: XOR<ClientCreateWithoutRoomsInput, ClientUncheckedCreateWithoutRoomsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutRoomsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutRoomsInput, ClientUncheckedUpdateWithoutRoomsInput>
  }

  export type ClientUpdateWithoutRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type PipelineStageUpsertWithoutRoomsInput = {
    update: XOR<PipelineStageUpdateWithoutRoomsInput, PipelineStageUncheckedUpdateWithoutRoomsInput>
    create: XOR<PipelineStageCreateWithoutRoomsInput, PipelineStageUncheckedCreateWithoutRoomsInput>
    where?: PipelineStageWhereInput
  }

  export type PipelineStageUpdateToOneWithWhereWithoutRoomsInput = {
    where?: PipelineStageWhereInput
    data: XOR<PipelineStageUpdateWithoutRoomsInput, PipelineStageUncheckedUpdateWithoutRoomsInput>
  }

  export type PipelineStageUpdateWithoutRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    deals?: DealUpdateManyWithoutStageNestedInput
  }

  export type PipelineStageUncheckedUpdateWithoutRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    deals?: DealUncheckedUpdateManyWithoutStageNestedInput
  }

  export type UserUpsertWithoutOwnedRoomsInput = {
    update: XOR<UserUpdateWithoutOwnedRoomsInput, UserUncheckedUpdateWithoutOwnedRoomsInput>
    create: XOR<UserCreateWithoutOwnedRoomsInput, UserUncheckedCreateWithoutOwnedRoomsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedRoomsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedRoomsInput, UserUncheckedUpdateWithoutOwnedRoomsInput>
  }

  export type UserUpdateWithoutOwnedRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedRoomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type DealUpsertWithoutRoomInput = {
    update: XOR<DealUpdateWithoutRoomInput, DealUncheckedUpdateWithoutRoomInput>
    create: XOR<DealCreateWithoutRoomInput, DealUncheckedCreateWithoutRoomInput>
    where?: DealWhereInput
  }

  export type DealUpdateToOneWithWhereWithoutRoomInput = {
    where?: DealWhereInput
    data: XOR<DealUpdateWithoutRoomInput, DealUncheckedUpdateWithoutRoomInput>
  }

  export type DealUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDealsNestedInput
    stage?: PipelineStageUpdateOneRequiredWithoutDealsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedDealsNestedInput
    lead?: LeadUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lead?: LeadUncheckedUpdateOneWithoutDealNestedInput
  }

  export type ActivityUpsertWithWhereUniqueWithoutRoomInput = {
    where: ActivityWhereUniqueInput
    update: XOR<ActivityUpdateWithoutRoomInput, ActivityUncheckedUpdateWithoutRoomInput>
    create: XOR<ActivityCreateWithoutRoomInput, ActivityUncheckedCreateWithoutRoomInput>
  }

  export type ActivityUpdateWithWhereUniqueWithoutRoomInput = {
    where: ActivityWhereUniqueInput
    data: XOR<ActivityUpdateWithoutRoomInput, ActivityUncheckedUpdateWithoutRoomInput>
  }

  export type ActivityUpdateManyWithWhereWithoutRoomInput = {
    where: ActivityScalarWhereInput
    data: XOR<ActivityUpdateManyMutationInput, ActivityUncheckedUpdateManyWithoutRoomInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutRoomInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutRoomInput, TaskUncheckedUpdateWithoutRoomInput>
    create: XOR<TaskCreateWithoutRoomInput, TaskUncheckedCreateWithoutRoomInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutRoomInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutRoomInput, TaskUncheckedUpdateWithoutRoomInput>
  }

  export type TaskUpdateManyWithWhereWithoutRoomInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutRoomInput>
  }

  export type AppointmentUpsertWithWhereUniqueWithoutRoomInput = {
    where: AppointmentWhereUniqueInput
    update: XOR<AppointmentUpdateWithoutRoomInput, AppointmentUncheckedUpdateWithoutRoomInput>
    create: XOR<AppointmentCreateWithoutRoomInput, AppointmentUncheckedCreateWithoutRoomInput>
  }

  export type AppointmentUpdateWithWhereUniqueWithoutRoomInput = {
    where: AppointmentWhereUniqueInput
    data: XOR<AppointmentUpdateWithoutRoomInput, AppointmentUncheckedUpdateWithoutRoomInput>
  }

  export type AppointmentUpdateManyWithWhereWithoutRoomInput = {
    where: AppointmentScalarWhereInput
    data: XOR<AppointmentUpdateManyMutationInput, AppointmentUncheckedUpdateManyWithoutRoomInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutRoomInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutRoomInput, DocumentUncheckedUpdateWithoutRoomInput>
    create: XOR<DocumentCreateWithoutRoomInput, DocumentUncheckedCreateWithoutRoomInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutRoomInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutRoomInput, DocumentUncheckedUpdateWithoutRoomInput>
  }

  export type DocumentUpdateManyWithWhereWithoutRoomInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutRoomInput>
  }

  export type DesignVersionUpsertWithWhereUniqueWithoutRoomInput = {
    where: DesignVersionWhereUniqueInput
    update: XOR<DesignVersionUpdateWithoutRoomInput, DesignVersionUncheckedUpdateWithoutRoomInput>
    create: XOR<DesignVersionCreateWithoutRoomInput, DesignVersionUncheckedCreateWithoutRoomInput>
  }

  export type DesignVersionUpdateWithWhereUniqueWithoutRoomInput = {
    where: DesignVersionWhereUniqueInput
    data: XOR<DesignVersionUpdateWithoutRoomInput, DesignVersionUncheckedUpdateWithoutRoomInput>
  }

  export type DesignVersionUpdateManyWithWhereWithoutRoomInput = {
    where: DesignVersionScalarWhereInput
    data: XOR<DesignVersionUpdateManyMutationInput, DesignVersionUncheckedUpdateManyWithoutRoomInput>
  }

  export type DesignVersionScalarWhereInput = {
    AND?: DesignVersionScalarWhereInput | DesignVersionScalarWhereInput[]
    OR?: DesignVersionScalarWhereInput[]
    NOT?: DesignVersionScalarWhereInput | DesignVersionScalarWhereInput[]
    id?: StringFilter<"DesignVersion"> | string
    clientId?: StringFilter<"DesignVersion"> | string
    roomId?: StringFilter<"DesignVersion"> | string
    version?: IntFilter<"DesignVersion"> | number
    notes?: StringNullableFilter<"DesignVersion"> | string | null
    assets?: JsonFilter<"DesignVersion">
    finalApproved?: BoolFilter<"DesignVersion"> | boolean
    createdAt?: DateTimeFilter<"DesignVersion"> | Date | string
  }

  export type ParsedSpecItemUpsertWithWhereUniqueWithoutRoomInput = {
    where: ParsedSpecItemWhereUniqueInput
    update: XOR<ParsedSpecItemUpdateWithoutRoomInput, ParsedSpecItemUncheckedUpdateWithoutRoomInput>
    create: XOR<ParsedSpecItemCreateWithoutRoomInput, ParsedSpecItemUncheckedCreateWithoutRoomInput>
  }

  export type ParsedSpecItemUpdateWithWhereUniqueWithoutRoomInput = {
    where: ParsedSpecItemWhereUniqueInput
    data: XOR<ParsedSpecItemUpdateWithoutRoomInput, ParsedSpecItemUncheckedUpdateWithoutRoomInput>
  }

  export type ParsedSpecItemUpdateManyWithWhereWithoutRoomInput = {
    where: ParsedSpecItemScalarWhereInput
    data: XOR<ParsedSpecItemUpdateManyMutationInput, ParsedSpecItemUncheckedUpdateManyWithoutRoomInput>
  }

  export type ParsedSpecItemScalarWhereInput = {
    AND?: ParsedSpecItemScalarWhereInput | ParsedSpecItemScalarWhereInput[]
    OR?: ParsedSpecItemScalarWhereInput[]
    NOT?: ParsedSpecItemScalarWhereInput | ParsedSpecItemScalarWhereInput[]
    id?: StringFilter<"ParsedSpecItem"> | string
    clientId?: StringFilter<"ParsedSpecItem"> | string
    roomId?: StringFilter<"ParsedSpecItem"> | string
    specVersion?: IntFilter<"ParsedSpecItem"> | number
    lineNo?: IntFilter<"ParsedSpecItem"> | number
    brand?: StringNullableFilter<"ParsedSpecItem"> | string | null
    description?: StringFilter<"ParsedSpecItem"> | string
    finish?: StringNullableFilter<"ParsedSpecItem"> | string | null
    qty?: FloatNullableFilter<"ParsedSpecItem"> | number | null
    unitPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    totalPrice?: IntNullableFilter<"ParsedSpecItem"> | number | null
    status?: EnumSpecStatusFilter<"ParsedSpecItem"> | $Enums.SpecStatus
    note?: StringNullableFilter<"ParsedSpecItem"> | string | null
    isCritical?: BoolFilter<"ParsedSpecItem"> | boolean
    createdAt?: DateTimeFilter<"ParsedSpecItem"> | Date | string
  }

  export type FormSubmissionUpsertWithWhereUniqueWithoutRoomInput = {
    where: FormSubmissionWhereUniqueInput
    update: XOR<FormSubmissionUpdateWithoutRoomInput, FormSubmissionUncheckedUpdateWithoutRoomInput>
    create: XOR<FormSubmissionCreateWithoutRoomInput, FormSubmissionUncheckedCreateWithoutRoomInput>
  }

  export type FormSubmissionUpdateWithWhereUniqueWithoutRoomInput = {
    where: FormSubmissionWhereUniqueInput
    data: XOR<FormSubmissionUpdateWithoutRoomInput, FormSubmissionUncheckedUpdateWithoutRoomInput>
  }

  export type FormSubmissionUpdateManyWithWhereWithoutRoomInput = {
    where: FormSubmissionScalarWhereInput
    data: XOR<FormSubmissionUpdateManyMutationInput, FormSubmissionUncheckedUpdateManyWithoutRoomInput>
  }

  export type FormSubmissionScalarWhereInput = {
    AND?: FormSubmissionScalarWhereInput | FormSubmissionScalarWhereInput[]
    OR?: FormSubmissionScalarWhereInput[]
    NOT?: FormSubmissionScalarWhereInput | FormSubmissionScalarWhereInput[]
    id?: StringFilter<"FormSubmission"> | string
    clientId?: StringFilter<"FormSubmission"> | string
    roomId?: StringNullableFilter<"FormSubmission"> | string | null
    formType?: StringFilter<"FormSubmission"> | string
    data?: JsonFilter<"FormSubmission">
    submittedAt?: DateTimeFilter<"FormSubmission"> | Date | string
  }

  export type JobUpsertWithWhereUniqueWithoutRoomInput = {
    where: JobWhereUniqueInput
    update: XOR<JobUpdateWithoutRoomInput, JobUncheckedUpdateWithoutRoomInput>
    create: XOR<JobCreateWithoutRoomInput, JobUncheckedCreateWithoutRoomInput>
  }

  export type JobUpdateWithWhereUniqueWithoutRoomInput = {
    where: JobWhereUniqueInput
    data: XOR<JobUpdateWithoutRoomInput, JobUncheckedUpdateWithoutRoomInput>
  }

  export type JobUpdateManyWithWhereWithoutRoomInput = {
    where: JobScalarWhereInput
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyWithoutRoomInput>
  }

  export type SnagUpsertWithWhereUniqueWithoutRoomInput = {
    where: SnagWhereUniqueInput
    update: XOR<SnagUpdateWithoutRoomInput, SnagUncheckedUpdateWithoutRoomInput>
    create: XOR<SnagCreateWithoutRoomInput, SnagUncheckedCreateWithoutRoomInput>
  }

  export type SnagUpdateWithWhereUniqueWithoutRoomInput = {
    where: SnagWhereUniqueInput
    data: XOR<SnagUpdateWithoutRoomInput, SnagUncheckedUpdateWithoutRoomInput>
  }

  export type SnagUpdateManyWithWhereWithoutRoomInput = {
    where: SnagScalarWhereInput
    data: XOR<SnagUpdateManyMutationInput, SnagUncheckedUpdateManyWithoutRoomInput>
  }

  export type ClientCreateWithoutDealsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutDealsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutDealsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutDealsInput, ClientUncheckedCreateWithoutDealsInput>
  }

  export type RoomCreateWithoutDealInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutDealInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutDealInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutDealInput, RoomUncheckedCreateWithoutDealInput>
  }

  export type PipelineStageCreateWithoutDealsInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    rooms?: RoomCreateNestedManyWithoutStageInput
  }

  export type PipelineStageUncheckedCreateWithoutDealsInput = {
    id?: string
    name: string
    order: number
    slaHours?: number | null
    rooms?: RoomUncheckedCreateNestedManyWithoutStageInput
  }

  export type PipelineStageCreateOrConnectWithoutDealsInput = {
    where: PipelineStageWhereUniqueInput
    create: XOR<PipelineStageCreateWithoutDealsInput, PipelineStageUncheckedCreateWithoutDealsInput>
  }

  export type UserCreateWithoutOwnedDealsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutOwnedDealsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutOwnedDealsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedDealsInput, UserUncheckedCreateWithoutOwnedDealsInput>
  }

  export type LeadCreateWithoutDealInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    client: ClientCreateNestedOneWithoutLeadsInput
    owner: UserCreateNestedOneWithoutOwnedLeadsInput
  }

  export type LeadUncheckedCreateWithoutDealInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    clientId: string
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type LeadCreateOrConnectWithoutDealInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
  }

  export type ClientUpsertWithoutDealsInput = {
    update: XOR<ClientUpdateWithoutDealsInput, ClientUncheckedUpdateWithoutDealsInput>
    create: XOR<ClientCreateWithoutDealsInput, ClientUncheckedCreateWithoutDealsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutDealsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutDealsInput, ClientUncheckedUpdateWithoutDealsInput>
  }

  export type ClientUpdateWithoutDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutDealInput = {
    update: XOR<RoomUpdateWithoutDealInput, RoomUncheckedUpdateWithoutDealInput>
    create: XOR<RoomCreateWithoutDealInput, RoomUncheckedCreateWithoutDealInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutDealInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutDealInput, RoomUncheckedUpdateWithoutDealInput>
  }

  export type RoomUpdateWithoutDealInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutDealInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type PipelineStageUpsertWithoutDealsInput = {
    update: XOR<PipelineStageUpdateWithoutDealsInput, PipelineStageUncheckedUpdateWithoutDealsInput>
    create: XOR<PipelineStageCreateWithoutDealsInput, PipelineStageUncheckedCreateWithoutDealsInput>
    where?: PipelineStageWhereInput
  }

  export type PipelineStageUpdateToOneWithWhereWithoutDealsInput = {
    where?: PipelineStageWhereInput
    data: XOR<PipelineStageUpdateWithoutDealsInput, PipelineStageUncheckedUpdateWithoutDealsInput>
  }

  export type PipelineStageUpdateWithoutDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    rooms?: RoomUpdateManyWithoutStageNestedInput
  }

  export type PipelineStageUncheckedUpdateWithoutDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    slaHours?: NullableIntFieldUpdateOperationsInput | number | null
    rooms?: RoomUncheckedUpdateManyWithoutStageNestedInput
  }

  export type UserUpsertWithoutOwnedDealsInput = {
    update: XOR<UserUpdateWithoutOwnedDealsInput, UserUncheckedUpdateWithoutOwnedDealsInput>
    create: XOR<UserCreateWithoutOwnedDealsInput, UserUncheckedCreateWithoutOwnedDealsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedDealsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedDealsInput, UserUncheckedUpdateWithoutOwnedDealsInput>
  }

  export type UserUpdateWithoutOwnedDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedDealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type LeadUpsertWithoutDealInput = {
    update: XOR<LeadUpdateWithoutDealInput, LeadUncheckedUpdateWithoutDealInput>
    create: XOR<LeadCreateWithoutDealInput, LeadUncheckedCreateWithoutDealInput>
    where?: LeadWhereInput
  }

  export type LeadUpdateToOneWithWhereWithoutDealInput = {
    where?: LeadWhereInput
    data: XOR<LeadUpdateWithoutDealInput, LeadUncheckedUpdateWithoutDealInput>
  }

  export type LeadUpdateWithoutDealInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    client?: ClientUpdateOneRequiredWithoutLeadsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedLeadsNestedInput
  }

  export type LeadUncheckedUpdateWithoutDealInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoomCreateWithoutStageInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutStageInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutStageInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput>
  }

  export type RoomCreateManyStageInputEnvelope = {
    data: RoomCreateManyStageInput | RoomCreateManyStageInput[]
    skipDuplicates?: boolean
  }

  export type DealCreateWithoutStageInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutDealsInput
    room?: RoomCreateNestedOneWithoutDealInput
    owner: UserCreateNestedOneWithoutOwnedDealsInput
    lead?: LeadCreateNestedOneWithoutDealInput
  }

  export type DealUncheckedCreateWithoutStageInput = {
    id?: string
    clientId: string
    roomId?: string | null
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    lead?: LeadUncheckedCreateNestedOneWithoutDealInput
  }

  export type DealCreateOrConnectWithoutStageInput = {
    where: DealWhereUniqueInput
    create: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput>
  }

  export type DealCreateManyStageInputEnvelope = {
    data: DealCreateManyStageInput | DealCreateManyStageInput[]
    skipDuplicates?: boolean
  }

  export type RoomUpsertWithWhereUniqueWithoutStageInput = {
    where: RoomWhereUniqueInput
    update: XOR<RoomUpdateWithoutStageInput, RoomUncheckedUpdateWithoutStageInput>
    create: XOR<RoomCreateWithoutStageInput, RoomUncheckedCreateWithoutStageInput>
  }

  export type RoomUpdateWithWhereUniqueWithoutStageInput = {
    where: RoomWhereUniqueInput
    data: XOR<RoomUpdateWithoutStageInput, RoomUncheckedUpdateWithoutStageInput>
  }

  export type RoomUpdateManyWithWhereWithoutStageInput = {
    where: RoomScalarWhereInput
    data: XOR<RoomUpdateManyMutationInput, RoomUncheckedUpdateManyWithoutStageInput>
  }

  export type DealUpsertWithWhereUniqueWithoutStageInput = {
    where: DealWhereUniqueInput
    update: XOR<DealUpdateWithoutStageInput, DealUncheckedUpdateWithoutStageInput>
    create: XOR<DealCreateWithoutStageInput, DealUncheckedCreateWithoutStageInput>
  }

  export type DealUpdateWithWhereUniqueWithoutStageInput = {
    where: DealWhereUniqueInput
    data: XOR<DealUpdateWithoutStageInput, DealUncheckedUpdateWithoutStageInput>
  }

  export type DealUpdateManyWithWhereWithoutStageInput = {
    where: DealScalarWhereInput
    data: XOR<DealUpdateManyMutationInput, DealUncheckedUpdateManyWithoutStageInput>
  }

  export type ClientCreateWithoutActivitiesInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutActivitiesInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutActivitiesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutActivitiesInput, ClientUncheckedCreateWithoutActivitiesInput>
  }

  export type RoomCreateWithoutActivitiesInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutActivitiesInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutActivitiesInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutActivitiesInput, RoomUncheckedCreateWithoutActivitiesInput>
  }

  export type UserCreateWithoutActivitiesInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutActivitiesInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutActivitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
  }

  export type ClientUpsertWithoutActivitiesInput = {
    update: XOR<ClientUpdateWithoutActivitiesInput, ClientUncheckedUpdateWithoutActivitiesInput>
    create: XOR<ClientCreateWithoutActivitiesInput, ClientUncheckedCreateWithoutActivitiesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutActivitiesInput, ClientUncheckedUpdateWithoutActivitiesInput>
  }

  export type ClientUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutActivitiesInput = {
    update: XOR<RoomUpdateWithoutActivitiesInput, RoomUncheckedUpdateWithoutActivitiesInput>
    create: XOR<RoomCreateWithoutActivitiesInput, RoomUncheckedCreateWithoutActivitiesInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutActivitiesInput, RoomUncheckedUpdateWithoutActivitiesInput>
  }

  export type RoomUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type UserUpsertWithoutActivitiesInput = {
    update: XOR<UserUpdateWithoutActivitiesInput, UserUncheckedUpdateWithoutActivitiesInput>
    create: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutActivitiesInput, UserUncheckedUpdateWithoutActivitiesInput>
  }

  export type UserUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type ClientCreateWithoutTasksInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutTasksInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutTasksInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutTasksInput, ClientUncheckedCreateWithoutTasksInput>
  }

  export type RoomCreateWithoutTasksInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutTasksInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutTasksInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutTasksInput, RoomUncheckedCreateWithoutTasksInput>
  }

  export type UserCreateWithoutAssignedTasksInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    activities?: ActivityCreateNestedManyWithoutUserInput
    ownedLeads?: LeadCreateNestedManyWithoutOwnerInput
  }

  export type UserUncheckedCreateWithoutAssignedTasksInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
    ownedLeads?: LeadUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type UserCreateOrConnectWithoutAssignedTasksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
  }

  export type ClientUpsertWithoutTasksInput = {
    update: XOR<ClientUpdateWithoutTasksInput, ClientUncheckedUpdateWithoutTasksInput>
    create: XOR<ClientCreateWithoutTasksInput, ClientUncheckedCreateWithoutTasksInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutTasksInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutTasksInput, ClientUncheckedUpdateWithoutTasksInput>
  }

  export type ClientUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutTasksInput = {
    update: XOR<RoomUpdateWithoutTasksInput, RoomUncheckedUpdateWithoutTasksInput>
    create: XOR<RoomCreateWithoutTasksInput, RoomUncheckedCreateWithoutTasksInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutTasksInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutTasksInput, RoomUncheckedUpdateWithoutTasksInput>
  }

  export type RoomUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type UserUpsertWithoutAssignedTasksInput = {
    update: XOR<UserUpdateWithoutAssignedTasksInput, UserUncheckedUpdateWithoutAssignedTasksInput>
    create: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedTasksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedTasksInput, UserUncheckedUpdateWithoutAssignedTasksInput>
  }

  export type UserUpdateWithoutAssignedTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type ClientCreateWithoutAppointmentsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutAppointmentsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutAppointmentsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutAppointmentsInput, ClientUncheckedCreateWithoutAppointmentsInput>
  }

  export type RoomCreateWithoutAppointmentsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutAppointmentsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutAppointmentsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutAppointmentsInput, RoomUncheckedCreateWithoutAppointmentsInput>
  }

  export type ClientUpsertWithoutAppointmentsInput = {
    update: XOR<ClientUpdateWithoutAppointmentsInput, ClientUncheckedUpdateWithoutAppointmentsInput>
    create: XOR<ClientCreateWithoutAppointmentsInput, ClientUncheckedCreateWithoutAppointmentsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutAppointmentsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutAppointmentsInput, ClientUncheckedUpdateWithoutAppointmentsInput>
  }

  export type ClientUpdateWithoutAppointmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutAppointmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutAppointmentsInput = {
    update: XOR<RoomUpdateWithoutAppointmentsInput, RoomUncheckedUpdateWithoutAppointmentsInput>
    create: XOR<RoomCreateWithoutAppointmentsInput, RoomUncheckedCreateWithoutAppointmentsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutAppointmentsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutAppointmentsInput, RoomUncheckedUpdateWithoutAppointmentsInput>
  }

  export type RoomUpdateWithoutAppointmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutAppointmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type ClientCreateWithoutDocumentsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutDocumentsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutDocumentsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutDocumentsInput, ClientUncheckedCreateWithoutDocumentsInput>
  }

  export type RoomCreateWithoutDocumentsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutDocumentsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutDocumentsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutDocumentsInput, RoomUncheckedCreateWithoutDocumentsInput>
  }

  export type ClientUpsertWithoutDocumentsInput = {
    update: XOR<ClientUpdateWithoutDocumentsInput, ClientUncheckedUpdateWithoutDocumentsInput>
    create: XOR<ClientCreateWithoutDocumentsInput, ClientUncheckedCreateWithoutDocumentsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutDocumentsInput, ClientUncheckedUpdateWithoutDocumentsInput>
  }

  export type ClientUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutDocumentsInput = {
    update: XOR<RoomUpdateWithoutDocumentsInput, RoomUncheckedUpdateWithoutDocumentsInput>
    create: XOR<RoomCreateWithoutDocumentsInput, RoomUncheckedCreateWithoutDocumentsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutDocumentsInput, RoomUncheckedUpdateWithoutDocumentsInput>
  }

  export type RoomUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomCreateWithoutDesignVersionsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutDesignVersionsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutDesignVersionsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutDesignVersionsInput, RoomUncheckedCreateWithoutDesignVersionsInput>
  }

  export type RoomUpsertWithoutDesignVersionsInput = {
    update: XOR<RoomUpdateWithoutDesignVersionsInput, RoomUncheckedUpdateWithoutDesignVersionsInput>
    create: XOR<RoomCreateWithoutDesignVersionsInput, RoomUncheckedCreateWithoutDesignVersionsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutDesignVersionsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutDesignVersionsInput, RoomUncheckedUpdateWithoutDesignVersionsInput>
  }

  export type RoomUpdateWithoutDesignVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutDesignVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomCreateWithoutParsedSpecItemsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutParsedSpecItemsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutParsedSpecItemsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutParsedSpecItemsInput, RoomUncheckedCreateWithoutParsedSpecItemsInput>
  }

  export type RoomUpsertWithoutParsedSpecItemsInput = {
    update: XOR<RoomUpdateWithoutParsedSpecItemsInput, RoomUncheckedUpdateWithoutParsedSpecItemsInput>
    create: XOR<RoomCreateWithoutParsedSpecItemsInput, RoomUncheckedCreateWithoutParsedSpecItemsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutParsedSpecItemsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutParsedSpecItemsInput, RoomUncheckedUpdateWithoutParsedSpecItemsInput>
  }

  export type RoomUpdateWithoutParsedSpecItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutParsedSpecItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type ClientCreateWithoutSnagsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutSnagsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutSnagsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutSnagsInput, ClientUncheckedCreateWithoutSnagsInput>
  }

  export type RoomCreateWithoutSnagsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutSnagsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutSnagsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutSnagsInput, RoomUncheckedCreateWithoutSnagsInput>
  }

  export type ClientUpsertWithoutSnagsInput = {
    update: XOR<ClientUpdateWithoutSnagsInput, ClientUncheckedUpdateWithoutSnagsInput>
    create: XOR<ClientCreateWithoutSnagsInput, ClientUncheckedCreateWithoutSnagsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutSnagsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutSnagsInput, ClientUncheckedUpdateWithoutSnagsInput>
  }

  export type ClientUpdateWithoutSnagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutSnagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutSnagsInput = {
    update: XOR<RoomUpdateWithoutSnagsInput, RoomUncheckedUpdateWithoutSnagsInput>
    create: XOR<RoomCreateWithoutSnagsInput, RoomUncheckedCreateWithoutSnagsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutSnagsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutSnagsInput, RoomUncheckedUpdateWithoutSnagsInput>
  }

  export type RoomUpdateWithoutSnagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutSnagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type ClientCreateWithoutJobsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutJobsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutJobsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutJobsInput, ClientUncheckedCreateWithoutJobsInput>
  }

  export type RoomCreateWithoutJobsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutJobsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    forms?: FormSubmissionUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutJobsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutJobsInput, RoomUncheckedCreateWithoutJobsInput>
  }

  export type ClientUpsertWithoutJobsInput = {
    update: XOR<ClientUpdateWithoutJobsInput, ClientUncheckedUpdateWithoutJobsInput>
    create: XOR<ClientCreateWithoutJobsInput, ClientUncheckedCreateWithoutJobsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutJobsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutJobsInput, ClientUncheckedUpdateWithoutJobsInput>
  }

  export type ClientUpdateWithoutJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type RoomUpsertWithoutJobsInput = {
    update: XOR<RoomUpdateWithoutJobsInput, RoomUncheckedUpdateWithoutJobsInput>
    create: XOR<RoomCreateWithoutJobsInput, RoomUncheckedCreateWithoutJobsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutJobsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutJobsInput, RoomUncheckedUpdateWithoutJobsInput>
  }

  export type RoomUpdateWithoutJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomCreateWithoutFormsInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutRoomsInput
    stage?: PipelineStageCreateNestedOneWithoutRoomsInput
    owner?: UserCreateNestedOneWithoutOwnedRoomsInput
    deal?: DealCreateNestedOneWithoutRoomInput
    activities?: ActivityCreateNestedManyWithoutRoomInput
    tasks?: TaskCreateNestedManyWithoutRoomInput
    appointments?: AppointmentCreateNestedManyWithoutRoomInput
    documents?: DocumentCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemCreateNestedManyWithoutRoomInput
    jobs?: JobCreateNestedManyWithoutRoomInput
    snags?: SnagCreateNestedManyWithoutRoomInput
  }

  export type RoomUncheckedCreateWithoutFormsInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    deal?: DealUncheckedCreateNestedOneWithoutRoomInput
    activities?: ActivityUncheckedCreateNestedManyWithoutRoomInput
    tasks?: TaskUncheckedCreateNestedManyWithoutRoomInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutRoomInput
    documents?: DocumentUncheckedCreateNestedManyWithoutRoomInput
    designVersions?: DesignVersionUncheckedCreateNestedManyWithoutRoomInput
    parsedSpecItems?: ParsedSpecItemUncheckedCreateNestedManyWithoutRoomInput
    jobs?: JobUncheckedCreateNestedManyWithoutRoomInput
    snags?: SnagUncheckedCreateNestedManyWithoutRoomInput
  }

  export type RoomCreateOrConnectWithoutFormsInput = {
    where: RoomWhereUniqueInput
    create: XOR<RoomCreateWithoutFormsInput, RoomUncheckedCreateWithoutFormsInput>
  }

  export type RoomUpsertWithoutFormsInput = {
    update: XOR<RoomUpdateWithoutFormsInput, RoomUncheckedUpdateWithoutFormsInput>
    create: XOR<RoomCreateWithoutFormsInput, RoomUncheckedCreateWithoutFormsInput>
    where?: RoomWhereInput
  }

  export type RoomUpdateToOneWithWhereWithoutFormsInput = {
    where?: RoomWhereInput
    data: XOR<RoomUpdateWithoutFormsInput, RoomUncheckedUpdateWithoutFormsInput>
  }

  export type RoomUpdateWithoutFormsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutFormsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type ClientCreateWithoutEventsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    leads?: LeadCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutEventsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    leads?: LeadUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutEventsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutEventsInput, ClientUncheckedCreateWithoutEventsInput>
  }

  export type ClientUpsertWithoutEventsInput = {
    update: XOR<ClientUpdateWithoutEventsInput, ClientUncheckedUpdateWithoutEventsInput>
    create: XOR<ClientCreateWithoutEventsInput, ClientUncheckedCreateWithoutEventsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutEventsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutEventsInput, ClientUncheckedUpdateWithoutEventsInput>
  }

  export type ClientUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateWithoutLeadsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    owner: UserCreateNestedOneWithoutOwnedClientsInput
    contacts?: ContactCreateNestedManyWithoutClientInput
    rooms?: RoomCreateNestedManyWithoutClientInput
    deals?: DealCreateNestedManyWithoutClientInput
    activities?: ActivityCreateNestedManyWithoutClientInput
    tasks?: TaskCreateNestedManyWithoutClientInput
    appointments?: AppointmentCreateNestedManyWithoutClientInput
    documents?: DocumentCreateNestedManyWithoutClientInput
    snags?: SnagCreateNestedManyWithoutClientInput
    jobs?: JobCreateNestedManyWithoutClientInput
    events?: EventLogCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutLeadsInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId: string
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutClientInput
    rooms?: RoomUncheckedCreateNestedManyWithoutClientInput
    deals?: DealUncheckedCreateNestedManyWithoutClientInput
    activities?: ActivityUncheckedCreateNestedManyWithoutClientInput
    tasks?: TaskUncheckedCreateNestedManyWithoutClientInput
    appointments?: AppointmentUncheckedCreateNestedManyWithoutClientInput
    documents?: DocumentUncheckedCreateNestedManyWithoutClientInput
    snags?: SnagUncheckedCreateNestedManyWithoutClientInput
    jobs?: JobUncheckedCreateNestedManyWithoutClientInput
    events?: EventLogUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutLeadsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
  }

  export type UserCreateWithoutOwnedLeadsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskCreateNestedManyWithoutAssigneeInput
    activities?: ActivityCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOwnedLeadsInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedClients?: ClientUncheckedCreateNestedManyWithoutOwnerInput
    ownedRooms?: RoomUncheckedCreateNestedManyWithoutOwnerInput
    ownedDeals?: DealUncheckedCreateNestedManyWithoutOwnerInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    activities?: ActivityUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOwnedLeadsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedLeadsInput, UserUncheckedCreateWithoutOwnedLeadsInput>
  }

  export type DealCreateWithoutLeadInput = {
    id?: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    client: ClientCreateNestedOneWithoutDealsInput
    room?: RoomCreateNestedOneWithoutDealInput
    stage: PipelineStageCreateNestedOneWithoutDealsInput
    owner: UserCreateNestedOneWithoutOwnedDealsInput
  }

  export type DealUncheckedCreateWithoutLeadInput = {
    id?: string
    clientId: string
    roomId?: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DealCreateOrConnectWithoutLeadInput = {
    where: DealWhereUniqueInput
    create: XOR<DealCreateWithoutLeadInput, DealUncheckedCreateWithoutLeadInput>
  }

  export type ClientUpsertWithoutLeadsInput = {
    update: XOR<ClientUpdateWithoutLeadsInput, ClientUncheckedUpdateWithoutLeadsInput>
    create: XOR<ClientCreateWithoutLeadsInput, ClientUncheckedCreateWithoutLeadsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutLeadsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutLeadsInput, ClientUncheckedUpdateWithoutLeadsInput>
  }

  export type ClientUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedClientsNestedInput
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    ownerId?: StringFieldUpdateOperationsInput | string
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
  }

  export type UserUpsertWithoutOwnedLeadsInput = {
    update: XOR<UserUpdateWithoutOwnedLeadsInput, UserUncheckedUpdateWithoutOwnedLeadsInput>
    create: XOR<UserCreateWithoutOwnedLeadsInput, UserUncheckedCreateWithoutOwnedLeadsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedLeadsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedLeadsInput, UserUncheckedUpdateWithoutOwnedLeadsInput>
  }

  export type UserUpdateWithoutOwnedLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedLeadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DealUpsertWithoutLeadInput = {
    update: XOR<DealUpdateWithoutLeadInput, DealUncheckedUpdateWithoutLeadInput>
    create: XOR<DealCreateWithoutLeadInput, DealUncheckedCreateWithoutLeadInput>
    where?: DealWhereInput
  }

  export type DealUpdateToOneWithWhereWithoutLeadInput = {
    where?: DealWhereInput
    data: XOR<DealUpdateWithoutLeadInput, DealUncheckedUpdateWithoutLeadInput>
  }

  export type DealUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDealsNestedInput
    room?: RoomUpdateOneWithoutDealNestedInput
    stage?: PipelineStageUpdateOneRequiredWithoutDealsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedDealsNestedInput
  }

  export type DealUncheckedUpdateWithoutLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyCreatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById?: string | null
  }

  export type UserCreateManyUpdatedByInput = {
    id?: string
    email: string
    passwordHash?: string | null
    firstName: string
    lastName: string
    phone?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerifiedAt?: Date | string | null
    twoFactorSecret?: string | null
    twoFactorEnabled?: boolean
    avatarUrl?: string | null
    timezone?: string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
  }

  export type ClientCreateManyOwnerInput = {
    id?: string
    orgId?: string | null
    name: string
    legalName?: string | null
    emails?: ClientCreateemailsInput | string[]
    phones?: ClientCreatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientCreatetagsInput | string[]
    status?: $Enums.ClientStatus
    portalToken?: string
    designFeePaid?: boolean
    consentMarketing?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdById?: string | null
    updatedById?: string | null
  }

  export type RoomCreateManyOwnerInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type DealCreateManyOwnerInput = {
    id?: string
    clientId: string
    roomId?: string | null
    stageId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateManyAssigneeInput = {
    id?: string
    clientId: string
    roomId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ActivityCreateManyUserInput = {
    id?: string
    clientId: string
    roomId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type LeadCreateManyOwnerInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    clientId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type UserUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedClients?: ClientUncheckedUpdateManyWithoutOwnerNestedInput
    ownedRooms?: RoomUncheckedUpdateManyWithoutOwnerNestedInput
    ownedDeals?: DealUncheckedUpdateManyWithoutOwnerNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutUserNestedInput
    ownedLeads?: LeadUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    preferences?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutClientNestedInput
    rooms?: RoomUpdateManyWithoutClientNestedInput
    deals?: DealUpdateManyWithoutClientNestedInput
    activities?: ActivityUpdateManyWithoutClientNestedInput
    tasks?: TaskUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUpdateManyWithoutClientNestedInput
    documents?: DocumentUpdateManyWithoutClientNestedInput
    snags?: SnagUpdateManyWithoutClientNestedInput
    jobs?: JobUpdateManyWithoutClientNestedInput
    events?: EventLogUpdateManyWithoutClientNestedInput
    leads?: LeadUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutClientNestedInput
    rooms?: RoomUncheckedUpdateManyWithoutClientNestedInput
    deals?: DealUncheckedUpdateManyWithoutClientNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutClientNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutClientNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutClientNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    snags?: SnagUncheckedUpdateManyWithoutClientNestedInput
    jobs?: JobUncheckedUpdateManyWithoutClientNestedInput
    events?: EventLogUncheckedUpdateManyWithoutClientNestedInput
    leads?: LeadUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orgId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    legalName?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: ClientUpdateemailsInput | string[]
    phones?: ClientUpdatephonesInput | string[]
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    siteAddresses?: NullableJsonNullValueInput | InputJsonValue
    tags?: ClientUpdatetagsInput | string[]
    status?: EnumClientStatusFieldUpdateOperationsInput | $Enums.ClientStatus
    portalToken?: StringFieldUpdateOperationsInput | string
    designFeePaid?: BoolFieldUpdateOperationsInput | boolean
    consentMarketing?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoomUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DealUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDealsNestedInput
    room?: RoomUpdateOneWithoutDealNestedInput
    stage?: PipelineStageUpdateOneRequiredWithoutDealsNestedInput
    lead?: LeadUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lead?: LeadUncheckedUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutTasksNestedInput
    room?: RoomUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutActivitiesNestedInput
    room?: RoomUpdateOneWithoutActivitiesNestedInput
  }

  export type ActivityUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    client?: ClientUpdateOneRequiredWithoutLeadsNestedInput
    deal?: DealUpdateOneWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    clientId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactCreateManyClientInput = {
    id?: string
    name: string
    role?: string | null
    email?: string | null
    phone?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoomCreateManyClientInput = {
    id?: string
    type: $Enums.RoomType
    nickname: string
    pipelineStageId?: string | null
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type DealCreateManyClientInput = {
    id?: string
    roomId?: string | null
    stageId: string
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ActivityCreateManyClientInput = {
    id?: string
    roomId?: string | null
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type TaskCreateManyClientInput = {
    id?: string
    roomId?: string | null
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AppointmentCreateManyClientInput = {
    id?: string
    roomId?: string | null
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type DocumentCreateManyClientInput = {
    id?: string
    roomId?: string | null
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type SnagCreateManyClientInput = {
    id?: string
    roomId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobCreateManyClientInput = {
    id?: string
    roomId?: string | null
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventLogCreateManyClientInput = {
    id?: string
    roomId?: string | null
    actorId?: string | null
    entity: string
    entityId: string
    action: string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type LeadCreateManyClientInput = {
    id?: string
    title: string
    description?: string | null
    status?: $Enums.LeadStatus
    priority?: $Enums.Priority
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    probability?: number
    expectedCloseDate?: Date | string | null
    source?: string | null
    campaign?: string | null
    medium?: string | null
    firstResponseAt?: Date | string | null
    responseTime?: number | null
    ownerId: string
    dealId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdById?: string | null
    updatedById?: string | null
  }

  export type ContactUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoomUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stage?: PipelineStageUpdateOneWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    pipelineStageId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DealUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutDealNestedInput
    stage?: PipelineStageUpdateOneRequiredWithoutDealsNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedDealsNestedInput
    lead?: LeadUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lead?: LeadUncheckedUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    stageId?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutActivitiesNestedInput
    user?: UserUpdateOneWithoutActivitiesNestedInput
  }

  export type ActivityUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutAssignedTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutAppointmentsNestedInput
  }

  export type AppointmentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneRequiredWithoutSnagsNestedInput
  }

  export type SnagUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    room?: RoomUpdateOneWithoutJobsNestedInput
  }

  export type JobUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventLogUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    actorId?: NullableStringFieldUpdateOperationsInput | string | null
    entity?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    before?: NullableJsonNullValueInput | InputJsonValue
    after?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedLeadsNestedInput
    deal?: DealUpdateOneWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumLeadStatusFieldUpdateOperationsInput | $Enums.LeadStatus
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    probability?: IntFieldUpdateOperationsInput | number
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    campaign?: NullableStringFieldUpdateOperationsInput | string | null
    medium?: NullableStringFieldUpdateOperationsInput | string | null
    firstResponseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: StringFieldUpdateOperationsInput | string
    dealId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityCreateManyRoomInput = {
    id?: string
    clientId: string
    userId?: string | null
    type: $Enums.ActivityType
    threadKey?: string | null
    summary?: string | null
    body?: string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: Date | string
    createdAt?: Date | string
  }

  export type TaskCreateManyRoomInput = {
    id?: string
    clientId: string
    assigneeId?: string | null
    title: string
    dueAt?: Date | string | null
    priority?: number
    status?: $Enums.TaskStatus
    autoGenerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AppointmentCreateManyRoomInput = {
    id?: string
    clientId: string
    type: $Enums.AppointmentType
    start: Date | string
    end: Date | string
    location?: string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: string | null
    createdAt?: Date | string
  }

  export type DocumentCreateManyRoomInput = {
    id?: string
    clientId: string
    category: $Enums.DocCategory
    url: string
    thumbUrl?: string | null
    size?: number | null
    labels?: DocumentCreatelabelsInput | string[]
    capturedAt?: Date | string | null
    capturedBy?: string | null
    clientVisible?: boolean
    clientWatermark?: boolean
    createdAt?: Date | string
  }

  export type DesignVersionCreateManyRoomInput = {
    id?: string
    clientId: string
    version: number
    notes?: string | null
    assets: JsonNullValueInput | InputJsonValue
    finalApproved?: boolean
    createdAt?: Date | string
  }

  export type ParsedSpecItemCreateManyRoomInput = {
    id?: string
    clientId: string
    specVersion: number
    lineNo: number
    brand?: string | null
    description: string
    finish?: string | null
    qty?: number | null
    unitPrice?: number | null
    totalPrice?: number | null
    status?: $Enums.SpecStatus
    note?: string | null
    isCritical?: boolean
    createdAt?: Date | string
  }

  export type FormSubmissionCreateManyRoomInput = {
    id?: string
    clientId: string
    formType: string
    data: JsonNullValueInput | InputJsonValue
    submittedAt?: Date | string
  }

  export type JobCreateManyRoomInput = {
    id?: string
    clientId: string
    title: string
    description?: string | null
    status?: $Enums.JobStatus
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SnagCreateManyRoomInput = {
    id?: string
    clientId: string
    title: string
    description?: string | null
    status?: $Enums.SnagStatus
    assigneeId?: string | null
    dueAt?: Date | string | null
    clientVisible?: boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ActivityUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutActivitiesNestedInput
    user?: UserUpdateOneWithoutActivitiesNestedInput
  }

  export type ActivityUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActivityUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumActivityTypeFieldUpdateOperationsInput | $Enums.ActivityType
    threadKey?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    durations?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutTasksNestedInput
    assignee?: UserUpdateOneWithoutAssignedTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    autoGenerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutAppointmentsNestedInput
  }

  export type AppointmentUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppointmentUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumAppointmentTypeFieldUpdateOperationsInput | $Enums.AppointmentType
    start?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    participants?: NullableJsonNullValueInput | InputJsonValue
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    category?: EnumDocCategoryFieldUpdateOperationsInput | $Enums.DocCategory
    url?: StringFieldUpdateOperationsInput | string
    thumbUrl?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    labels?: DocumentUpdatelabelsInput | string[]
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capturedBy?: NullableStringFieldUpdateOperationsInput | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    clientWatermark?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DesignVersionUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assets?: JsonNullValueInput | InputJsonValue
    finalApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParsedSpecItemUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    specVersion?: IntFieldUpdateOperationsInput | number
    lineNo?: IntFieldUpdateOperationsInput | number
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    finish?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: NullableFloatFieldUpdateOperationsInput | number | null
    unitPrice?: NullableIntFieldUpdateOperationsInput | number | null
    totalPrice?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumSpecStatusFieldUpdateOperationsInput | $Enums.SpecStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isCritical?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    formType?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutJobsNestedInput
  }

  export type JobUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutSnagsNestedInput
  }

  export type SnagUncheckedUpdateWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnagUncheckedUpdateManyWithoutRoomInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSnagStatusFieldUpdateOperationsInput | $Enums.SnagStatus
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientVisible?: BoolFieldUpdateOperationsInput | boolean
    photos?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoomCreateManyStageInput = {
    id?: string
    clientId: string
    type: $Enums.RoomType
    nickname: string
    ownerId?: string | null
    budgetLow?: number | null
    budgetHigh?: number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.RoomStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type DealCreateManyStageInput = {
    id?: string
    clientId: string
    roomId?: string | null
    ownerId: string
    amountGrossIncVat: number
    vatRate?: number
    probability?: number
    source?: string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoomUpdateWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutRoomsNestedInput
    owner?: UserUpdateOneWithoutOwnedRoomsNestedInput
    deal?: DealUpdateOneWithoutRoomNestedInput
    activities?: ActivityUpdateManyWithoutRoomNestedInput
    tasks?: TaskUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUpdateManyWithoutRoomNestedInput
    documents?: DocumentUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUpdateManyWithoutRoomNestedInput
    jobs?: JobUpdateManyWithoutRoomNestedInput
    snags?: SnagUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deal?: DealUncheckedUpdateOneWithoutRoomNestedInput
    activities?: ActivityUncheckedUpdateManyWithoutRoomNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutRoomNestedInput
    appointments?: AppointmentUncheckedUpdateManyWithoutRoomNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutRoomNestedInput
    designVersions?: DesignVersionUncheckedUpdateManyWithoutRoomNestedInput
    parsedSpecItems?: ParsedSpecItemUncheckedUpdateManyWithoutRoomNestedInput
    forms?: FormSubmissionUncheckedUpdateManyWithoutRoomNestedInput
    jobs?: JobUncheckedUpdateManyWithoutRoomNestedInput
    snags?: SnagUncheckedUpdateManyWithoutRoomNestedInput
  }

  export type RoomUncheckedUpdateManyWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumRoomTypeFieldUpdateOperationsInput | $Enums.RoomType
    nickname?: StringFieldUpdateOperationsInput | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    budgetLow?: NullableIntFieldUpdateOperationsInput | number | null
    budgetHigh?: NullableIntFieldUpdateOperationsInput | number | null
    siteAddress?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumRoomStatusFieldUpdateOperationsInput | $Enums.RoomStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DealUpdateWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutDealsNestedInput
    room?: RoomUpdateOneWithoutDealNestedInput
    owner?: UserUpdateOneRequiredWithoutOwnedDealsNestedInput
    lead?: LeadUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lead?: LeadUncheckedUpdateOneWithoutDealNestedInput
  }

  export type DealUncheckedUpdateManyWithoutStageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    roomId?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    amountGrossIncVat?: IntFieldUpdateOperationsInput | number
    vatRate?: FloatFieldUpdateOperationsInput | number
    probability?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    utm?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientCountOutputTypeDefaultArgs instead
     */
    export type ClientCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoomCountOutputTypeDefaultArgs instead
     */
    export type RoomCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoomCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PipelineStageCountOutputTypeDefaultArgs instead
     */
    export type PipelineStageCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PipelineStageCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientDefaultArgs instead
     */
    export type ClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContactDefaultArgs instead
     */
    export type ContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContactDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoomDefaultArgs instead
     */
    export type RoomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoomDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DealDefaultArgs instead
     */
    export type DealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DealDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PipelineStageDefaultArgs instead
     */
    export type PipelineStageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PipelineStageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ActivityDefaultArgs instead
     */
    export type ActivityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ActivityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TaskDefaultArgs instead
     */
    export type TaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TaskDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AppointmentDefaultArgs instead
     */
    export type AppointmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AppointmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentDefaultArgs instead
     */
    export type DocumentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DesignVersionDefaultArgs instead
     */
    export type DesignVersionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DesignVersionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ParsedSpecItemDefaultArgs instead
     */
    export type ParsedSpecItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ParsedSpecItemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SnagDefaultArgs instead
     */
    export type SnagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SnagDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobDefaultArgs instead
     */
    export type JobArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FormSubmissionDefaultArgs instead
     */
    export type FormSubmissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FormSubmissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EventLogDefaultArgs instead
     */
    export type EventLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EventLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LeadDefaultArgs instead
     */
    export type LeadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LeadDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}